[{"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js":"1","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js":"2","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js":"3","/home/ahana/DASS/job-apllication-portal/frontend/src/App.js":"4","/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js":"5","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js":"6","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js":"7","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js":"8","/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js":"9","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js":"10","/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js":"11","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Recr.js":"12","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrProfile.js":"13","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrDash.js":"14","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplicationsView.js":"15","/home/ahana/DASS/job-apllication-portal/frontend/src/components/employees.js":"16","/home/ahana/DASS/job-apllication-portal/frontend/src/components/NotFound.js":"17"},{"size":500,"mtime":1610497652423,"results":"18","hashOfConfig":"19"},{"size":7533,"mtime":1611453459156,"results":"20","hashOfConfig":"19"},{"size":7521,"mtime":1611453406732,"results":"21","hashOfConfig":"19"},{"size":1682,"mtime":1611611549140,"results":"22","hashOfConfig":"19"},{"size":13292,"mtime":1611454502941,"results":"23","hashOfConfig":"19"},{"size":1251,"mtime":1610628421771,"results":"24","hashOfConfig":"19"},{"size":22425,"mtime":1611613276490,"results":"25","hashOfConfig":"19"},{"size":17004,"mtime":1611453578691,"results":"26","hashOfConfig":"19"},{"size":362,"mtime":1610497652423,"results":"27","hashOfConfig":"19"},{"size":19307,"mtime":1611524686681,"results":"28","hashOfConfig":"19"},{"size":4162,"mtime":1611604532139,"results":"29","hashOfConfig":"19"},{"size":4453,"mtime":1611453432908,"results":"30","hashOfConfig":"19"},{"size":8200,"mtime":1611608411306,"results":"31","hashOfConfig":"19"},{"size":8386,"mtime":1611610437481,"results":"32","hashOfConfig":"19"},{"size":12560,"mtime":1611610714985,"results":"33","hashOfConfig":"19"},{"size":11000,"mtime":1611611949051,"results":"34","hashOfConfig":"19"},{"size":513,"mtime":1611611510408,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11512e0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js",[],["80","81"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js",["82","83","84","85"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n///styles\nconst classes = {\n  paper: {\n    marginTop: 10,\n      justifyContent: 'center',\n      height: '70vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: 10,\n    backgroundColor: 'red',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: 3,\n  },\n  submit: {\n    margin: 3,\n    marginTop: 15,\n    marginBottom: 15,\n  },\n};\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            pwd:'',\n            email: '',\n            role:\"\",\n            fname:\"\",\n            lname:\"\"\n        }\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeFname = this.onChangeFname.bind(this);\n        this.onChangeLname = this.onChangeLname.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n    }\n\n    componentDidMount() {\n     /* var tok = localStorage.getItem('token');\n\n      if(tok){\n        var role = localStorage.getItem('role');\n        if(role==='Applicant')\n          this.props.history.push('/aDashboard');\n        else if(role === 'Recruiter')\n          this.props.history.push('/rDashboard');\n\n      }*/\n    }\n\n    onChangeUsername(event) {\n        this.setState({ name: event.target.value });\n    }\n    onChangeFname(event) {\n        this.setState({ fname: event.target.value });\n    }\n    onChangeLname(event) {\n        this.setState({ lname: event.target.value });\n    }\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            fname: this.state.fname,\n            lname: this.state.lname,\n            email: this.state.email,\n            password: this.state.pwd,\n            date_of_reg: Date.now(),\n            role: this.state.role\n        }\n        console.log(newUser);\n\n        axios.post('http://localhost:5000/user/register', newUser)\n             .then(res => {\n                alert(\"Created basic account for \" + res.data.name+\". Please continue to complete your profile\"); \n                localStorage.setItem('token', res.data.token);\n                var role = res.data.role;\n                localStorage.setItem('role', role);\n                if(role==='Applicant')\n                  this.props.history.push('/acreateProfile');\n                else if(role === 'Recruiter')\n                  this.props.history.push('/rcreateProfile');\n                console.log(res);\n                this.setState({fname:\"\",lname:\"\", email:\"\", pwd:\"\", role:\"\"})\n\n            })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n   }\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={classes.paper}>\n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={this.state.fname}\n                onChange={this.onChangeFname}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={this.state.lname}\n                onChange={this.onChangeLname}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={this.state.pwd}\n                onChange={this.onChangePwd}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  value={this.state.role}\n                  onChange={(e)=>this.setState({role: e.target.value})}\n                  label=\"Role\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={\"Applicant\"}>Applicant</MenuItem>\n                  <MenuItem value={\"Recruiter\"}>Recruiter</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n           \n           </Container>\n        )\n    }\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js",["86","87","88","89","90","91"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '70vh',\n      alignItems: 'center',\n      alignContent: 'center'\n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            email:'',\n            pwd:''\n        }\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n      /*var tok = localStorage.getItem('token');\n      var ck = false;\n      var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (tok) {\n          config.headers['auth-tok'] = tok;\n        }\n        await axios.get('http://localhost:5000/user', config)\n             .then(res => {\n              if(res.data.check){\n                ck = true;\n                localStorage.setItem('role', res.data.role)\n              }\n            })\n             .catch(err=>{\n              if(err.response){\n                if(err.response.data.error)\n                  console.log(err.response.data.error)\n                else\n                  console.log(err.message);\n              }\n              else\n                console.log(err.message);\n             });\n\n      if(ck){\n        if(tok){\n          var role = localStorage.getItem('role');\n          console.log(role)\n          if(role==='Applicant'){\n            console.log(\"Applicant\")\n            this.props.history.push('/aDashboard');\n          }\n          else if(role === 'Recruiter')\n            this.props.history.push('/rDashboard');\n\n        }\n      }*/\n\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        axios.post('http://localhost:5000/user/login', {email:this.state.email, password:this.state.pwd})\n             .then(res => {alert(\"Welcome\\t\" + res.data.name);\n                localStorage.setItem('token', res.data.token);\n                var role = res.data.role;\n                localStorage.setItem('role', role);\n                if(role==='Applicant')\n                  this.props.history.push('/aDashboard');\n                else if(role === 'Recruiter')\n                  this.props.history.push('/rDashboard');\n              })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div style={classes.paper}>\n      \n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" >\n          Sign in\n        </Typography>\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={this.state.email}\n            onChange={this.onChangeEmail}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={this.state.pwd}\n            onChange={this.onChangePwd}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n\n          <Grid container style={{paddingTop:10}}>\n            <Grid item xs>\n              \n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n\n\n    // render(){\n    //     return(\n            \n    //             <Container>\n    //                 <img\n    //                     src={im}\n    //                     alt=\"Job application portal\"\n    //                 />\n    //                 <div>\n    //                     <Button href=\"/register\">Register</Button>\n    //                 </div>\n    //             </Container>\n            \n    //     )\n    // }\n\n    /*render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangeUsername}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.pwd}\n                               onChange={this.onChangePwd}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\n                        <Button  href=\"/register\">Register</Button>\n                    </div>\n                </form>\n           </div>\n        )\n    }*/\n",["92","93"],"/home/ahana/DASS/job-apllication-portal/frontend/src/App.js",["94","95"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js",["96","97","98","99","100","101","102","103","104","105"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport {InputTag} from './Tag.js';\n\n\n///styles\nconst classes = {\n  paper: {\n    marginTop: 10,\n      justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: 10,\n    backgroundColor: 'red',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: 3,\n  },\n  submit: {\n    margin: 3,\n    marginTop: 15,\n    marginBottom: 15,\n  },\n};\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            title:'',\n            maxAppl:50,\n            maxPos:5,\n            date:\"\",\n            time:\"00:00\",\n            duration:0,\n            type:'',\n            salary:0,\n            skills: '',\n            email: '',\n            chips: [],\n            authorized:true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onIntInputChange = this.onIntInputChange.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n    }\n\n    componentDidMount() {\n      var x = localStorage.getItem('role');\n      console.log(x);\n      if(x){\n        if(x==='Recruiter'){}\n        else{\n          this.setState({authorized:false})\n        }\n      }\n\n    }\n\n    handleDelete(chip, e){\n      console.log(chip.target);\n      var chips = this.state.chips.filter((data)=> data.key!==chip.key);\n      console.log(chips);\n      this.setState(chips)\n    }\n\n    addSkill(e){\n      if (!(e.key === 'Enter')) return;\n      var arr = this.state.chips;\n      var val = e.target.value;\n      var i = arr.findIndex((ele) => ele.key === val.toLowerCase());\n      if(i !== -1){ \n        this.setState({skills:''});\n        return;\n      }\n      arr.push({key: val.toLowerCase(), name:e.target.value});\n    //  console.log(arr);\n      this.setState({chips: arr, skills:''});\n\n    }\n\n    \n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onIntInputChange(e) {\n        this.setState({ [e.target.name] : parseInt(e.target.value)||0})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        var arr = this.state.chips.map((it)=> (it.name))\n      //  console.log(this.state.chips);\n        const newJob = {\n            \n            title: this.state.title,\n            maxPos: this.state.maxPos,\n            maxAppl: this.state.maxAppl,\n            deadline: this.state.date+\" \"+this.state.time,\n            duration: this.state.duration,\n            type: this.state.type,\n            salary: this.state.salary,\n            skills: this.state.chips,\n\n        }\n        // console.log(newJob);\n        // console.log(!this.state.title );\n        // console.log(!(this.state.date===''));\n        // console.log(!(this.state.time===\"\"))\n        // console.log(!(this.state.type));\n        // console.log(!(this.state.chips===[]));\n        if(!this.state.title || (this.state.date==='') || (this.state.time===\"\") \n          || !this.state.type || (this.state.chips===[])){\n          alert(\"Please fill all neccessary fields\");\n          return;\n        }\n        if(this.state.maxPos<=0){\n          alert(\"Maximum Positions should be greater than zero\");\n          return;\n        }\n        if(this.state.maxAppl<=0){\n          alert(\"Maximum Applications should be greater than zero\");\n          return;\n        }\n        \n\n        var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        axios.post('http://localhost:5000/recr/newJob', newJob, config)\n             .then(res => {\n               alert(\"Created job\\t\" + res.data.title);\n                this.setState({\n                  title:'',\n                  maxAppl:0,\n                  maxPos:0,\n                  date:'',\n                  time:'',\n                  duration:0,\n                  type:'',\n                  salary:0,\n                  skills: '',\n                  chips:[],\n                  email: '',\n                });\n                this.props.history.push('/rDashboard');\n\n            })\n             .catch(err => {\n              if(err.response){\n                if(err.response.data.error)\n                  alert(err.response.data.error)\n                else\n                  alert(err.message);\n              }\n              else\n                alert(err.message);\n              //  console.log(err.response.data.error);\n             })\n             ;\n   }\n\n    render() {\n    //  console.log(this.state.chips);\n      const handleDelete = (chipToDelete) => () => {\n          var x = this.state.chips.filter((chip) => chip.key !== chipToDelete.key)\n          this.setState({chips:x});\n      };\n\n      if(!this.state.authorized)\n        return(\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div style={classes.paper}>\n              \n              <Typography component=\"h1\" variant=\"h5\">\n                {\"You don't have permissions to view this page!\"}\n              </Typography>\n            </div>\n          </Container>\n          )\n\n        return (\n            <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <div style={classes.paper}>\n        \n        <Typography component=\"h1\" variant=\"h5\">\n          Create a Job\n        </Typography>\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}\n          onKeyPress={event => {\n          if (event.which === 13 /* Enter */) {\n            event.preventDefault();\n          }\n        }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"title\"\n                name=\"title\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"title\"\n                label=\"Title\"\n                autoFocus\n                value={this.state.title}\n                onChange={(e)=>this.setState({title:e.target.value})}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"maxAppl\"\n                label=\"Maximum Applications\"\n                name=\"maxAppl\"\n                type=\"number\"\n                autoComplete=\"maxAppl\"\n                value={this.state.maxAppl}\n                helperText=\"Enter positive numbers only\"\n                error={(parseInt(this.state.maxAppl)>0)?false:true}\n                onChange={this.onIntInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"maxPos\"\n                label=\"Maximum Positions\"\n                name=\"maxPos\"\n                type=\"number\"\n                autoComplete=\"maxPos\"\n                value={this.state.maxPos}\n                helperText=\"Enter positive numbers only\"\n                error={(parseInt(this.state.maxPos)>0)?false:true}\n                onChange={this.onIntInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                name=\"date\"\n                label=\"Application deadline date\"\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={this.onInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"time\"\n                name=\"time\"\n                label=\"Application deadline time\"\n                type=\"time\"\n                defaultValue = \"00:00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 300, // 5 min\n                }}\n                onChange={this.onInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <Typography>Skills*</Typography>\n                <FormControl variant=\"outlined\" required fullWidth>\n                  <Grid container spacing={1}>\n                  \n                  \n                    {this.state.chips.map((data)=>(\n                      <Grid item key={data.key}>\n                        <Chip\n                          key={data.key}\n                          label={data.name}\n                          onDelete={()=>this.handleDelete(data)}\n                        />\n                      </Grid>))\n                    }\n\n\n\n                    <Grid item>\n                      <TextField\n                        autoComplete=\"skills\"\n                        name=\"skills\"\n                        fullWidth\n                        id=\"skills\"\n                        label=\"Add a skill\"\n                        value={this.state.skills}\n                        onChange={this.onInputChange}\n                        onKeyDown = {this.addSkill}\n                      />\n                    \n                    </Grid>\n                  </Grid>\n                </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Job Type</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"type\"\n                  value={this.state.type}\n                  onChange={this.onInputChange}\n                  label=\"type\"\n\n                >\n                  <MenuItem value={\"\"}>\n                    <em>Select</em>\n                  </MenuItem>\n                  <MenuItem value={\"Full-time\"}>\n                    Full-time\n                  </MenuItem>\n                  <MenuItem value={\"Part-time\"}>Part-time</MenuItem>\n                  <MenuItem value={\"Work from Home\"}>Work from Home</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Duration</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"duration\"\n                  value={this.state.duration}\n                  onChange={this.onInputChange}\n                  label=\"duration\"\n                >\n                  <MenuItem value={0}>\n                    0(indefinite)\n                  </MenuItem>\n                  <MenuItem value={1}>1</MenuItem>\n                  <MenuItem value={2}>2</MenuItem>\n                  <MenuItem value={3}>3</MenuItem>\n                  <MenuItem value={4}>4</MenuItem>\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={6}>6</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"salary\"\n                name=\"salary\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"salary\"\n                label=\"Salary per month\"\n                type=\"number\"\n                value={this.state.salary}\n                helperText=\"Enter positive numbers only\"\n                error={(parseInt(this.state.salary)>=0)?false:true}\n                onChange={this.onIntInputChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n            Create Job\n          </Button>\n        </form>\n      </div>\n           \n           </Container>\n        )\n    }\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js",[],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js",["122","123","124","125","126","127","128","129","130","131","132","133"],"/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js",[],["134","135"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Fuse from 'fuse.js';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nclass ApplDash extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            jobs: [],\n            sortedJobs: [], \n            filtjobs:[],\n            sortSalary:true,\n            sortBy:\"salary\",\n            value:[20,1000],\n            showSop:false,\n            sop:'',\n            job:{},\n            maxSal:0,\n            filtSal:false,\n            filtType:false,\n            type:'',\n            filtDur:false,\n            duration:'',\n            desc:1,\n            recr_id:'',\n            mess:'',\n            search:'',\n        };\n        this.renderIcon = this.renderIcon.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.filtJobs = this.filtJobs.bind(this); // to filter jobs\n        this.filtAlt = this.filtAlt.bind(this);   // on change of job type and duration dropdowns\n        this.onSliderChange = this.onSliderChange.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onCheckChange = this.onCheckChange.bind(this);\n        this.apply = this.apply.bind(this); //open dialog\n        this.handleClose= this.handleClose.bind(this);  //close dialog\n        this.handleDiaSubmit = this.handleDiaSubmit.bind(this);\n        this.sortJobs = this.sortJobs.bind(this);\n        this.sortAlt = this.sortAlt.bind(this);   //on changing sort section dropdowns\n        this.loadJobs = this.loadJobs.bind(this);\n        this.fuzzySearch = this.fuzzySearch.bind(this);\n    }\n\n    loadJobs(){\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n        axios.get('http://localhost:5000/appl/',config)\n          .then(response => {\n            var array = response.data.f;\n            array.sort(function(a, b) {\n              if(a.salary != undefined && b.salary != undefined){\n                  return (-1) * (a.salary - b.salary);\n              }\n              else{\n                  return 1;\n              }\n            });\n            this.setState({\n              jobs: array, \n              sortedJobs:array,\n              filtjobs:array,\n              maxSal:array[0].salary,\n              mess: response.data.mess\n            });\n          })\n          .catch(function(error) {\n            console.log(error);\n          })\n    }\n\n    componentDidMount() {\n      this.loadJobs();\n    }\n\n    handleChange(e,n){\n      //  console.log(n);\n       \n        this.setState({\n            value:n,\n        })\n    }\n\n    handleClose(e){\n      e.preventDefault();\n      this.setState({\n        sop:'',\n        showSop:false,\n        jobId:'',\n        jobTitle:'',\n        jobSal:'',\n        job:{}\n\n      });\n    }\n\n    handleDiaSubmit(e){\n      e.preventDefault();\n\n      var arr = this.state.sop.split(' ');\n      if(arr.length>250){\n        alert(\"Sop exceeded 250 words!\");\n        return;\n      }\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        var data = {\n          sop:this.state.sop, \n          job_id:this.state.job._id, \n          recr_id:this.state.job.recr_id,\n          job_title:this.state.job.title,\n          job_salary:this.state.job.salary,\n          job_type:this.state.job.type\n        }\n\n      axios.post('http://localhost:5000/appl/apply',data, config)\n          .then(response => {\n            \n            this.setState({\n              showSop:false,\n              sop:'',\n              job:{}\n            });\n            this.loadJobs();\n            alert(\"Submitted application!\");\n\n          })\n          .catch(function(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again\");\n          })\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    async onCheckChange(event) {\n        await this.setState({ [event.target.name]: event.target.checked });\n        this.filtJobs();\n    }\n\n    apply(job, e){\n      if(this.state.mess!==''){\n        alert(this.state.mess);\n        return;\n      }\n      this.setState({showSop:true, job:job})\n    }\n\n    async filtAlt(e){\n      await this.setState({ [e.target.name]: e.target.value });\n      this.filtJobs();\n    }\n\n    async onSliderChange(e,n){\n      await this.setState({value:n})\n      this.filtJobs()\n    }\n\n    filtJobs(){\n      var arr = this.state.jobs;\n      \n      var filt = [];\n      if(this.state.filtSal){\n        var n = this.state.value\n        arr = arr.filter((job, i)=>(job.salary>=n[0] && job.salary<=n[1]))\n      }\n      if(this.state.filtType){\n        arr = arr.filter((job, i)=>(job.type===this.state.type))\n      }\n      if(this.state.filtDur){\n        arr = arr.filter((job, i)=>(job.duration<this.state.duration))\n      }\n      \n        if (this.state.search) {\n          const fuse = new Fuse(arr, {\n            keys: [\n                'title'\n            ]\n          });\n            var filteredListings = fuse.search(this.state.search)\n            arr = filteredListings.map((listing) => listing.item)\n        }\n      this.setState({\n        filtjobs:arr\n      })\n    }\n\n    fuzzySearch(e){\n      var arr = this.state.jobs;\n      var text = e.target.value;\n      \n      var filt = [];\n      if(this.state.filtSal){\n        var n = this.state.value\n        arr = arr.filter((job, i)=>(job.salary>=n[0] && job.salary<=n[1]))\n      }\n      if(this.state.filtType){\n        arr = arr.filter((job, i)=>(job.type===this.state.type))\n      }\n      if(this.state.filtDur){\n        arr = arr.filter((job, i)=>(job.duration<this.state.duration))\n      }\n      \n        if (text) {\n          const fuse = new Fuse(arr, {\n            keys: [\n                'title'\n            ]\n          });\n            var filteredListings = fuse.search(text)\n            arr = filteredListings.map((listing) => listing.item)\n        }\n      this.setState({\n        filtjobs:arr,\n        search: text\n      })\n    }\n\n    async sortAlt(e){\n      await this.setState({ [e.target.name]: e.target.value });\n      this.sortJobs();\n    }\n\n    sortJobs(){\n/**\n *      Note that this is sorting only at front-end.\n */\n        var array = this.state.filtjobs;\n        var flag = this.state.desc ;  //when desc 1 we have to \n                                // sort in desc. sort will be in desc if flag=1\n        var sb = this.state.sortBy;\n        if(sb===\"salary\"){\n          array.sort(function(a, b) {\n            if(a.salary != undefined && b.salary != undefined){\n                return (1 - flag*2) * (a.salary - b.salary);\n            }\n            else{\n                return 1;\n            }\n          });\n        }\n        else if(sb ===\"duration\"){\n          array.sort(function(a, b) {\n            if(a.duration != undefined && b.duration != undefined){\n                return (1 - flag*2) * (a.duration - b.duration);\n            }\n            else{\n                return 1;\n            }\n          });\n        }\n        else if(sb ===\"rating\"){\n          array.sort(function(a, b) {\n            if(a.rating != undefined && b.rating != undefined){\n                return (1 - flag*2) * (a.rating - b.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        }\n        //console.log(flag)\n        this.setState({\n            filtjobs:array,\n            sortSalary:!this.state.sortSalary,\n        })\n    }\n\n    renderIcon(){\n        if(this.state.sortSalary){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    render() {\n      return (\n        <div style={{flexGrow:1,display:'flex', flexDirection: 'column'}}>\n          <Typography component=\"h1\" variant=\"h4\" style={{marginBottom:10}}>\n          Dashboard\n        </Typography>\n\n        <Dialog open={this.state.showSop} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Submit application</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <TextField\n              autoFocus\n              id=\"sop\"\n              label=\"Statement of Purpose\"\n              fullWidth\n              name= \"sop\"\n              required\n              multiline\n              rows={4}\n              value={this.state.sop}\n              onChange={ this.onInputChange}\n            />\n            </Grid>\n           \n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleDiaSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n\n        <Grid container spacing={1}>\n        <Grid item xs={12} md={9}>\n          <Paper style={{textAlign:'center', marginBottom:10, padding:10}}>\n          <Grid container spacing={1}>\n          <Grid item xs={12}>\n          <Typography> FILTER:</Typography>\n          </Grid>\n          <Grid item xs={6} md={4}>\n          <Paper elevation={0} style={{textAlign:'center'}}>\n          <FormControlLabel\n                control={<Checkbox color=\"primary\" \n                name=\"filtSal\"\n                checked={this.state.filtSal}\n                onChange={this.onCheckChange}/>}\n                label=\"Salary\"\n                labelPlacement=\"bottom\"\n              />\n          <Slider\n                max={this.state.maxSal?this.state.maxSal+500:10000}\n                value={this.state.value}\n                onChange={this.handleChange}\n                onChangeCommitted={this.filtJobs}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n              />\n              </Paper>\n              </Grid>\n              <Grid item xs={4}>\n              <Paper elevation={0} style={{textAlign:'center'}}>\n                <FormControlLabel\n                control={<Checkbox color=\"primary\" \n                name=\"filtType\"\n                checked={this.state.filtType}\n                onChange={this.onCheckChange}/>}\n                label=\"Job Type\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControl variant=\"outlined\" fullWidth>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"type\"\n                  value={this.state.type}\n                  onChange={this.filtAlt}\n\n                >\n                  <MenuItem value={\"\"}>\n                    <em>Select</em>\n                  </MenuItem>\n                  <MenuItem value={\"Full-time\"}>\n                    Full-time\n                  </MenuItem>\n                  <MenuItem value={\"Part-time\"}>Part-time</MenuItem>\n                  <MenuItem value={\"Work from Home\"}>Work from Home</MenuItem>\n                </Select>\n              </FormControl>\n              </Paper>\n              </Grid>\n\n              <Grid item xs={4}>\n                <Paper elevation={0} style={{textAlign:'center'}}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" \n                name=\"filtDur\"\n                checked={this.state.filtDur}\n                onChange={this.onCheckChange}/>}\n                label=\"Duration less than:\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControl variant=\"outlined\" fullWidth>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"duration\"\n                  value={this.state.duration}\n                  onChange={this.filtAlt}\n                >\n                  <MenuItem value={1}>1</MenuItem>\n                  <MenuItem value={2}>2</MenuItem>\n                  <MenuItem value={3}>3</MenuItem>\n                  <MenuItem value={4}>4</MenuItem>\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={6}>6</MenuItem>\n                  <MenuItem value={7}>7</MenuItem>\n                </Select>\n              </FormControl>\n              </Paper>\n\n              </Grid>\n              </Grid>\n              </Paper>\n              </Grid>\n\n          <Grid item xs={12} md={3}>\n          <Paper style={{textAlign:'center', paddingTop:10, marginBottom:5}}>\n          <Grid container spacing={0}>\n          <Grid item xs={6}>\n          <Typography> SORT: </Typography>\n          </Grid>\n          <Grid item xs={6}>\n          <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"desc\"\n                  value={this.state.desc}\n                  onChange={this.sortAlt}\n                >\n                  <MenuItem value={0}>\n                    Ascending\n                  </MenuItem>\n                  <MenuItem value={1}>Descending</MenuItem>\n          </Select>\n          </Grid>\n          <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n  <RadioGroup aria-label=\"sort\" name=\"sortBy\" value={this.state.sortBy} onChange={this.sortAlt}>\n    <FormControlLabel value=\"salary\" control={<Radio />} label=\"Salary\" />\n    <FormControlLabel value=\"duration\" control={<Radio />} label=\"Duration\" />\n    <FormControlLabel value=\"rating\" control={<Radio />} label=\"Rating\" />\n  </RadioGroup>\n</FormControl>\n        </Grid>\n        </Grid>\n        </Paper>\n          </Grid>\n          <Grid item xs={12} md={9} lg={9}>\n            <List component=\"nav\" aria-label=\"mailbox folders\">\n                <TextField \n                id=\"standard-basic\" \n                name=\"search\"\n                label=\"Search title\" \n                fullWidth={true}   \n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment>\n                            <IconButton>\n                                <SearchIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    )}}\n                value={this.state.search}\n                onChange={this.fuzzySearch}\n                />\n            </List>\n            </Grid>\n          \n          </Grid>\n          <Grid container>\n            <Grid item xs={12} md={12} lg={12}>\n              <Paper>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Title</TableCell>\n                      <TableCell>Recruiter Name @ Email</TableCell>\n                      <TableCell>Date of posting</TableCell>\n                      <TableCell>Deadline for application</TableCell>\n                      <TableCell>Required Skills</TableCell>\n                      <TableCell>Type of Job</TableCell>\n                      <TableCell>Duration</TableCell>\n                      <TableCell> Salary</TableCell>\n                      <TableCell>Rating</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {this.state.filtjobs.map((job,ind) => (\n                      <TableRow key={job._id}>\n                        <TableCell>{job.title}</TableCell>\n                        <TableCell>{job.recr_id.fname+\" \"+job.recr_id.lname+\" @ \"+job.recr_id.email}</TableCell>\n                        <TableCell>{job.date_of_post}</TableCell>\n                        <TableCell>\n                          {job.deadline}\n                          {(job.applied)?(<Chip label=\"Applied\"/>):((job.maxAppl-job.appl_got)<=0)||((job.maxPos-job.posn_filled)<=0)?\n                            (\n                            <Button\n                              size=\"small\"\n                              color=\"secondary\">\n                              Filled\n                            </Button>\n                            ):(\n                            <Button\n                              size=\"small\"\n                              onClick={(e)=>this.apply(job,e)}\n                              style={{backgroundColor:'green', color:'white'}}>\n                              Apply\n                            </Button>\n                            )}\n                        </TableCell>\n                        <TableCell>{job.skills.map((data)=>(\n                          <Chip\n                            key={data.key}\n                            label={data.name}\n                          />\n                        ))}</TableCell>\n                        <TableCell>{job.type}</TableCell>\n                        <TableCell>{job.duration?job.duration:\"0(indefinite)\"}</TableCell>\n                        <TableCell>{job.salary}</TableCell>\n                        <TableCell>{job.rating}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Paper>               \n            </Grid>    \n          </Grid>            \n        </div>\n      )\n    }\n}\n\nexport default ApplDash;","/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js",["152","153","154","155","156","157","158","159","160","161","162"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Rating from '@material-ui/lab/Rating';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nclass UsersList extends Component {\n    \n  constructor(props) {\n      super(props);\n      this.state = {\n        applications: [],\n      };\n      this.addRating = this.addRating.bind(this);\n  }\n\n  componentDidMount() {\n    var token = localStorage.getItem('token');\n\n      // Headers\n    var config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }\n\n    // If token, add to headers\n    if (token) {\n      config.headers['auth-tok'] = token;\n    }\n    axios.get('http://localhost:5000/appl/applications',config)\n         .then(response => {\n             this.setState({applications: response.data});\n         })\n         .catch(function(error) {\n             console.log(error);\n         })\n  }\n\n\n  addRating(newValue, a, event){\n    var token = localStorage.getItem('token');\n\n      // Headers\n      var config = {\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }\n\n      // If token, add to headers\n      if (token) {\n        config.headers['auth-tok'] = token;\n      }\n      axios.post(`http://localhost:5000/appl/rate/${a._id}`, {rating:newValue}, config)\n         .then(response => {\n            var temp= this.state.applications.map(x=> x._id===a._id?{...x, job_rating: newValue}:x);\n            this.setState({applications:temp});\n         })\n         .catch(function(error) {\n             console.log(error);\n         })\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n            \n          <Grid item xs={12} >\n            <Paper>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell> Title</TableCell>\n                    <TableCell>Name of recruiter</TableCell>\n                    <TableCell> Salary</TableCell>\n                    <TableCell>Application Stage</TableCell>\n                    <TableCell>Date of joining</TableCell>\n                    <TableCell>You rated the job</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.applications.map((data,ind) => (\n                      <TableRow key={ind}>\n                        <TableCell>{data.job_title}</TableCell>\n                        <TableCell>{data.recr_id.fname}</TableCell>\n                        <TableCell>{data.job_salary}</TableCell>\n                        <TableCell>{data.stage}</TableCell>\n                        <TableCell>{data.doj}</TableCell>\n                        <TableCell>\n                          <Rating\n                            name=\"simple-controlled\"\n                            value={data.job_rating}\n                            onChange={(event, newValue) => {this.addRating(newValue,data,event)}}\n                            readOnly={data.job_rating}\n                          />\n                        </TableCell>\n                      </TableRow>\n                ))}\n                </TableBody>\n              </Table>\n            </Paper>               \n          </Grid>    \n        </Grid>            \n      </div>\n      )\n  }\n}\n\nexport default UsersList;","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Recr.js",["163","164","165","166","167","168","169","170","171"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n     paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            contact:'',\n            bio:''\n        }\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n      \n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onSubmit(e) {\n\n        e.preventDefault();\n        var arr = this.state.bio.split(' ');\n      if(arr.length>250){\n        alert(\"Bio exceeded 250 words!\");\n        return;\n      }\n\n        var token = localStorage.getItem('token');\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n        var data = this.state;\n        axios.post('http://localhost:5000/recr/newProfile', data, config)\n             .then(res => {\n                alert(\"Profile created!\");\n                \n                this.props.history.push('/rDashboard');\n              })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\n          Profile\n        </Typography>\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          You must fill this form to continue\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"contact\"\n            label=\"Contact number\"\n            name=\"contact\"\n            autoFocus\n            value={this.state.contact}\n            onChange={this.onInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            multiline\n            rows={4}\n            name=\"bio\"\n            label=\"Bio (max 250 words)\"\n            id=\"bio\"\n            value={this.state.bio}\n            onChange={this.onInputChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Create profile\n          </Button>\n        </form>\n      </Paper>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n\n",["172","173"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrProfile.js",["174","175","176","177","178","179","180","181"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrDash.js",["182","183","184","185"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplicationsView.js",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/employees.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/NotFound.js",["231","232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"237","severity":1,"message":"241","line":9,"column":8,"nodeType":"239","messageId":"240","endLine":9,"endColumn":16},{"ruleId":"237","severity":1,"message":"242","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":11},{"ruleId":"237","severity":1,"message":"243","line":18,"column":10,"nodeType":"239","messageId":"240","endLine":18,"endColumn":20},{"ruleId":"237","severity":1,"message":"244","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":10},{"ruleId":"237","severity":1,"message":"238","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"237","severity":1,"message":"241","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":16},{"ruleId":"237","severity":1,"message":"245","line":14,"column":10,"nodeType":"239","messageId":"240","endLine":14,"endColumn":20},{"ruleId":"237","severity":1,"message":"243","line":14,"column":22,"nodeType":"239","messageId":"240","endLine":14,"endColumn":32},{"ruleId":"237","severity":1,"message":"246","line":21,"column":5,"nodeType":"239","messageId":"240","endLine":21,"endColumn":7},{"ruleId":"233","replacedBy":"247"},{"ruleId":"235","replacedBy":"248"},{"ruleId":"237","severity":1,"message":"249","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":12},{"ruleId":"237","severity":1,"message":"250","line":4,"column":42,"nodeType":"239","messageId":"240","endLine":4,"endColumn":46},{"ruleId":"237","severity":1,"message":"251","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"237","severity":1,"message":"241","line":9,"column":8,"nodeType":"239","messageId":"240","endLine":9,"endColumn":16},{"ruleId":"237","severity":1,"message":"250","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":12},{"ruleId":"237","severity":1,"message":"242","line":16,"column":8,"nodeType":"239","messageId":"240","endLine":16,"endColumn":11},{"ruleId":"237","severity":1,"message":"252","line":17,"column":8,"nodeType":"239","messageId":"240","endLine":17,"endColumn":24},{"ruleId":"237","severity":1,"message":"243","line":19,"column":10,"nodeType":"239","messageId":"240","endLine":19,"endColumn":20},{"ruleId":"237","severity":1,"message":"253","line":22,"column":9,"nodeType":"239","messageId":"240","endLine":22,"endColumn":17},{"ruleId":"237","severity":1,"message":"254","line":119,"column":13,"nodeType":"239","messageId":"240","endLine":119,"endColumn":16},{"ruleId":"237","severity":1,"message":"255","line":203,"column":13,"nodeType":"239","messageId":"240","endLine":203,"endColumn":25},{"ruleId":"237","severity":1,"message":"244","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":10},{"ruleId":"237","severity":1,"message":"251","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"237","severity":1,"message":"242","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":11},{"ruleId":"237","severity":1,"message":"252","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":24},{"ruleId":"237","severity":1,"message":"245","line":15,"column":10,"nodeType":"239","messageId":"240","endLine":15,"endColumn":20},{"ruleId":"237","severity":1,"message":"243","line":15,"column":22,"nodeType":"239","messageId":"240","endLine":15,"endColumn":32},{"ruleId":"237","severity":1,"message":"256","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":25},{"ruleId":"237","severity":1,"message":"257","line":22,"column":8,"nodeType":"239","messageId":"240","endLine":22,"endColumn":15},{"ruleId":"237","severity":1,"message":"246","line":30,"column":5,"nodeType":"239","messageId":"240","endLine":30,"endColumn":7},{"ruleId":"237","severity":1,"message":"258","line":32,"column":10,"nodeType":"239","messageId":"240","endLine":32,"endColumn":19},{"ruleId":"237","severity":1,"message":"259","line":207,"column":13,"nodeType":"239","messageId":"240","endLine":207,"endColumn":14},{"ruleId":"237","severity":1,"message":"260","line":565,"column":23,"nodeType":"239","messageId":"240","endLine":565,"endColumn":24},{"ruleId":"237","severity":1,"message":"261","line":566,"column":23,"nodeType":"239","messageId":"240","endLine":566,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":597,"column":29,"nodeType":"239","messageId":"264","endLine":597,"endColumn":35},{"ruleId":"262","severity":1,"message":"263","line":608,"column":27,"nodeType":"239","messageId":"264","endLine":608,"endColumn":33},{"ruleId":"237","severity":1,"message":"251","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":24},{"ruleId":"237","severity":1,"message":"242","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":11},{"ruleId":"237","severity":1,"message":"252","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":24},{"ruleId":"237","severity":1,"message":"256","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":25},{"ruleId":"237","severity":1,"message":"257","line":22,"column":8,"nodeType":"239","messageId":"240","endLine":22,"endColumn":15},{"ruleId":"237","severity":1,"message":"258","line":28,"column":10,"nodeType":"239","messageId":"240","endLine":28,"endColumn":19},{"ruleId":"237","severity":1,"message":"259","line":159,"column":13,"nodeType":"239","messageId":"240","endLine":159,"endColumn":14},{"ruleId":"237","severity":1,"message":"260","line":410,"column":23,"nodeType":"239","messageId":"240","endLine":410,"endColumn":24},{"ruleId":"237","severity":1,"message":"261","line":411,"column":23,"nodeType":"239","messageId":"240","endLine":411,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":442,"column":29,"nodeType":"239","messageId":"264","endLine":442,"endColumn":35},{"ruleId":"262","severity":1,"message":"263","line":453,"column":27,"nodeType":"239","messageId":"264","endLine":453,"endColumn":33},{"ruleId":"233","replacedBy":"265"},{"ruleId":"235","replacedBy":"266"},{"ruleId":"237","severity":1,"message":"267","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":16},{"ruleId":"237","severity":1,"message":"257","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":15},{"ruleId":"237","severity":1,"message":"268","line":16,"column":8,"nodeType":"239","messageId":"240","endLine":16,"endColumn":20},{"ruleId":"237","severity":1,"message":"256","line":24,"column":8,"nodeType":"239","messageId":"240","endLine":24,"endColumn":25},{"ruleId":"237","severity":1,"message":"269","line":26,"column":8,"nodeType":"239","messageId":"240","endLine":26,"endColumn":17},{"ruleId":"237","severity":1,"message":"270","line":28,"column":8,"nodeType":"239","messageId":"240","endLine":28,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":101,"column":27,"nodeType":"273","messageId":"274","endLine":101,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":101,"column":52,"nodeType":"273","messageId":"274","endLine":101,"endColumn":54},{"ruleId":"237","severity":1,"message":"275","line":224,"column":11,"nodeType":"239","messageId":"240","endLine":224,"endColumn":15},{"ruleId":"237","severity":1,"message":"275","line":254,"column":11,"nodeType":"239","messageId":"240","endLine":254,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":296,"column":25,"nodeType":"273","messageId":"274","endLine":296,"endColumn":27},{"ruleId":"271","severity":1,"message":"272","line":296,"column":50,"nodeType":"273","messageId":"274","endLine":296,"endColumn":52},{"ruleId":"271","severity":1,"message":"272","line":306,"column":27,"nodeType":"273","messageId":"274","endLine":306,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":306,"column":54,"nodeType":"273","messageId":"274","endLine":306,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":316,"column":25,"nodeType":"273","messageId":"274","endLine":316,"endColumn":27},{"ruleId":"271","severity":1,"message":"272","line":316,"column":50,"nodeType":"273","messageId":"274","endLine":316,"endColumn":52},{"ruleId":"237","severity":1,"message":"276","line":10,"column":8,"nodeType":"239","messageId":"240","endLine":10,"endColumn":14},{"ruleId":"237","severity":1,"message":"277","line":11,"column":8,"nodeType":"239","messageId":"240","endLine":11,"endColumn":17},{"ruleId":"237","severity":1,"message":"278","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":12},{"ruleId":"237","severity":1,"message":"267","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":16},{"ruleId":"237","severity":1,"message":"257","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":15},{"ruleId":"237","severity":1,"message":"268","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":20},{"ruleId":"237","severity":1,"message":"279","line":16,"column":8,"nodeType":"239","messageId":"240","endLine":16,"endColumn":18},{"ruleId":"237","severity":1,"message":"280","line":17,"column":8,"nodeType":"239","messageId":"240","endLine":17,"endColumn":22},{"ruleId":"237","severity":1,"message":"281","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":18},{"ruleId":"237","severity":1,"message":"282","line":21,"column":8,"nodeType":"239","messageId":"240","endLine":21,"endColumn":23},{"ruleId":"237","severity":1,"message":"283","line":22,"column":8,"nodeType":"239","messageId":"240","endLine":22,"endColumn":25},{"ruleId":"237","severity":1,"message":"244","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":10},{"ruleId":"237","severity":1,"message":"251","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"237","severity":1,"message":"241","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":16},{"ruleId":"237","severity":1,"message":"284","line":10,"column":8,"nodeType":"239","messageId":"240","endLine":10,"endColumn":12},{"ruleId":"237","severity":1,"message":"252","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":24},{"ruleId":"237","severity":1,"message":"245","line":15,"column":10,"nodeType":"239","messageId":"240","endLine":15,"endColumn":20},{"ruleId":"237","severity":1,"message":"243","line":15,"column":22,"nodeType":"239","messageId":"240","endLine":15,"endColumn":32},{"ruleId":"237","severity":1,"message":"246","line":22,"column":5,"nodeType":"239","messageId":"240","endLine":22,"endColumn":7},{"ruleId":"233","replacedBy":"285"},{"ruleId":"235","replacedBy":"286"},{"ruleId":"237","severity":1,"message":"244","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":10},{"ruleId":"237","severity":1,"message":"251","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"237","severity":1,"message":"241","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":16},{"ruleId":"237","severity":1,"message":"252","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":24},{"ruleId":"237","severity":1,"message":"245","line":15,"column":10,"nodeType":"239","messageId":"240","endLine":15,"endColumn":20},{"ruleId":"237","severity":1,"message":"243","line":15,"column":22,"nodeType":"239","messageId":"240","endLine":15,"endColumn":32},{"ruleId":"237","severity":1,"message":"246","line":22,"column":5,"nodeType":"239","messageId":"240","endLine":22,"endColumn":7},{"ruleId":"237","severity":1,"message":"287","line":11,"column":27,"nodeType":"239","messageId":"240","endLine":11,"endColumn":33},{"ruleId":"237","severity":1,"message":"288","line":11,"column":35,"nodeType":"239","messageId":"240","endLine":11,"endColumn":40},{"ruleId":"289","severity":1,"message":"290","line":52,"column":60,"nodeType":"291","messageId":"292","endLine":52,"endColumn":61,"fix":"293"},{"ruleId":"271","severity":1,"message":"272","line":87,"column":55,"nodeType":"273","messageId":"274","endLine":87,"endColumn":57},{"ruleId":"237","severity":1,"message":"277","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":17},{"ruleId":"237","severity":1,"message":"257","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":15},{"ruleId":"237","severity":1,"message":"268","line":16,"column":8,"nodeType":"239","messageId":"240","endLine":16,"endColumn":20},{"ruleId":"237","severity":1,"message":"279","line":17,"column":8,"nodeType":"239","messageId":"240","endLine":17,"endColumn":18},{"ruleId":"237","severity":1,"message":"280","line":18,"column":8,"nodeType":"239","messageId":"240","endLine":18,"endColumn":22},{"ruleId":"237","severity":1,"message":"270","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":17},{"ruleId":"237","severity":1,"message":"287","line":27,"column":27,"nodeType":"239","messageId":"240","endLine":27,"endColumn":33},{"ruleId":"237","severity":1,"message":"288","line":27,"column":35,"nodeType":"239","messageId":"240","endLine":27,"endColumn":40},{"ruleId":"237","severity":1,"message":"250","line":27,"column":42,"nodeType":"239","messageId":"240","endLine":27,"endColumn":46},{"ruleId":"237","severity":1,"message":"281","line":29,"column":8,"nodeType":"239","messageId":"240","endLine":29,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":72,"column":35,"nodeType":"273","messageId":"274","endLine":72,"endColumn":37},{"ruleId":"271","severity":1,"message":"272","line":72,"column":66,"nodeType":"273","messageId":"274","endLine":72,"endColumn":68},{"ruleId":"271","severity":1,"message":"272","line":159,"column":23,"nodeType":"273","messageId":"274","endLine":159,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":159,"column":46,"nodeType":"273","messageId":"274","endLine":159,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":169,"column":31,"nodeType":"273","messageId":"274","endLine":169,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":169,"column":62,"nodeType":"273","messageId":"274","endLine":169,"endColumn":64},{"ruleId":"271","severity":1,"message":"272","line":179,"column":33,"nodeType":"273","messageId":"274","endLine":179,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":179,"column":66,"nodeType":"273","messageId":"274","endLine":179,"endColumn":68},{"ruleId":"271","severity":1,"message":"272","line":201,"column":23,"nodeType":"273","messageId":"274","endLine":201,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":201,"column":46,"nodeType":"273","messageId":"274","endLine":201,"endColumn":48},{"ruleId":"237","severity":1,"message":"276","line":10,"column":8,"nodeType":"239","messageId":"240","endLine":10,"endColumn":14},{"ruleId":"237","severity":1,"message":"294","line":11,"column":8,"nodeType":"239","messageId":"240","endLine":11,"endColumn":12},{"ruleId":"237","severity":1,"message":"277","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":17},{"ruleId":"237","severity":1,"message":"278","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":12},{"ruleId":"237","severity":1,"message":"267","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":16},{"ruleId":"237","severity":1,"message":"268","line":16,"column":8,"nodeType":"239","messageId":"240","endLine":16,"endColumn":20},{"ruleId":"237","severity":1,"message":"279","line":17,"column":8,"nodeType":"239","messageId":"240","endLine":17,"endColumn":18},{"ruleId":"237","severity":1,"message":"280","line":18,"column":8,"nodeType":"239","messageId":"240","endLine":18,"endColumn":22},{"ruleId":"237","severity":1,"message":"270","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":17},{"ruleId":"237","severity":1,"message":"287","line":28,"column":27,"nodeType":"239","messageId":"240","endLine":28,"endColumn":33},{"ruleId":"237","severity":1,"message":"288","line":28,"column":35,"nodeType":"239","messageId":"240","endLine":28,"endColumn":40},{"ruleId":"237","severity":1,"message":"250","line":28,"column":42,"nodeType":"239","messageId":"240","endLine":28,"endColumn":46},{"ruleId":"237","severity":1,"message":"281","line":30,"column":8,"nodeType":"239","messageId":"240","endLine":30,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":70,"column":26,"nodeType":"273","messageId":"274","endLine":70,"endColumn":28},{"ruleId":"271","severity":1,"message":"272","line":70,"column":48,"nodeType":"273","messageId":"274","endLine":70,"endColumn":50},{"ruleId":"271","severity":1,"message":"272","line":103,"column":23,"nodeType":"273","messageId":"274","endLine":103,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":103,"column":46,"nodeType":"273","messageId":"274","endLine":103,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":113,"column":28,"nodeType":"273","messageId":"274","endLine":113,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":113,"column":56,"nodeType":"273","messageId":"274","endLine":113,"endColumn":58},{"ruleId":"271","severity":1,"message":"272","line":123,"column":22,"nodeType":"273","messageId":"274","endLine":123,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":123,"column":44,"nodeType":"273","messageId":"274","endLine":123,"endColumn":46},{"ruleId":"271","severity":1,"message":"272","line":133,"column":33,"nodeType":"273","messageId":"274","endLine":133,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":133,"column":66,"nodeType":"273","messageId":"274","endLine":133,"endColumn":68},{"ruleId":"271","severity":1,"message":"272","line":155,"column":23,"nodeType":"273","messageId":"274","endLine":155,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":155,"column":46,"nodeType":"273","messageId":"274","endLine":155,"endColumn":48},{"ruleId":"237","severity":1,"message":"295","line":2,"column":9,"nodeType":"239","messageId":"240","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"297","line":6,"column":5,"nodeType":"298","messageId":"299","endLine":9,"endColumn":6},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'im' is defined but never used.","'withStyles' is defined but never used.","'hi' is assigned a value but never used.",["300"],["301"],"'logo' is defined but never used.","'Link' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'InputTag' is defined but never used.","'arr' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'DialogContentText' is defined but never used.","'Divider' is defined but never used.","'Copyright' is defined but never used.","'y' is assigned a value but never used.","'x' is assigned a value but never used.","'p' is assigned a value but never used.","no-redeclare","'skiInd' is already defined.","redeclared",["300"],["301"],"'ListItem' is defined but never used.","'Autocomplete' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'filt' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SearchIcon' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'Grid' is defined but never used.",["300"],["301"],"'Router' is defined but never used.","'Route' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"302","text":"303"},"'Chip' is defined but never used.","'Paper' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",[1515,1516],""]