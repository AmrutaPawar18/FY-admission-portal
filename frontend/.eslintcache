[{"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\index.js":"1","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\App.js":"3","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\Home.js":"4","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RegPart2Recr.js":"5","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RegPart2Appl.js":"6","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplDash.js":"7","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\Register.js":"8","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\createJob.js":"9","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RecrDash.js":"10","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\MyAppl.js":"11","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\employees.js":"12","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\NotFound.js":"13","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplProfile.js":"14","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RecrProfile.js":"15","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplicationsView.js":"16","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RecrNavbar.js":"17","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\Tag.js":"18","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplNavbar.js":"19"},{"size":517,"mtime":1728913307957,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1728913307957,"results":"22","hashOfConfig":"21"},{"size":1726,"mtime":1728973723455,"results":"23","hashOfConfig":"21"},{"size":9162,"mtime":1728976849180,"results":"24","hashOfConfig":"21"},{"size":4639,"mtime":1728913307948,"results":"25","hashOfConfig":"21"},{"size":24039,"mtime":1728913307948,"results":"26","hashOfConfig":"21"},{"size":20111,"mtime":1728977427270,"results":"27","hashOfConfig":"21"},{"size":11764,"mtime":1728976005563,"results":"28","hashOfConfig":"21"},{"size":13827,"mtime":1728913307955,"results":"29","hashOfConfig":"21"},{"size":8809,"mtime":1728913307940,"results":"30","hashOfConfig":"21"},{"size":4455,"mtime":1728913307940,"results":"31","hashOfConfig":"21"},{"size":11399,"mtime":1728913307956,"results":"32","hashOfConfig":"21"},{"size":536,"mtime":1728913307940,"results":"33","hashOfConfig":"21"},{"size":22101,"mtime":1728977424829,"results":"34","hashOfConfig":"21"},{"size":8578,"mtime":1728913307948,"results":"35","hashOfConfig":"21"},{"size":13323,"mtime":1728913307940,"results":"36","hashOfConfig":"21"},{"size":2260,"mtime":1728913307948,"results":"37","hashOfConfig":"21"},{"size":1303,"mtime":1728913307953,"results":"38","hashOfConfig":"21"},{"size":2339,"mtime":1728913307940,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"zhb4au",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":1,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\index.js",[],["90","91"],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\App.js",["92","93"],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\Home.js",["94","95","96","97","98"],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RegPart2Recr.js",["99","100","101","102","103","104","105","106","107"],"import React, {Component} from 'react';\r\nimport im from '../static/bk9.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport axios from 'axios';\r\n\r\n/**/\r\n\r\nvar hi = []\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"\">\r\n        Headless Hunt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst classes = {\r\n     paper: {\r\n      padding:'5%', \r\n      justifyContent:'center', \r\n      alignItems:'center', \r\n      display:'flex', \r\n      flexDirection:'column', \r\n      marginTop:'10%'    \r\n    },\r\n    avatar: {\r\n      margin: 10,\r\n      alignSelf: 'center',\r\n      backgroundColor: 'red',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: 1,\r\n    },\r\n    submit: {\r\n      marginBottom: 10\r\n    },\r\n  };\r\n  \r\nexport default class Home extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contact:'',\r\n            bio:''\r\n        }\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        var arr = this.state.bio.split(' ');\r\n      if(arr.length>250){\r\n        alert(\"Bio exceeded 250 words!\");\r\n        return;\r\n      }\r\n\r\n        var token = localStorage.getItem('token');\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n        var data = this.state;\r\n        axios.post('http://localhost:5000/recr/newProfile', data, config)\r\n             .then(res => {\r\n                alert(\"Profile created!\");\r\n                \r\n                this.props.history.push('/rDashboard');\r\n              })\r\n             .catch(err => {\r\n                if(err.response){\r\n                    if(err.response.data.error)\r\n                      alert(err.response.data.error)\r\n                    else\r\n                      alert(err.response.message);\r\n                  }\r\n                  \r\n                  else\r\n                    alert(err.message);  \r\n             })\r\n             ;\r\n    }\r\n\r\nrender() {\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <CssBaseline/>\r\n      <Paper style={classes.paper}>\r\n      \r\n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\r\n          Profile\r\n        </Typography>\r\n        \r\n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\r\n          You must fill this form to continue\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"contact\"\r\n            label=\"Contact number\"\r\n            name=\"contact\"\r\n            autoFocus\r\n            value={this.state.contact}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            name=\"bio\"\r\n            label=\"Bio (max 250 words)\"\r\n            id=\"bio\"\r\n            value={this.state.bio}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Create profile\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n      <Box mt={7}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n}\r\n\r\n","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RegPart2Appl.js",["108","109","110","111","112","113","114","115","116","117","118","119"],"import React, {Component} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport axios from 'axios';\r\n\r\n/**/\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst classes = {\r\n    paper: {\r\n      padding:'5%', \r\n      justifyContent:'center', \r\n      alignItems:'center', \r\n      display:'flex', \r\n      flexDirection:'column', \r\n      marginTop:'10%'    \r\n    },\r\n    avatar: {\r\n      margin: 10,\r\n      alignSelf: 'center',\r\n      backgroundColor: 'red',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: 1,\r\n    },\r\n    submit: {\r\n      marginBottom: 10,\r\n      marginTop: 10,\r\n    },\r\n  };\r\n  \r\nconst conf = {\r\n  ignoreCase:true,\r\n  trim: true\r\n}\r\nconst filter = createFilterOptions(conf);\r\n\r\nexport default class Home extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            education:[],\r\n            skills:[],\r\n            predSkills:[{key:\"html\",name:\"HTML\"},{key:\"css\",name:\"CSS\"},{key:\"js\",name:\"JS\"}],\r\n            rating:0,\r\n            open:false,\r\n            insti_name:'',\r\n            start_year:(new Date()).getFullYear(),\r\n            end_year:'',\r\n            file:null,\r\n            previewSrc:'',\r\n            IsPreviewAvailable:false,\r\n            openFile:false,\r\n            cv:null,\r\n\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onEduChange = this.onEduChange.bind(this);\r\n        this.handleClose= this.handleClose.bind(this);\r\n        this.handleDiaSubmit = this.handleDiaSubmit.bind(this);\r\n        this.onIntInputChange = this.onIntInputChange.bind(this);\r\n        this.uploadPic = this.uploadPic.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.oncvChange = this.oncvChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n     \r\n    }\r\n\r\n    onIntInputChange(e) {\r\n      var yr = parseInt(e.target.value)\r\n      this.setState({ [e.target.name] : yr})\r\n    }\r\n\r\n    handleClose(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n        start_year:(new Date()).getFullYear(),\r\n        end_year:'',\r\n        insti_name:'',\r\n        open:false\r\n      });\r\n    }\r\n\r\n    handleDiaSubmit(e){\r\n      e.preventDefault();\r\n      var x = {\r\n        insti_name:this.state.insti_name,\r\n        start_year:this.state.start_year,\r\n        end_year:this.state.end_year\r\n      }\r\n      console.log(x);\r\n      if(x.insti_name!=='' && x.start_year!==''){\r\n        if(parseInt(x.start_year)>parseInt(x.end_year)){\r\n          alert(\"End year cannot be less than Start year\");\r\n          return;\r\n        }\r\n        if(x.start_year>2100 || x.start_year<1900){\r\n          alert(\"Invalid start year\")\r\n          return;\r\n        }\r\n        if(x.end_year){\r\n          console.log(x.end_year+\" hi\")\r\n          if(x.end_year>2100|| x.end_year<1900){\r\n            alert(\"Invalid end year\")\r\n            return;\r\n          }\r\n        }\r\n        var y = this.state.education;\r\n        y.push(x);\r\n        this.setState({\r\n          education: y,\r\n          start_year:(new Date()).getFullYear(),\r\n          end_year:'',\r\n          insti_name:'',\r\n          open:false\r\n        });\r\n      }\r\n      else{\r\n        alert(\"Institute name and start year are compulsory\");\r\n        \r\n      }\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    onEduChange(event) {\r\n        var x = {...this.state.education};\r\n        var y = x.education;\r\n    }\r\n\r\n    onChangeEmail(event) {\r\n        this.setState({ email: event.target.value });\r\n    }\r\n\r\n    onChangePwd(event) {\r\n        this.setState({ pwd: event.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n          var b=1;\r\n\r\n          var prof = {\r\n            education: this.state.education,\r\n            skills: this.state.skills,\r\n            rating:0\r\n          }\r\n\r\n          this.state.education.forEach(function(x,i){\r\n            if(x.insti_name!=='' && x.start_year!==''){\r\n              if(parseInt(x.start_year)>parseInt(x.end_year)){\r\n                alert(\"End year cannot be less than Start year for education entry\" + (i+1));\r\n                b=0;\r\n                return;\r\n              }\r\n              if(x.start_year>2100 || x.start_year<1900){\r\n                alert(`Invalid start year for education no. ${i+1}`)\r\n                b=0;\r\n                return;\r\n              }\r\n              if(!x.end_year){ \r\n                prof.education[i].end_year=null;\r\n              }\r\n              else{\r\n                if(x.end_year>2100|| x.end_year<1900){\r\n                  alert(`Invalid end year for education entry ${i+1}`)\r\n                  b=0;\r\n                  return;\r\n                }\r\n              }\r\n              // console.log(\"hi\");\r\n              \r\n            }\r\n            else{\r\n              alert(\"Institute name and start year are compulsory. Check entry\"+(i+1));\r\n              b=0;\r\n              return;\r\n            }\r\n            // console.log(\"ji\")\r\n          });\r\n          if(!b) return\r\n          // console.log(\"ki\")\r\n          var token = localStorage.getItem('token');\r\n\r\n          // Headers\r\n          var config = {\r\n            headers: {\r\n              'Content-type': 'application/json'\r\n            }\r\n          }\r\n          // If token, add to headers\r\n          if (token) {\r\n            config.headers['auth-tok'] = token;\r\n          }\r\n\r\n          console.log(prof);\r\n\r\n          axios.post('http://localhost:5000/appl/newProfile', prof, config)\r\n               .then(res => {\r\n                  this.setState({edit:false,openFile:true});\r\n                })\r\n               .catch(err => {\r\n                  if(err.response){\r\n                    if(err.response.data.error)\r\n                      alert(err.response.data.error)\r\n                    else\r\n                      alert(err.message);\r\n                  }\r\n                  \r\n                  else\r\n                    alert(err.message);            \r\n               });\r\n          \r\n    }\r\n\r\n\r\n    async onChange(e) {\r\n      console.log(\"file\\n\"+e.target.files[0])\r\n      let uploadedFile=e.target.files[0];\r\n      var prev=''\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        prev=fileReader.result;\r\n      };\r\n\r\n      fileReader.readAsDataURL(uploadedFile);\r\n      console.log(prev)\r\n      console.log(\"match\\n\"+uploadedFile.name.match(/\\.(jpeg|jpg|png)$/))\r\n      this.setState({\r\n        file:uploadedFile,\r\n        previewSrc:prev,\r\n        IsPreviewAvailable:uploadedFile.name.match(/\\.(jpeg|jpg|png)$/)\r\n      })\r\n      \r\n    }\r\n\r\n    async oncvChange(e) {\r\n      console.log(\"file\\n\"+e.target.files[0])\r\n      let uploadedFile=e.target.files[0];\r\n      var prev=''\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        prev=fileReader.result;\r\n      };\r\n\r\n      fileReader.readAsDataURL(uploadedFile);\r\n      console.log(prev)\r\n      console.log(\"match\\n\"+uploadedFile.name.match(/\\.(jpeg|jpg|png)$/))\r\n      this.setState({\r\n        cv:uploadedFile,\r\n      })\r\n      \r\n    }\r\n\r\n    async uploadPic(e){\r\n      e.preventDefault();\r\n      // const formData = new FormData();\r\n      // formData.append('myfile',this.state.file);\r\n      // const config = {\r\n      //     headers: {\r\n      //         'content-type': 'multipart/form-data'\r\n      //     }\r\n      // };\r\n      // axios.post(\"http://localhost:5000/appl/uploadPic\",formData,config)\r\n      //     .then((response) => {\r\n      //         alert(\"The file is successfully uploaded\");\r\n      //     }).catch((error) => {\r\n      // });\r\n\r\n      try {\r\n        const { title, description } = this.state;\r\n        if (1 ||(title.trim() !== '' && description.trim() !== '')) {\r\n          if (this.state.file) {\r\n            const formData = new FormData();\r\n            formData.append('file', this.state.file);\r\n            formData.append('what', 'pic');\r\n            formData.append('cv', this.state.cv);\r\n            var token = localStorage.getItem('token');\r\n\r\n          // Headers\r\n            var config = {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n              }\r\n            }\r\n            // If token, add to headers\r\n            if (token) {\r\n              config.headers['auth-tok'] = token;\r\n            }\r\n            await axios.post('http://localhost:5000/file/upload', formData, \r\n              config\r\n            );\r\n\r\n                  this.props.history.push(\"/aDashboard\")\r\n          } else {\r\n            alert('Please select a file to add.');\r\n          }\r\n        } else {\r\n          alert('Please enter all the field values.');\r\n        }\r\n      } catch (error) {\r\n        error.response && alert(error.response.data);\r\n      }\r\n  }\r\n\r\n\r\nrender() {\r\n  console.log(this.state.predSkills);\r\n\r\n  return (\r\n    <Container component=\"main\">\r\n      <CssBaseline/>\r\n      <Paper style={classes.paper}>\r\n      \r\n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\r\n          Profile\r\n        </Typography>\r\n\r\n\r\n              <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Education</DialogTitle>\r\n                <DialogContent>\r\n                  <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                  <TextField\r\n                    autoFocus\r\n                    id=\"insti_name\"\r\n                    label=\"Institute Name\"\r\n                    fullWidth\r\n                    name= \"insti_name\"\r\n                    required\r\n                    value={this.state.insti_name}\r\n                    onChange={ this.onInputChange}\r\n                  />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                  <TextField\r\n                    id=\"start_year\"\r\n                    label=\"Start Year\"\r\n                    name=\"start_year\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    value={this.state.start_year}\r\n                    error={(parseInt(this.state.start_year)>=1900)?false:true}\r\n                    onChange={this.onIntInputChange}\r\n                  />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"end_year\"\r\n                    label=\"End Year\"\r\n                    name=\"end_year\"\r\n                    type=\"number\"\r\n                    value={this.state.end_year}\r\n                    onChange={this.onIntInputChange}\r\n                  />\r\n                  </Grid>\r\n                  </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={this.handleDiaSubmit} color=\"primary\">\r\n                    Add\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n\r\n        \r\n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\r\n        You must fill this form to continue\r\n          <Grid container spacing={2}>\r\n            \r\n            <Grid item xs={12}>\r\n            <Typography>Education:</Typography>\r\n            \r\n              <FormControl variant=\"outlined\" required fullWidth>\r\n              <ol>\r\n                {this.state.education.map((edu,ind)=>(\r\n                  <li>\r\n                  <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"filled\"\r\n                    label=\"Institute Name\"\r\n                    id=\"insti_name\"\r\n                    value={edu.insti_name}\r\n                    onChange={(e)=>{\r\n                      var temp = this.state.education; \r\n                      temp[ind].insti_name = e.target.value; \r\n                      this.setState({education:temp})\r\n                    }}\r\n                  />\r\n                  </Grid>\r\n                  <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  required\r\n                    fullWidth\r\n                  name=\"start_year\"\r\n                  label=\"Start Year\"\r\n                  id=\"start_year\"\r\n                  value={edu.start_year}\r\n                  type=\"number\"\r\n                  \r\n                  onChange={(e)=>{\r\n                      var temp = this.state.education; \r\n                      temp[ind].start_year = parseInt(e.target.value)||(new Date()).getFullYear(); \r\n                      this.setState({education:temp})\r\n                    }}\r\n                />\r\n                </Grid>\r\n                  <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  name=\"end_year\"\r\n                    fullWidth\r\n                  label=\"End Year\"\r\n                  id=\"end_year\"\r\n                  value={edu.end_year}\r\n                  type=\"number\"\r\n                  onChange={(e)=>{\r\n                      var temp = this.state.education; \r\n                      temp[ind].end_year = parseInt(e.target.value)||\"\"; \r\n                      this.setState({education:temp})\r\n                    }}\r\n                />\r\n                </Grid>\r\n                </Grid>\r\n                </li>\r\n              ))}\r\n              </ol>\r\n              <Grid item xs={12}>\r\n                <Button onClick={(e)=> {e.preventDefault(); this.setState({open:true})}}>+ Add education</Button>\r\n              </Grid>\r\n\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                multiple\r\n                id=\"tags-filled\"\r\n                options={this.state.predSkills}\r\n                renderOption={(option) => option.name}\r\n                getOptionLabel={(option) => {\r\n                  // Value selected with enter, right from the input\r\n                  if (typeof option === 'string') {\r\n                    return option;\r\n                  }\r\n                  // Add \"xxx\" option created dynamically\r\n                  if (option.inputValue) {\r\n                    return option.inputValue;\r\n                  }\r\n                  // Regular option\r\n                  return option.name;\r\n                }}\r\n                onChange={(event, newValue) => {\r\n                  console.log(\"onchange\")\r\n                  console.log(newValue)\r\n                  var pred = this.state.predSkills;\r\n                  var x = this.state.skills;\r\n                  var p=[];var s=[];\r\n\r\n                  newValue.forEach((val,i)=>{\r\n                    console.log(val)\r\n                    if(typeof val==='string'){  //option wasnt selected, directly pressed enter\r\n                      \r\n                      var predInd = pred.findIndex((it)=>it.key===val.toLowerCase());\r\n                      if(predInd!==-1){  //present in predSkills\r\n                        var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\r\n                        if(skiInd!==-1){  //present in s\r\n\r\n                        }\r\n                        else{\r\n                          s.push({key:val.toLowerCase(),name:val});\r\n\r\n                        }\r\n                      }\r\n                      else{\r\n                        s.push({key:val.toLowerCase(),name:val});\r\n                        pred.push({key:val.toLowerCase(),name:val});\r\n                      }\r\n                      \r\n                    }\r\n                    else if(val && val.name){\r\n                      if(val.key!==val.name.toLowerCase()){ //add \"\" got selected\r\n                        pred.push({key:val.key.toLowerCase(), name:val.key});\r\n                        s.push({key:val.key.toLowerCase(), name:val.key});\r\n                        \r\n                      }\r\n                      else{\r\n                      //  p.push({key:val.name.toLowerCase(), name:val.name});\r\n                        var skiInd = s.findIndex((it)=>it.key===val.key.toLowerCase());\r\n                        if(skiInd!==-1){  //present in s\r\n\r\n                        }\r\n                        else{\r\n                          s.push({key:val.name.toLowerCase(), name:val.name});\r\n                        }\r\n                      }\r\n                    }\r\n                    else {\r\n                    //  p.push({key:val.name.toLowerCase(), name:val.name});\r\n                      var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\r\n                        if(skiInd!==-1){  //present in s\r\n\r\n                        }\r\n                        else{\r\n                          s.push({key:val.name.toLowerCase(), name:val.name});\r\n                        }\r\n                    }\r\n\r\n                  });\r\n                  console.log(pred);\r\n                  this.setState({\r\n                    skills:s,\r\n                    predSkills:pred\r\n                  })\r\n\r\n\r\n                  \r\n                  console.log(\"onchange\")\r\n\r\n              }}\r\n                freeSolo\r\n                filterOptions={(options, params) => {\r\n                  const filtered = filter(options, params);\r\n                  console.log(\"filtered\" + filtered)\r\n                  // Suggest the creation of a new value\r\n                  if (params.inputValue !== '') {\r\n                    var skiInd = filtered.findIndex((it)=>it.key===params.inputValue.toLowerCase());\r\n                        if(skiInd!==-1){  //present in options\r\n\r\n                        }\r\n                        else{\r\n                    filtered.push({\r\n                      key: params.inputValue.toLowerCase(),\r\n                      name: `Add \"${params.inputValue}\"`,\r\n                    });}\r\n                  }\r\n\r\n                  return filtered;\r\n                }}\r\n                selectOnFocus\r\n                clearOnBlur\r\n                handleHomeEndKeys\r\n                //filterSelectedOptions//removes already selected options\r\n                renderTags={(value, getTagProps) =>\r\n                  \r\n                  this.state.skills.map((option, index) => \r\n                  \r\n                    <Chip variant=\"outlined\" key={option.name.toLowerCase()} label={option.name} {...getTagProps({ index })} />\r\n                  )\r\n                  \r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" label=\"Skills\" placeholder=\"Add a skill\"/>\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={classes.submit}\r\n          >\r\n          Update Profile\r\n          </Button>\r\n\r\n        </form>\r\n\r\n\r\n            <Dialog open={this.state.openFile} onClose={()=>this.setState({openFile:false})} onExited={()=>this.props.history.push('/aDashboard')} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Education</DialogTitle>\r\n                <DialogContent>\r\n                \r\n\r\n                <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n                  Choose CV file\r\n                  <input type=\"file\" hidden onChange={this.oncvChange}/>\r\n                </Button>\r\n                {this.state.cv ? (\r\n              <div className=\"preview-message\">\r\n                <p>{this.state.cv.name}</p>\r\n              </div>\r\n            \r\n            ) : (\r\n            <div className=\"preview-message\">\r\n              <p>File name will be shown here after selection</p>\r\n            </div>\r\n            )}\r\n\r\n\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n                  Choose profile picture file\r\n                  <input type=\"file\" hidden onChange={this.onChange}/>\r\n                </Button>\r\n                {this.state.file ? (\r\n            this.state.IsPreviewAvailable ? (\r\n              <div className=\"image-preview\">\r\n                <p>{this.state.file.name}</p>\r\n                <img className=\"preview-image\" src={URL.createObjectURL(this.state.file)} alt=\"Preview\" style={{height:250,width:250}}/>\r\n              </div>\r\n            ) : (\r\n              <div className=\"preview-message\">\r\n                <p>{this.state.file.name}</p>\r\n                <p>No preview available for this file. Pls select a png, jpg or jpeg file</p>\r\n              </div>\r\n            )\r\n            ) : (\r\n            <div className=\"preview-message\">\r\n              <p>Image preview will be shown here after selection</p>\r\n            </div>\r\n            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                 \r\n                  <Button variant=\"contained\" color=\"primary\" className=\"upload-button\" type=\"submit\" onClick={this.uploadPic}>\r\n                  Upload to Database\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            {//   <form style={classes.form} onSubmit={this.uploadPic} noValidate>\r\n            //     <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n            //       Choose file\r\n            //       <input type=\"file\" hidden onChange={this.onChange}/>\r\n            //     </Button>\r\n            //     {this.state.file ? (\r\n            // this.state.IsPreviewAvailable ? (\r\n            //   <div className=\"image-preview\">\r\n            //     <p>{this.state.file.name}</p>\r\n            //     <img className=\"preview-image\" src={URL.createObjectURL(this.state.file)} alt=\"Preview\" style={{height:250,width:250}}/>\r\n            //   </div>\r\n            // ) : (\r\n            //   <div className=\"preview-message\">\r\n            //     <p>{this.state.file.name}</p>\r\n            //     <p>No preview available for this file. Pls select a png,jpg or jpeg file</p>\r\n            //   </div>\r\n            // )\r\n            // ) : (\r\n            // <div className=\"preview-message\">\r\n            //   <p>Image preview will be shown here after selection</p>\r\n            // </div>\r\n            // )}\r\n            //           {console.log(this.state.file)}\r\n            //           <Button variant=\"contained\" color=\"primary\" className=\"upload-button\" type=\"submit\">Upload to Database</Button>\r\n            //     </form>\r\n}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n}\r\n\r\n","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplDash.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\Register.js",["138","139","140","141","142"],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\createJob.js",["143","144","145","146","147","148","149","150","151","152"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport RecrNavbar from './RecrNavbar.js';\r\nimport {InputTag} from './Tag.js';\r\n\r\n\r\n///styles\r\nconst classes = {\r\n  paper: {\r\n    marginTop: 10,\r\n      justifyContent: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: 10,\r\n    backgroundColor: 'red',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: 3,\r\n  },\r\n  submit: {\r\n    margin: 3,\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default class Home extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title:'',\r\n            maxAppl:50,\r\n            maxPos:5,\r\n            date:\"\",\r\n            time:\"00:00\",\r\n            duration:0,\r\n            type:'',\r\n            salary:0,\r\n            skills: '',\r\n            email: '',\r\n            chips: [],\r\n            authorized:true\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onIntInputChange = this.onIntInputChange.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.addSkill = this.addSkill.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n      var x = localStorage.getItem('role');\r\n      console.log(x);\r\n      if(x){\r\n        if(x==='Recruiter'){}\r\n        else{\r\n          this.setState({authorized:false})\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    handleDelete(chip, e){\r\n      console.log(chip.target);\r\n      var chips = this.state.chips.filter((data)=> data.key!==chip.key);\r\n      console.log(chips);\r\n      this.setState(chips)\r\n    }\r\n\r\n    addSkill(e){\r\n      if (!(e.key === 'Enter')) return;\r\n      var arr = this.state.chips;\r\n      var val = e.target.value;\r\n      var i = arr.findIndex((ele) => ele.key === val.toLowerCase());\r\n      if(i !== -1){ \r\n        this.setState({skills:''});\r\n        return;\r\n      }\r\n      arr.push({key: val.toLowerCase(), name:e.target.value});\r\n    //  console.log(arr);\r\n      this.setState({chips: arr, skills:''});\r\n\r\n    }\r\n\r\n    \r\n    onInputChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    onIntInputChange(e) {\r\n        this.setState({ [e.target.name] : parseInt(e.target.value)||0})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        var arr = this.state.chips.map((it)=> (it.name))\r\n      //  console.log(this.state.chips);\r\n        const newJob = {\r\n            \r\n            title: this.state.title,\r\n            maxPos: this.state.maxPos,\r\n            maxAppl: this.state.maxAppl,\r\n            deadline: this.state.date+\" \"+this.state.time,\r\n            duration: this.state.duration,\r\n            type: this.state.type,\r\n            salary: this.state.salary,\r\n            skills: this.state.chips,\r\n\r\n        }\r\n        // console.log(newJob);\r\n        // console.log(!this.state.title );\r\n        // console.log(!(this.state.date===''));\r\n        // console.log(!(this.state.time===\"\"))\r\n        // console.log(!(this.state.type));\r\n        // console.log(!(this.state.chips===[]));\r\n        if(!this.state.title || (this.state.date==='') || (this.state.time===\"\") \r\n          || !this.state.type || (this.state.chips===[])){\r\n          alert(\"Please fill all neccessary fields\");\r\n          return;\r\n        }\r\n        if(this.state.maxPos<=0){\r\n          alert(\"Maximum Positions should be greater than zero\");\r\n          return;\r\n        }\r\n        if(this.state.maxAppl<=0){\r\n          alert(\"Maximum Applications should be greater than zero\");\r\n          return;\r\n        }\r\n        \r\n\r\n        var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n\r\n        axios.post('http://localhost:5000/recr/newJob', newJob, config)\r\n             .then(res => {\r\n               alert(\"Created job\\t\" + res.data.title);\r\n                this.setState({\r\n                  title:'',\r\n                  maxAppl:0,\r\n                  maxPos:0,\r\n                  date:'',\r\n                  time:'',\r\n                  duration:0,\r\n                  type:'',\r\n                  salary:0,\r\n                  skills: '',\r\n                  chips:[],\r\n                  email: '',\r\n                });\r\n                this.props.history.push('/rDashboard');\r\n\r\n            })\r\n             .catch(err => {\r\n              if(err.response){\r\n                if(err.response.data.error)\r\n                  alert(err.response.data.error)\r\n                else\r\n                  alert(err.message);\r\n              }\r\n              else\r\n                alert(err.message);\r\n              //  console.log(err.response.data.error);\r\n             })\r\n             ;\r\n   }\r\n\r\n    render() {\r\n    //  console.log(this.state.chips);\r\n      const handleDelete = (chipToDelete) => () => {\r\n          var x = this.state.chips.filter((chip) => chip.key !== chipToDelete.key)\r\n          this.setState({chips:x});\r\n      };\r\n\r\n      if(!this.state.authorized)\r\n        return(\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n            <CssBaseline />\r\n            <div style={classes.paper}>\r\n              \r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                {\"You don't have permissions to view this page!\"}\r\n              </Typography>\r\n            </div>\r\n          </Container>\r\n          )\r\n\r\n        return (\r\n        <div>\r\n            <RecrNavbar/>\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n      <CssBaseline />\r\n      <div style={classes.paper}>\r\n        \r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create a Job\r\n        </Typography>\r\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}\r\n          onKeyPress={event => {\r\n          if (event.which === 13 /* Enter */) {\r\n            event.preventDefault();\r\n          }\r\n        }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"title\"\r\n                name=\"title\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                autoFocus\r\n                value={this.state.title}\r\n                onChange={(e)=>this.setState({title:e.target.value})}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"maxAppl\"\r\n                label=\"Maximum Applications\"\r\n                name=\"maxAppl\"\r\n                type=\"number\"\r\n                autoComplete=\"maxAppl\"\r\n                value={this.state.maxAppl}\r\n                helperText=\"Enter positive numbers only\"\r\n                error={(parseInt(this.state.maxAppl)>0)?false:true}\r\n                onChange={this.onIntInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"maxPos\"\r\n                label=\"Maximum Positions\"\r\n                name=\"maxPos\"\r\n                type=\"number\"\r\n                autoComplete=\"maxPos\"\r\n                value={this.state.maxPos}\r\n                helperText=\"Enter positive numbers only\"\r\n                error={(parseInt(this.state.maxPos)>0)?false:true}\r\n                onChange={this.onIntInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"date\"\r\n                name=\"date\"\r\n                label=\"Application deadline date\"\r\n                type=\"date\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={this.onInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"time\"\r\n                name=\"time\"\r\n                label=\"Application deadline time\"\r\n                type=\"time\"\r\n                defaultValue = \"00:00\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                onChange={this.onInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Typography>Skills*</Typography>\r\n                <FormControl variant=\"outlined\" required fullWidth>\r\n                  <Grid container spacing={1}>\r\n                  \r\n                  \r\n                    {this.state.chips.map((data)=>(\r\n                      <Grid item key={data.key}>\r\n                        <Chip\r\n                          key={data.key}\r\n                          label={data.name}\r\n                          onDelete={()=>this.handleDelete(data)}\r\n                        />\r\n                      </Grid>))\r\n                    }\r\n\r\n\r\n\r\n                    <Grid item>\r\n                      <TextField\r\n                        autoComplete=\"skills\"\r\n                        name=\"skills\"\r\n                        fullWidth\r\n                        id=\"skills\"\r\n                        label=\"Add a skill\"\r\n                        value={this.state.skills}\r\n                        onChange={this.onInputChange}\r\n                        onKeyDown = {this.addSkill}\r\n                      />\r\n                    \r\n                    </Grid>\r\n                  </Grid>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl variant=\"outlined\" required fullWidth>\r\n                <InputLabel id=\"select-label\">Job Type</InputLabel>\r\n                <Select\r\n                  labelId=\"select-label\"\r\n                  id=\"select\"\r\n                  name=\"type\"\r\n                  value={this.state.type}\r\n                  onChange={this.onInputChange}\r\n                  label=\"type\"\r\n\r\n                >\r\n                  <MenuItem value={\"\"}>\r\n                    <em>Select</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"Full-time\"}>\r\n                    Full-time\r\n                  </MenuItem>\r\n                  <MenuItem value={\"Part-time\"}>Part-time</MenuItem>\r\n                  <MenuItem value={\"Work from Home\"}>Work from Home</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl variant=\"outlined\" required fullWidth>\r\n                <InputLabel id=\"select-label\">Duration</InputLabel>\r\n                <Select\r\n                  labelId=\"select-label\"\r\n                  id=\"select\"\r\n                  name=\"duration\"\r\n                  value={this.state.duration}\r\n                  onChange={this.onInputChange}\r\n                  label=\"duration\"\r\n                >\r\n                  <MenuItem value={0}>\r\n                    0(indefinite)\r\n                  </MenuItem>\r\n                  <MenuItem value={1}>1</MenuItem>\r\n                  <MenuItem value={2}>2</MenuItem>\r\n                  <MenuItem value={3}>3</MenuItem>\r\n                  <MenuItem value={4}>4</MenuItem>\r\n                  <MenuItem value={5}>5</MenuItem>\r\n                  <MenuItem value={6}>6</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"salary\"\r\n                name=\"salary\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"salary\"\r\n                label=\"Salary per month\"\r\n                type=\"number\"\r\n                value={this.state.salary}\r\n                helperText=\"Enter positive numbers only\"\r\n                error={(parseInt(this.state.salary)>=0)?false:true}\r\n                onChange={this.onIntInputChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={classes.submit}\r\n          >\r\n            Create Job\r\n          </Button>\r\n        </form>\r\n      </div>\r\n           \r\n           </Container>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RecrDash.js",["153","154","155","156"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nimport RecrNavbar from './RecrNavbar.js';\r\n\r\nconst classes={\r\n\tpaper: {\r\n      padding:'5%', \r\n      justifyContent:'center', \r\n      alignItems:'center', \r\n      display:'flex', \r\n      flexDirection:'column', \r\n      marginTop:'10%'    \r\n    },\r\n    title:{fontSize:14}\r\n}\r\n\r\nexport default class RecrDash extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tjobs:[],\r\n\t\t}\r\n    this.onIntInputChange = this.onIntInputChange.bind(this);\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.editButton = this.editButton.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n      var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n        axios.get('http://localhost:5000/recr/',config)\r\n          .then(response => {\r\n            var array = response.data.map(ele=>{return({... ele, edit:false})})\r\n            console.log(array)\r\n            \r\n            this.setState({\r\n              jobs: array\r\n            });\r\n          })\r\n          .catch(function(error) {\r\n            console.log(error);\r\n          })\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    onIntInputChange(e) {\r\n        this.setState({ [e.target.name] : parseInt(e.target.value)||0})\r\n    }\r\n\r\n    deleteJob(id, e){\r\n    \tvar token = localStorage.getItem('token');\r\n\r\n      // Headers\r\n      var config = {\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        }\r\n      }\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n\r\n\r\n      var filt = this.state.jobs.filter((job)=>job._id!=id)\r\n\r\n      axios.delete(`http://localhost:5000/recr/deleteJob/${id}`, config)\r\n        .then(response => {\r\n          \r\n          this.setState({\r\n            jobs: filt\r\n          });\r\n        })\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        })\r\n    }\r\n\r\n    editButton(ind, e){\r\n    \tif(this.state.jobs[ind].edit){\r\n    \t\t//update in backend\r\n    \t\tvar token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n\r\n        var job = this.state.jobs;\r\n\r\n        var data = { \r\n        \tid:job[ind]._id, \r\n        \tmaxPos:job[ind].maxPos, \r\n        \tmaxAppl:job[ind].maxAppl, \r\n        \tdeadline:job[ind].deadline\r\n        }\r\n\r\n        if(data.maxAppl<=0){\r\n        \talert(\"Max applications should be greater than zero\");\r\n        \treturn\r\n        }\r\n\r\n        if(data.maxPos<=0){\r\n        \talert(\"Max positions should be greater than zero\")\r\n        \treturn\r\n        }\r\n\r\n        job[ind].edit = false;\r\n        axios.post('http://localhost:5000/recr/updateJob', data ,config)\r\n          .then(response => {\r\n            \r\n            this.setState({\r\n              jobs: job\r\n            });\r\n          })\r\n          .catch(function(error) {\r\n            console.log(error);\r\n          })\r\n    \t}\r\n    \telse{\r\n    \t\tvar array=this.state.jobs\r\n    \t\tarray[ind].edit = true;\r\n    \t\tthis.setState({jobs:array});\r\n    \t}\r\n    }\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<RecrNavbar/>\r\n\t\t\t<Container component=\"main\" style={classes.paper}>\r\n\t\t\t\r\n\t\t\t<h4>My Job Listings</h4>\r\n\t\t\t<Button><Link to=\"/createJob\">+ Create a job</Link></Button>\r\n\t\t\t{this.state.jobs.length?\"\":\"You don't have any active jobs\"}\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t{this.state.jobs.map((j,ind)=>(\r\n\t\t\t\t<Grid item xs={12} sm={6} lg={4}>\r\n\t\t\t<Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography title={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {moment(j.date_of_post).format('DD-MM-YYYY HH:mm')}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {j.title}\r\n        </Typography>\r\n        {j.edit?(\r\n        \t<Grid container spacing={1}>\r\n        \t<Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id={\"maxAppl\"+j._id}\r\n                label=\"Maximum Applications\"\r\n                type=\"number\"\r\n                autoComplete=\"maxAppl\"\r\n                value={j.maxAppl}\r\n                helperText=\"Enter positive numbers only\"\r\n                onChange={(e)=>{\r\n                  var temp = this.state.jobs; \r\n                  temp[ind].maxAppl = parseInt(e.target.value)||1; \r\n                  this.setState({jobs:temp})\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id={\"maxPos\"+j._id}\r\n                label=\"Maximum Positions\"\r\n                type=\"number\"\r\n                autoComplete=\"maxPos\"\r\n                value={j.maxPos}\r\n                helperText=\"Enter positive numbers only\"\r\n                onChange={(e)=>{\r\n                  var temp = this.state.jobs; \r\n                  temp[ind].maxPos = parseInt(e.target.value)||1; \r\n                  this.setState({jobs:temp})\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id={\"date\"+j._id}\r\n                label=\"Application deadline date\"\r\n                type=\"date\"\r\n                value = {j.deadline.split(' ')[0]}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(e)=>{\r\n                  var temp = this.state.jobs; \r\n                  temp[ind].deadline = e.target.value+\" \"+j.deadline.split(' ')[1]; \r\n                  this.setState({jobs:temp})\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id={\"time\"+j._id}\r\n                label=\"Application deadline time\"\r\n                type=\"time\"\r\n                value = {j.deadline.split(' ')[1]}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                onChange={(e)=>{\r\n                  var temp = this.state.jobs; \r\n                  temp[ind].deadline = j.deadline.split(' ')[0]+\" \"+e.target.value; \r\n                  this.setState({jobs:temp})\r\n                }}\r\n              />\r\n            </Grid>\r\n            </Grid>):(\r\n            <Grid container spacing={1}>\r\n            <Grid item>\r\n        \t<Typography style={classes.pos} color=\"textSecondary\">\r\n          Deadline: {j.deadline}\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n        <Typography style={classes.pos} color=\"textSecondary\">\r\n          Maximum Applications: {j.maxAppl}\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n        <Typography color=\"textSecondary\">\r\n          Maximum Positions: {j.maxPos}\r\n        </Typography>\r\n        </Grid>\r\n        </Grid>)}\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Remaining Positions: {j.maxPos-j.posn_filled}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button color=\"primary\" size=\"small\" onClick={(e)=>this.editButton(ind,e)}>{j.edit?\"Update\":\"Edit\"}</Button>\r\n\r\n        <Link to={{pathname:`/applications/${j._id}`,data:j._id}}>\r\n        \t<Button color=\"primary\" size=\"small\">Show Applications</Button>\r\n        </Link>\r\n\r\n        <Button color=\"primary\" size=\"small\" onClick={(e)=>this.deleteJob(j._id,e)}>Delete</Button>\r\n      </CardActions>\r\n    </Card>\r\n    </Grid>))}\r\n    </Grid>\r\n    </Container>\r\n    </div>\r\n    \r\n\t\t)\r\n\t}\r\n}","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\MyAppl.js",["157","158","159","160","161","162","163","164","165","166","167"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ApplNavbar from './ApplNavbar.js';\r\nimport moment from 'moment'\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n\r\nclass UsersList extends Component {\r\n    \r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        applications: [],\r\n      };\r\n      this.addRating = this.addRating.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var token = localStorage.getItem('token');\r\n\r\n      // Headers\r\n    var config = {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n      config.headers['auth-tok'] = token;\r\n    }\r\n    axios.get('http://localhost:5000/appl/applications',config)\r\n         .then(response => {\r\n             this.setState({applications: response.data});\r\n         })\r\n         .catch(function(error) {\r\n             console.log(error);\r\n         })\r\n  }\r\n\r\n\r\n  addRating(a, event){\r\n    var token = localStorage.getItem('token');\r\n    var newValue = event.target.value;\r\n    console.log(a)\r\n      // Headers\r\n      var config = {\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        }\r\n      }\r\n\r\n      // If token, add to headers\r\n      if (token) {\r\n        config.headers['auth-tok'] = token;\r\n      }\r\n      axios.post(`http://localhost:5000/appl/rate/${a._id}`, {rating:newValue}, config)\r\n         .then(response => {\r\n            var temp= this.state.applications.map(x=> x._id===a._id?{...x, job_rating: newValue}:x);\r\n            this.setState({applications:temp});\r\n         })\r\n         .catch(function(error) {\r\n             console.log(error);\r\n         })\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <ApplNavbar/>\r\n      <h4> My Applications</h4>\r\n        <Grid container>\r\n            \r\n          <Grid item xs={12} >\r\n            <Paper>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell> Title</TableCell>\r\n                    <TableCell>Name of recruiter</TableCell>\r\n                    <TableCell> Salary</TableCell>\r\n                    <TableCell>Application Stage</TableCell>\r\n                    <TableCell>Date of joining</TableCell>\r\n                    <TableCell>You rated the job</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.applications.map((data,ind) => (\r\n                      <TableRow key={ind}>\r\n                        <TableCell>{data.job_title}</TableCell>\r\n                        <TableCell>{data.recr_id.fname}</TableCell>\r\n                        <TableCell>{data.job_salary}</TableCell>\r\n                        <TableCell>{data.stage}</TableCell>\r\n                        <TableCell>{moment(data.doj).format('DD-MM-YYYY')}</TableCell>\r\n                        <TableCell>\r\n                          {(data.stage===\"Accepted\")?<Rating\r\n                            value={data.job_rating}\r\n                            onChange={(event) => {this.addRating(data,event)}}\r\n                            readOnly={data.job_rating}\r\n                          />:null}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>               \r\n          </Grid>    \r\n        </Grid>            \r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default UsersList;","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\employees.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nimport RecrNavbar from './RecrNavbar.js';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n\r\nclass UsersList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          emp: [],\r\n          sortedUsers: [],\r\n          sortName:true,\r\n          desc:1,\r\n          sortBy:\"doj\"\r\n        };\r\n        this.renderIcon = this.renderIcon.bind(this);\r\n        this.sortChange = this.sortChange.bind(this);\r\n        this.sortApplic = this.sortApplic.bind(this);\r\n        this.sortAlt = this.sortAlt.bind(this);   //on changing sort section dropdowns\r\n    }\r\n\r\n    componentDidMount() {\r\n      var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n        axios.get('http://localhost:5000/recr/employees', config)\r\n             .then(response => {\r\n              var array = response.data;\r\n              array.sort(function(a, b) {\r\n                if(a.doj != undefined && b.doj != undefined){\r\n                    return (-1) * (new Date(a.doj).getTime() - new Date(b.doj).getTime());\r\n                }\r\n                else{\r\n                    return 1;\r\n                }\r\n              });\r\n              // console.log(response.data);\r\n              // console.log(array)\r\n                 this.setState({emp: array, sortedUsers:response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n\r\n    async sortAlt(e){\r\n      await this.setState({ [e.target.name]: e.target.value });\r\n      this.sortApplic();\r\n    }\r\n\r\n    sortApplic(){\r\n/**\r\n *      Note that this is sorting only at front-end.\r\n */\r\n        var array = this.state.emp.map(a=>({...a, name:a.appl_user_id.fname+\" \"+a.appl_user_id.lname}))\r\n    //    console.log(array);\r\n        var flag = this.state.desc ;  //when desc 1 we have to \r\n                                // sort in desc. sort will be in desc if flag=1\r\n        var sb = this.state.sortBy;\r\n        if(sb===\"name\"){\r\n          array.sort(function(a, b) {\r\n            if(a.name != undefined && b.name != undefined){\r\n                return (1 - flag*2) * (a.name.localeCompare(b.name));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        }\r\n        else if(sb===\"title\"){\r\n          array.sort(function(a, b) {\r\n            if(a.job_title != undefined && b.job_title != undefined){\r\n                return (1 - flag*2) * (a.job_title.localeCompare(b.job_title));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        } \r\n        else if(sb ===\"doj\"){\r\n          array.sort(function(a, b) {\r\n            if(a.doj != undefined && b.doj != undefined){\r\n                return (1 - flag*2) * (new Date(a.doj).getTime() - new Date(b.doj).getTime());\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        }\r\n        else if(sb ===\"rating\"){\r\n          array.sort(function(a, b) {\r\n            if(a.appl_id.rating != undefined && b.appl_id.rating != undefined){\r\n                return (1 - flag*2) * (a.appl_id.rating - b.appl_id.rating);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        }\r\n        //console.log(flag)\r\n        this.setState({\r\n            emp:array,\r\n            sortSalary:!this.state.sortSalary,\r\n        })\r\n    }\r\n\r\n    sortChange(){\r\n/**\r\n *      Note that this is sorting only at front-end.\r\n */\r\n        var array = this.state.users;\r\n        var flag = this.state.sortName;\r\n        array.sort(function(a, b) {\r\n            if(a.date != undefined && b.date != undefined){\r\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            users:array,\r\n            sortName:!this.state.sortName,\r\n        })\r\n    }\r\n\r\n    renderIcon(){\r\n        if(this.state.sortName){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    addRating(newValue, a, event){\r\n      var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n        axios.post(`http://localhost:5000/recr/rate/${a._id}`, {rating:newValue}, config)\r\n           .then(response => {\r\n              var temp= this.state.emp.map(x=> x._id===a._id?{...x, appl_rating: newValue}:x);\r\n              this.setState({emp:temp});\r\n           })\r\n           .catch(function(error) {\r\n               console.log(error);\r\n           })\r\n\r\n      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n          <RecrNavbar/>\r\n            <div style={{flexGrow:1,display:'flex', flexDirection: 'column', justifyContent:'center', margin:10}}>\r\n              \r\n              <Typography component=\"h1\" variant=\"h4\" style={{marginBottom:10}}>\r\n                Employees\r\n              </Typography>\r\n\r\n              <Grid container>\r\n                \r\n                <Grid item xs={12} md={9} lg={9}>\r\n                  <Paper elevation={0} style={{textAlign:'center', paddingTop:10, marginBottom:5}}>\r\n                    <Grid container spacing={0}>\r\n                    <Grid item xs={6}>\r\n                    <Typography> SORT: </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Select\r\n                            labelId=\"select-label\"\r\n                            id=\"select\"\r\n                            name=\"desc\"\r\n                            value={this.state.desc}\r\n                            onChange={this.sortAlt}\r\n                          >\r\n                            <MenuItem value={0}>\r\n                              Ascending\r\n                            </MenuItem>\r\n                            <MenuItem value={1}>Descending</MenuItem>\r\n                    </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <FormControl component=\"fieldset\">\r\n            <RadioGroup aria-label=\"sort\" name=\"sortBy\" value={this.state.sortBy} onChange={this.sortAlt}>\r\n              <FormControlLabel value=\"name\" control={<Radio />} label=\"Applicant Name\" />\r\n              <FormControlLabel value=\"title\" control={<Radio />} label=\"Job Title\" />\r\n              <FormControlLabel value=\"doj\" control={<Radio />} label=\"Date of joining\" />\r\n              <FormControlLabel value=\"rating\" control={<Radio />} label=\"Applicant Rating\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n                  </Grid>\r\n                  </Grid>\r\n                  </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider/>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Paper>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell>Name</TableCell>\r\n                                            <TableCell>Date of Joining</TableCell>\r\n                                            <TableCell>Job title</TableCell>\r\n                                            <TableCell>Job type</TableCell>\r\n                                            <TableCell>Salary</TableCell>\r\n                                            <TableCell>Applicant Rating</TableCell>\r\n                                            <TableCell>Your rating</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.emp.map((a,ind) => (\r\n                                        <TableRow key={a._id}>\r\n                                            <TableCell>{a.appl_user_id.fname+\" \"+a.appl_user_id.lname}</TableCell>\r\n                                            <TableCell>{moment(a.doj).format('DD-MM-YYYY')}</TableCell>\r\n                                            <TableCell>{a.job_title}</TableCell>\r\n                                            <TableCell>{a.job_type}</TableCell>\r\n                                            <TableCell>Salary</TableCell>\r\n                                            <TableCell>{a.appl_id.rating}</TableCell>\r\n                                            <TableCell>\r\n                                              <Rating\r\n                                                value={a.appl_rating}\r\n                                                onChange={(event, newValue) => {this.addRating(newValue,a,event)}}\r\n                                                readOnly={a.appl_rating}\r\n                                              />\r\n                                            </TableCell>\r\n\r\n                                        </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersList;","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\NotFound.js",["193","194"],"import React, {Component} from 'react';\r\nimport {Paper, Container, Typography} from '@material-ui/core'\r\n\r\nexport default class nf extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n            <Typography variant=\"h4\">\r\n                404 Not Found!\r\n            </Typography>\r\n           </Container>\r\n        )\r\n    }\r\n}","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplProfile.js",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RecrProfile.js",["213","214","215","216","217","218","219","220"],"import React, {Component} from 'react';\r\nimport im from '../static/bk9.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport RecrNavbar from './RecrNavbar.js';\r\n\r\nimport axios from 'axios';\r\n\r\n/**/\r\n\r\nvar hi = []\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst classes = {\r\n    paper: {\r\n      padding:'5%', \r\n      justifyContent:'center', \r\n      alignItems:'center', \r\n      display:'flex', \r\n      flexDirection:'column', \r\n      marginTop:'10%'    \r\n    },\r\n    avatar: {\r\n      margin: 10,\r\n      alignSelf: 'center',\r\n      backgroundColor: 'red',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: 1,\r\n    },\r\n    submit: {\r\n      marginBottom: 10\r\n    },\r\n  };\r\n  \r\nexport default class Home extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            fname:'',\r\n            lname:'',\r\n            bio:'',\r\n            contact:'',\r\n            edit:false\r\n        }\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n      var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n\r\n        await axios.get('http://localhost:5000/recr/profile', config)\r\n             .then(res => {\r\n              console.log(res.data);\r\n              this.setState({\r\n                fname: res.data.user_id.fname,\r\n                lname: res.data.user_id.lname,\r\n                email: res.data.user_id.email,\r\n                contact: res.data.contact,\r\n                bio: res.data.bio\r\n              })\r\n            })\r\n             .catch(err=>{\r\n              if(err.response){\r\n                if(err.response.data.error)\r\n                  alert(err.response.data.error)\r\n                else\r\n                  alert(err.message);\r\n\r\n              }\r\n              else\r\n                alert(err.message);\r\n              this.props.history.push('/')\r\n             });\r\n\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n      e.preventDefault();\r\n      if(!this.state.edit)\r\n        this.setState({edit:true});\r\n      else{\r\n        var arr = this.state.bio.split(' ');\r\n        if(arr.length>250){\r\n          alert(\"Bio exceeded 250 words!\");\r\n          return;\r\n        }\r\n        var token = localStorage.getItem('token');\r\n\r\n          // Headers\r\n          var config = {\r\n            headers: {\r\n              'Content-type': 'application/json'\r\n            }\r\n          }\r\n          // If token, add to headers\r\n          if (token) {\r\n            config.headers['auth-tok'] = token;\r\n          }\r\n\r\n          var prof = this.state;\r\n          delete prof.edit;\r\n          console.log(prof);\r\n          var c=0;\r\n          await axios.patch('http://localhost:5000/user/updateDetails', {lname:this.state.lname,fname:this.state.fname}, config)\r\n               .then(res => {\r\n                })\r\n               .catch(err => {\r\n                  if(err.response){\r\n                    if(err.response.data.error)\r\n                      alert(err.response.data.error)\r\n                    else\r\n                      alert(err.message);\r\n                  }\r\n                  \r\n                  else\r\n                    alert(err.message);  \r\n                  c=1;\r\n               });\r\n          if(c) return;\r\n          axios.put('http://localhost:5000/recr/updateProfile', prof, config)\r\n               .then(res => {\r\n                  alert(\"Updated\");\r\n                  this.setState({edit:false})\r\n                })\r\n               .catch(err => {\r\n                  if(err.response){\r\n                    if(err.response.data.error)\r\n                      console.log(err.response.data.error)\r\n                    else\r\n                      console.log(err.message);\r\n                  }\r\n                  \r\n                  else\r\n                    console.log(err.message);             \r\n               });\r\n          \r\n        }\r\n    }\r\n\r\nrender() {\r\n\r\n  return (\r\n    <div>\r\n    <RecrNavbar/>\r\n    <Container component=\"main\">\r\n      <CssBaseline/>\r\n      <Paper style={classes.paper}>\r\n      \r\n        <Typography component=\"h1\" variant=\"h5\" >\r\n          Profile\r\n        </Typography>\r\n        \r\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}>\r\n          <Grid container spacing={2} style={{padding:10}}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"fname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"fname\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                value={this.state.fname}\r\n                onChange={this.onInputChange}\r\n                InputProps = {{\r\n                  readOnly: !this.state.edit\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lname\"\r\n                label=\"Last Name\"\r\n                name=\"lname\"\r\n                value={this.state.lname}\r\n                onChange={this.onInputChange}\r\n                InputProps = {{\r\n                  readOnly: !this.state.edit\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onInputChange}\r\n                InputProps = {{\r\n                  readOnly: true\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"contact\"\r\n                label=\"Contact number\"\r\n                name=\"contact\"\r\n                value={this.state.contact}\r\n                onChange={this.onInputChange}InputProps = {{\r\n                  readOnly: !this.state.edit\r\n                }}\r\n              />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n              <TextField \r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                name=\"bio\"\r\n                label=\"Bio (max 250 words)\"\r\n                id=\"bio\"\r\n                value={this.state.bio}\r\n                onChange={this.onInputChange}\r\n                InputProps = {{\r\n                  readOnly: !this.state.edit\r\n                }}\r\n              />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={classes.submit}\r\n          >\r\n          {this.state.edit?\"Update\":\"Edit\"}\r\n          </Button>\r\n\r\n        </form>\r\n      </Paper>\r\n      <Box mt={7}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n}\r\n","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplicationsView.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport RecrNavbar from './RecrNavbar.js';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport moment from 'moment'\r\n\r\n\r\nclass UsersList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          applications: [],\r\n          sortedUsers: [],\r\n          sortName:true,\r\n          desc:0,\r\n          sortBy:\"date_of_appl\"\r\n        };\r\n        this.renderIcon = this.renderIcon.bind(this);\r\n        this.sortChange = this.sortChange.bind(this);\r\n        this.onAccept = this.onAccept.bind(this);\r\n        this.onShortlist = this.onShortlist.bind(this);\r\n        this.sortApplic = this.sortApplic.bind(this);\r\n        this.sortAlt = this.sortAlt.bind(this);   //on changing sort section dropdowns\r\n    }\r\n\r\n    componentDidMount() {\r\n      var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n        console.log(this.props.match.params)\r\n        axios.post('http://localhost:5000/recr/applications', {id:this.props.match.params.jobId}, config)\r\n             .then(response => {\r\n              var array = response.data;\r\n              array.sort(function(a, b) {\r\n                if(a.date_of_appl != undefined && b.date_of_appl != undefined){\r\n                    return (1) * (new Date(a.date_of_appl).getTime() - new Date(b.date_of_appl).getTime());\r\n                }\r\n                else{\r\n                    return 1;\r\n                }\r\n              });\r\n              // console.log(response.data);\r\n              // console.log(array)\r\n                 this.setState({applications: response.data, sortedUsers:response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    onAccept(a, e){  //a is the application object\r\n      e.preventDefault();\r\n       var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n        var data = {\r\n          id:a._id, \r\n          appl_user_id:a.appl_user_id._id,\r\n          jobId:a.job_id,\r\n          appl_email:a.appl_user_id.email,\r\n        }\r\n        console.log(data)\r\n        console.log(a)\r\n     axios.post('http://localhost:5000/recr/accept', data, config)\r\n         .then(res => {\r\n            if(res.data.mess){\r\n              alert(res.data.mess);\r\n              if(res.data.mess===\"All positions for this job have been filled!\")\r\n                this.props.history.push('/rDashboard');\r\n            }\r\n            var arr= this.state.applications.map(x=> x._id===a._id?{...x,stage:\"Accepted\"}:x);\r\n            this.setState({applications:arr})\r\n         })\r\n         .catch(function(error) {\r\n             console.log(error);\r\n         })\r\n    }\r\n\r\n    onShortlist(id, ind, e){  //id is the application id\r\n      e.preventDefault();\r\n       var token = localStorage.getItem('token');\r\n\r\n        // Headers\r\n        var config = {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n\r\n        // If token, add to headers\r\n        if (token) {\r\n          config.headers['auth-tok'] = token;\r\n        }\r\n     axios.post('http://localhost:5000/recr/shortlist', {id:id }, config)\r\n         .then(response => {\r\n            var temp = this.state.applications;\r\n            temp[ind] = response.data;\r\n            console.log(temp);\r\n            this.setState({applications:temp});\r\n         })\r\n         .catch(function(error) {\r\n             console.log(error);\r\n         })\r\n    }\r\n\r\n    async sortAlt(e){\r\n      await this.setState({ [e.target.name]: e.target.value });\r\n      this.sortApplic();\r\n    }\r\n\r\n    sortApplic(){\r\n/**\r\n *      Note that this is sorting only at front-end.\r\n */\r\n        var array = this.state.applications.map(a=>({...a, name:a.appl_user_id.fname+\" \"+a.appl_user_id.lname}))\r\n    //    console.log(array);\r\n        var flag = this.state.desc ;  //when desc 1 we have to \r\n                                // sort in desc. sort will be in desc if flag=1\r\n        var sb = this.state.sortBy;\r\n        if(sb===\"name\"){\r\n          array.sort(function(a, b) {\r\n            if(a.name != undefined && b.name != undefined){\r\n                return (1 - flag*2) * (a.name.localeCompare(b.name));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        }\r\n        else if(sb ===\"date_of_appl\"){\r\n          array.sort(function(a, b) {\r\n            if(a.date_of_appl != undefined && b.date_of_appl != undefined){\r\n                return (1 - flag*2) * (new Date(a.date_of_appl).getTime() - new Date(b.date_of_appl).getTime());\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        }\r\n        else if(sb ===\"rating\"){\r\n          array.sort(function(a, b) {\r\n            if(a.appl_id.rating != undefined && b.appl_id.rating != undefined){\r\n                return (1 - flag*2) * (a.appl_id.rating - b.appl_id.rating);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        }\r\n        //console.log(flag)\r\n        this.setState({\r\n            applications:array,\r\n            sortSalary:!this.state.sortSalary,\r\n        })\r\n    }\r\n\r\n    sortChange(){\r\n/**\r\n *      Note that this is sorting only at front-end.\r\n */\r\n        var array = this.state.users;\r\n        var flag = this.state.sortName;\r\n        array.sort(function(a, b) {\r\n            if(a.date != undefined && b.date != undefined){\r\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            users:array,\r\n            sortName:!this.state.sortName,\r\n        })\r\n    }\r\n\r\n    renderIcon(){\r\n        if(this.state.sortName){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <RecrNavbar/>\r\n              <Grid container>\r\n                <Grid item xs={12} md={3} lg={3}>\r\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                        <ListItem text>\r\n                                        <h3>Applications</h3>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n                <Grid item xs={12} md={9} lg={9}>\r\n                  <Paper style={{textAlign:'center', paddingTop:10, marginBottom:5}}>\r\n                    <Grid container spacing={0}>\r\n                    <Grid item xs={6}>\r\n                    <Typography> SORT: </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Select\r\n                            labelId=\"select-label\"\r\n                            id=\"select\"\r\n                            name=\"desc\"\r\n                            value={this.state.desc}\r\n                            onChange={this.sortAlt}\r\n                          >\r\n                            <MenuItem value={0}>\r\n                              Ascending\r\n                            </MenuItem>\r\n                            <MenuItem value={1}>Descending</MenuItem>\r\n                    </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <FormControl component=\"fieldset\">\r\n            <RadioGroup aria-label=\"sort\" name=\"sortBy\" value={this.state.sortBy} onChange={this.sortAlt}>\r\n              <FormControlLabel value=\"name\" control={<Radio />} label=\"Applicant Name\" />\r\n              <FormControlLabel value=\"date_of_appl\" control={<Radio />} label=\"Date of application\" />\r\n              <FormControlLabel value=\"rating\" control={<Radio />} label=\"Applicant Rating\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n                  </Grid>\r\n                  </Grid>\r\n                  </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Paper>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell>Name</TableCell>\r\n                                            <TableCell>Skills</TableCell>\r\n                                            <TableCell>Date of Application</TableCell>\r\n                                            <TableCell>Education</TableCell>\r\n                                            <TableCell>SOP</TableCell>\r\n                                            <TableCell>Rating</TableCell>\r\n                                            <TableCell>Stage</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.applications.map((a,ind) => (\r\n\r\n                                        <TableRow key={a._id}>\r\n                                            <TableCell>{a.appl_user_id.fname+\" \"+a.appl_user_id.lname}</TableCell>\r\n                                            <TableCell>{a.appl_skills.map((data)=>(\r\n                                              <Chip\r\n                                                key={data.key}\r\n                                                label={data.name}\r\n                                              />\r\n                                            ))}</TableCell>\r\n                                            <TableCell>{moment(a.date_of_appl).format('DD-MM-YYYY')}</TableCell>\r\n                                            <TableCell>{a.appl_edu.map((data, ind)=>(\r\n                                              <Chip\r\n                                                key={ind}\r\n                                                label={data.insti_name+\" \"+data.start_year+\"-\"+(data.end_year===null?\"present\":data.end_year)}\r\n                                              />\r\n                                            ))}</TableCell>\r\n                                            <TableCell>{a.sop}</TableCell>\r\n                                            <TableCell>{a.appl_id.rating}</TableCell>\r\n                                            <TableCell>{a.stage}\r\n                                              {a.stage==='Applied'?\r\n                                                <Button color=\"primary\" onClick={(e)=>this.onShortlist(a._id,ind,e)}>\r\n                                                  Shortlist\r\n                                                </Button>:(a.stage===\"Accepted\"?null:\r\n                                                <Button color=\"primary\" onClick={(e)=>this.onAccept(a,e)}>\"Accept\"</Button>)}\r\n                                              {a.stage==='Accepted'?null:<Button color=\"secondary\">Reject</Button>}\r\n                                            </TableCell>\r\n\r\n                                        </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersList;","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\RecrNavbar.js",["241","242","243"],"import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\nexport default class RecrNavbar extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>                \r\n                <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                    <Link to=\"/rProfile\" class=\"navbar-brand\">Headless Hunt</Link>\r\n                    <div >\r\n                        <ul class=\"navbar-nav mr-auto\">\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/rDashboard\" className=\"nav-link\">My Jobs</Link>\r\n                            </li>\r\n                            <li class=\"navbar-item\">\r\n                                <Link to=\"/employees\" className=\"nav-link\">My Employees</Link>\r\n                            </li>\r\n                            <li class=\"navbar-item\">\r\n                                <Link to=\"/rProfile\" className=\"nav-link\">My Profile</Link>\r\n                            </li> \r\n                            <li class=\"navbar-item\">\r\n                                <GoogleLogout\r\n                                  onLogoutSuccess={(response) => { console.log(response);localStorage.removeItem('token');localStorage.removeItem('role'); }}\r\n                                  onFailure={(err)=>{console.log(err)}}\r\n                                  render={(renderProps) => (\r\n                                      <Button onClick={renderProps.onClick} disabled={renderProps.disabled} >\r\n                                        <Link to=\"/\" className=\"nav-link\">Logout</Link>\r\n                                      </Button>\r\n                                    )}\r\n                                  clientId=\"531568689114-5rg3ebcc6ciphbv6ged7m54lbj0gine5.apps.googleusercontent.com\"\r\n            \r\n                                />\r\n\r\n                            </li>  \r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\Tag.js",[],"C:\\Users\\Amruta Pawar\\Documents\\GitHub\\job-application-portal\\frontend\\src\\components\\ApplNavbar.js",["244","245","246"],"import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\nexport default class ApplNavbar extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>                \r\n                <nav class=\"navbar sticky-top navbar-expand navbar-dark bg-dark\">\r\n                    <Link to=\"/aProfile\" class=\"navbar-brand\">Headless Hunt</Link>\r\n              \r\n                    <div class=\"navbarToggler\" id=\"navbarToggler\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li class=\"navbar-item\">\r\n                                <Link to=\"/aDashboard\" className=\"nav-link\">Job Listing</Link>\r\n                            </li>\r\n                            <li class=\"navbar-item\">\r\n                                <Link to=\"/myApplications\" className=\"nav-link\">My Applications</Link>\r\n                            </li>\r\n                            <li class=\"navbar-item\">\r\n                                <Link to=\"/aProfile\" className=\"nav-link\">My Profile</Link>\r\n                            </li> \r\n                            <li class=\"navbar-item\">\r\n                                <GoogleLogout\r\n                                  onLogoutSuccess={(response) => { console.log(response);localStorage.removeItem('token');localStorage.removeItem('role'); }}\r\n                                  onFailure={(err)=>{console.log(err)}}\r\n                                  render={(renderProps) => (\r\n                                      <Button onClick={renderProps.onClick} disabled={renderProps.disabled} >\r\n                                        <Link to=\"/\" className=\"nav-link\">Logout</Link>\r\n                                      </Button>\r\n                                    )}\r\n                                  clientId=\"531568689114-5rg3ebcc6ciphbv6ged7m54lbj0gine5.apps.googleusercontent.com\"\r\n            \r\n                                />\r\n\r\n                            </li>  \r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":12},{"ruleId":"251","severity":1,"message":"255","line":4,"column":42,"nodeType":"253","messageId":"254","endLine":4,"endColumn":46},{"ruleId":"251","severity":1,"message":"256","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":10},{"ruleId":"251","severity":1,"message":"257","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":24},{"ruleId":"251","severity":1,"message":"258","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":16},{"ruleId":"251","severity":1,"message":"259","line":14,"column":10,"nodeType":"253","messageId":"254","endLine":14,"endColumn":20},{"ruleId":"251","severity":1,"message":"260","line":14,"column":22,"nodeType":"253","messageId":"254","endLine":14,"endColumn":32},{"ruleId":"251","severity":1,"message":"256","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":10},{"ruleId":"251","severity":1,"message":"261","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"251","severity":1,"message":"257","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":24},{"ruleId":"251","severity":1,"message":"258","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":16},{"ruleId":"251","severity":1,"message":"262","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":12},{"ruleId":"251","severity":1,"message":"263","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":24},{"ruleId":"251","severity":1,"message":"259","line":15,"column":10,"nodeType":"253","messageId":"254","endLine":15,"endColumn":20},{"ruleId":"251","severity":1,"message":"260","line":15,"column":22,"nodeType":"253","messageId":"254","endLine":15,"endColumn":32},{"ruleId":"251","severity":1,"message":"264","line":22,"column":5,"nodeType":"253","messageId":"254","endLine":22,"endColumn":7},{"ruleId":"251","severity":1,"message":"261","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"257","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":24},{"ruleId":"251","severity":1,"message":"265","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":11},{"ruleId":"251","severity":1,"message":"263","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":24},{"ruleId":"251","severity":1,"message":"266","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":25},{"ruleId":"251","severity":1,"message":"267","line":22,"column":8,"nodeType":"253","messageId":"254","endLine":22,"endColumn":15},{"ruleId":"251","severity":1,"message":"268","line":28,"column":10,"nodeType":"253","messageId":"254","endLine":28,"endColumn":19},{"ruleId":"251","severity":1,"message":"269","line":167,"column":13,"nodeType":"253","messageId":"254","endLine":167,"endColumn":14},{"ruleId":"251","severity":1,"message":"270","line":506,"column":23,"nodeType":"253","messageId":"254","endLine":506,"endColumn":24},{"ruleId":"251","severity":1,"message":"271","line":507,"column":23,"nodeType":"253","messageId":"254","endLine":507,"endColumn":24},{"ruleId":"272","severity":1,"message":"273","line":538,"column":29,"nodeType":"253","messageId":"274","endLine":538,"endColumn":35},{"ruleId":"272","severity":1,"message":"273","line":549,"column":27,"nodeType":"253","messageId":"274","endLine":549,"endColumn":33},{"ruleId":"251","severity":1,"message":"275","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":16},{"ruleId":"251","severity":1,"message":"267","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":15},{"ruleId":"251","severity":1,"message":"276","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":20},{"ruleId":"251","severity":1,"message":"266","line":24,"column":8,"nodeType":"253","messageId":"254","endLine":24,"endColumn":25},{"ruleId":"251","severity":1,"message":"277","line":26,"column":8,"nodeType":"253","messageId":"254","endLine":26,"endColumn":17},{"ruleId":"251","severity":1,"message":"278","line":28,"column":8,"nodeType":"253","messageId":"254","endLine":28,"endColumn":17},{"ruleId":"251","severity":1,"message":"279","line":44,"column":7,"nodeType":"253","messageId":"254","endLine":44,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":97,"column":29,"nodeType":"282","messageId":"283","endLine":97,"endColumn":31},{"ruleId":"280","severity":1,"message":"281","line":97,"column":56,"nodeType":"282","messageId":"283","endLine":97,"endColumn":58},{"ruleId":"251","severity":1,"message":"284","line":215,"column":11,"nodeType":"253","messageId":"254","endLine":215,"endColumn":15},{"ruleId":"251","severity":1,"message":"284","line":245,"column":11,"nodeType":"253","messageId":"254","endLine":245,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":287,"column":27,"nodeType":"282","messageId":"283","endLine":287,"endColumn":29},{"ruleId":"280","severity":1,"message":"281","line":287,"column":54,"nodeType":"282","messageId":"283","endLine":287,"endColumn":56},{"ruleId":"280","severity":1,"message":"281","line":297,"column":27,"nodeType":"282","messageId":"283","endLine":297,"endColumn":29},{"ruleId":"280","severity":1,"message":"281","line":297,"column":54,"nodeType":"282","messageId":"283","endLine":297,"endColumn":56},{"ruleId":"280","severity":1,"message":"281","line":307,"column":25,"nodeType":"282","messageId":"283","endLine":307,"endColumn":27},{"ruleId":"280","severity":1,"message":"281","line":307,"column":50,"nodeType":"282","messageId":"283","endLine":307,"endColumn":52},{"ruleId":"285","severity":2,"message":"286","line":585,"column":16,"nodeType":"253","messageId":"287","endLine":585,"endColumn":24},{"ruleId":"251","severity":1,"message":"257","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":24},{"ruleId":"251","severity":1,"message":"258","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":16},{"ruleId":"251","severity":1,"message":"265","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":11},{"ruleId":"251","severity":1,"message":"260","line":18,"column":10,"nodeType":"253","messageId":"254","endLine":18,"endColumn":20},{"ruleId":"251","severity":1,"message":"266","line":24,"column":8,"nodeType":"253","messageId":"254","endLine":24,"endColumn":25},{"ruleId":"251","severity":1,"message":"261","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"251","severity":1,"message":"257","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":24},{"ruleId":"251","severity":1,"message":"258","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":16},{"ruleId":"251","severity":1,"message":"255","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":12},{"ruleId":"251","severity":1,"message":"265","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":11},{"ruleId":"251","severity":1,"message":"263","line":17,"column":8,"nodeType":"253","messageId":"254","endLine":17,"endColumn":24},{"ruleId":"251","severity":1,"message":"260","line":19,"column":10,"nodeType":"253","messageId":"254","endLine":19,"endColumn":20},{"ruleId":"251","severity":1,"message":"288","line":23,"column":9,"nodeType":"253","messageId":"254","endLine":23,"endColumn":17},{"ruleId":"251","severity":1,"message":"289","line":120,"column":13,"nodeType":"253","messageId":"254","endLine":120,"endColumn":16},{"ruleId":"251","severity":1,"message":"290","line":204,"column":13,"nodeType":"253","messageId":"254","endLine":204,"endColumn":25},{"ruleId":"251","severity":1,"message":"291","line":11,"column":27,"nodeType":"253","messageId":"254","endLine":11,"endColumn":33},{"ruleId":"251","severity":1,"message":"292","line":11,"column":35,"nodeType":"253","messageId":"254","endLine":11,"endColumn":40},{"ruleId":"293","severity":1,"message":"294","line":55,"column":60,"nodeType":"295","messageId":"296","endLine":55,"endColumn":61,"fix":"297"},{"ruleId":"280","severity":1,"message":"281","line":90,"column":55,"nodeType":"282","messageId":"283","endLine":90,"endColumn":57},{"ruleId":"251","severity":1,"message":"298","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":14},{"ruleId":"251","severity":1,"message":"299","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":17},{"ruleId":"251","severity":1,"message":"300","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":12},{"ruleId":"251","severity":1,"message":"275","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":16},{"ruleId":"251","severity":1,"message":"267","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":15},{"ruleId":"251","severity":1,"message":"276","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":20},{"ruleId":"251","severity":1,"message":"301","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":18},{"ruleId":"251","severity":1,"message":"302","line":17,"column":8,"nodeType":"253","messageId":"254","endLine":17,"endColumn":22},{"ruleId":"251","severity":1,"message":"303","line":22,"column":8,"nodeType":"253","messageId":"254","endLine":22,"endColumn":18},{"ruleId":"251","severity":1,"message":"304","line":23,"column":8,"nodeType":"253","messageId":"254","endLine":23,"endColumn":23},{"ruleId":"251","severity":1,"message":"305","line":24,"column":8,"nodeType":"253","messageId":"254","endLine":24,"endColumn":25},{"ruleId":"251","severity":1,"message":"298","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":14},{"ruleId":"251","severity":1,"message":"306","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":12},{"ruleId":"251","severity":1,"message":"299","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":17},{"ruleId":"251","severity":1,"message":"300","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":12},{"ruleId":"251","severity":1,"message":"275","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":16},{"ruleId":"251","severity":1,"message":"276","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":20},{"ruleId":"251","severity":1,"message":"301","line":17,"column":8,"nodeType":"253","messageId":"254","endLine":17,"endColumn":18},{"ruleId":"251","severity":1,"message":"302","line":18,"column":8,"nodeType":"253","messageId":"254","endLine":18,"endColumn":22},{"ruleId":"251","severity":1,"message":"278","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":17},{"ruleId":"251","severity":1,"message":"291","line":28,"column":27,"nodeType":"253","messageId":"254","endLine":28,"endColumn":33},{"ruleId":"251","severity":1,"message":"292","line":28,"column":35,"nodeType":"253","messageId":"254","endLine":28,"endColumn":40},{"ruleId":"251","severity":1,"message":"255","line":28,"column":42,"nodeType":"253","messageId":"254","endLine":28,"endColumn":46},{"ruleId":"251","severity":1,"message":"303","line":32,"column":8,"nodeType":"253","messageId":"254","endLine":32,"endColumn":18},{"ruleId":"280","severity":1,"message":"281","line":72,"column":26,"nodeType":"282","messageId":"283","endLine":72,"endColumn":28},{"ruleId":"280","severity":1,"message":"281","line":72,"column":48,"nodeType":"282","messageId":"283","endLine":72,"endColumn":50},{"ruleId":"280","severity":1,"message":"281","line":105,"column":23,"nodeType":"282","messageId":"283","endLine":105,"endColumn":25},{"ruleId":"280","severity":1,"message":"281","line":105,"column":46,"nodeType":"282","messageId":"283","endLine":105,"endColumn":48},{"ruleId":"280","severity":1,"message":"281","line":115,"column":28,"nodeType":"282","messageId":"283","endLine":115,"endColumn":30},{"ruleId":"280","severity":1,"message":"281","line":115,"column":56,"nodeType":"282","messageId":"283","endLine":115,"endColumn":58},{"ruleId":"280","severity":1,"message":"281","line":125,"column":22,"nodeType":"282","messageId":"283","endLine":125,"endColumn":24},{"ruleId":"280","severity":1,"message":"281","line":125,"column":44,"nodeType":"282","messageId":"283","endLine":125,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":135,"column":33,"nodeType":"282","messageId":"283","endLine":135,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":135,"column":66,"nodeType":"282","messageId":"283","endLine":135,"endColumn":68},{"ruleId":"280","severity":1,"message":"281","line":157,"column":23,"nodeType":"282","messageId":"283","endLine":157,"endColumn":25},{"ruleId":"280","severity":1,"message":"281","line":157,"column":46,"nodeType":"282","messageId":"283","endLine":157,"endColumn":48},{"ruleId":"251","severity":1,"message":"307","line":2,"column":9,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"308","severity":1,"message":"309","line":6,"column":5,"nodeType":"310","messageId":"311","endLine":9,"endColumn":6},{"ruleId":"251","severity":1,"message":"256","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":10},{"ruleId":"251","severity":1,"message":"261","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"251","severity":1,"message":"257","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":24},{"ruleId":"251","severity":1,"message":"255","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":12},{"ruleId":"251","severity":1,"message":"265","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":11},{"ruleId":"251","severity":1,"message":"263","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":24},{"ruleId":"251","severity":1,"message":"259","line":15,"column":10,"nodeType":"253","messageId":"254","endLine":15,"endColumn":20},{"ruleId":"251","severity":1,"message":"260","line":15,"column":22,"nodeType":"253","messageId":"254","endLine":15,"endColumn":32},{"ruleId":"251","severity":1,"message":"266","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":25},{"ruleId":"251","severity":1,"message":"267","line":22,"column":8,"nodeType":"253","messageId":"254","endLine":22,"endColumn":15},{"ruleId":"251","severity":1,"message":"264","line":30,"column":5,"nodeType":"253","messageId":"254","endLine":30,"endColumn":7},{"ruleId":"251","severity":1,"message":"279","line":62,"column":7,"nodeType":"253","messageId":"254","endLine":62,"endColumn":15},{"ruleId":"251","severity":1,"message":"269","line":199,"column":13,"nodeType":"253","messageId":"254","endLine":199,"endColumn":14},{"ruleId":"312","severity":1,"message":"313","line":379,"column":17,"nodeType":"314","endLine":379,"endColumn":139},{"ruleId":"251","severity":1,"message":"270","line":532,"column":23,"nodeType":"253","messageId":"254","endLine":532,"endColumn":24},{"ruleId":"251","severity":1,"message":"271","line":533,"column":23,"nodeType":"253","messageId":"254","endLine":533,"endColumn":24},{"ruleId":"272","severity":1,"message":"273","line":564,"column":29,"nodeType":"253","messageId":"274","endLine":564,"endColumn":35},{"ruleId":"272","severity":1,"message":"273","line":575,"column":27,"nodeType":"253","messageId":"274","endLine":575,"endColumn":33},{"ruleId":"251","severity":1,"message":"256","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":10},{"ruleId":"251","severity":1,"message":"261","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"251","severity":1,"message":"257","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":24},{"ruleId":"251","severity":1,"message":"258","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":16},{"ruleId":"251","severity":1,"message":"263","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":24},{"ruleId":"251","severity":1,"message":"259","line":15,"column":10,"nodeType":"253","messageId":"254","endLine":15,"endColumn":20},{"ruleId":"251","severity":1,"message":"260","line":15,"column":22,"nodeType":"253","messageId":"254","endLine":15,"endColumn":32},{"ruleId":"251","severity":1,"message":"264","line":23,"column":5,"nodeType":"253","messageId":"254","endLine":23,"endColumn":7},{"ruleId":"251","severity":1,"message":"299","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":17},{"ruleId":"251","severity":1,"message":"267","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":15},{"ruleId":"251","severity":1,"message":"276","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":20},{"ruleId":"251","severity":1,"message":"301","line":17,"column":8,"nodeType":"253","messageId":"254","endLine":17,"endColumn":18},{"ruleId":"251","severity":1,"message":"302","line":18,"column":8,"nodeType":"253","messageId":"254","endLine":18,"endColumn":22},{"ruleId":"251","severity":1,"message":"278","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":17},{"ruleId":"251","severity":1,"message":"291","line":27,"column":27,"nodeType":"253","messageId":"254","endLine":27,"endColumn":33},{"ruleId":"251","severity":1,"message":"292","line":27,"column":35,"nodeType":"253","messageId":"254","endLine":27,"endColumn":40},{"ruleId":"251","severity":1,"message":"255","line":27,"column":42,"nodeType":"253","messageId":"254","endLine":27,"endColumn":46},{"ruleId":"251","severity":1,"message":"303","line":29,"column":8,"nodeType":"253","messageId":"254","endLine":29,"endColumn":18},{"ruleId":"280","severity":1,"message":"281","line":73,"column":35,"nodeType":"282","messageId":"283","endLine":73,"endColumn":37},{"ruleId":"280","severity":1,"message":"281","line":73,"column":66,"nodeType":"282","messageId":"283","endLine":73,"endColumn":68},{"ruleId":"280","severity":1,"message":"281","line":170,"column":23,"nodeType":"282","messageId":"283","endLine":170,"endColumn":25},{"ruleId":"280","severity":1,"message":"281","line":170,"column":46,"nodeType":"282","messageId":"283","endLine":170,"endColumn":48},{"ruleId":"280","severity":1,"message":"281","line":180,"column":31,"nodeType":"282","messageId":"283","endLine":180,"endColumn":33},{"ruleId":"280","severity":1,"message":"281","line":180,"column":62,"nodeType":"282","messageId":"283","endLine":180,"endColumn":64},{"ruleId":"280","severity":1,"message":"281","line":190,"column":33,"nodeType":"282","messageId":"283","endLine":190,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":190,"column":66,"nodeType":"282","messageId":"283","endLine":190,"endColumn":68},{"ruleId":"280","severity":1,"message":"281","line":212,"column":23,"nodeType":"282","messageId":"283","endLine":212,"endColumn":25},{"ruleId":"280","severity":1,"message":"281","line":212,"column":46,"nodeType":"282","messageId":"283","endLine":212,"endColumn":48},{"ruleId":"251","severity":1,"message":"291","line":2,"column":27,"nodeType":"253","messageId":"254","endLine":2,"endColumn":33},{"ruleId":"251","severity":1,"message":"292","line":2,"column":35,"nodeType":"253","messageId":"254","endLine":2,"endColumn":40},{"ruleId":"308","severity":1,"message":"309","line":9,"column":5,"nodeType":"310","messageId":"311","endLine":11,"endColumn":6},{"ruleId":"251","severity":1,"message":"291","line":2,"column":27,"nodeType":"253","messageId":"254","endLine":2,"endColumn":33},{"ruleId":"251","severity":1,"message":"292","line":2,"column":35,"nodeType":"253","messageId":"254","endLine":2,"endColumn":40},{"ruleId":"308","severity":1,"message":"309","line":9,"column":5,"nodeType":"310","messageId":"311","endLine":11,"endColumn":6},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'im' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'withStyles' is defined but never used.","'makeStyles' is defined but never used.","'Avatar' is defined but never used.","'Grid' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'hi' is assigned a value but never used.","'Box' is defined but never used.","'DialogContentText' is defined but never used.","'Divider' is defined but never used.","'Copyright' is defined but never used.","'y' is assigned a value but never used.","'x' is assigned a value but never used.","'p' is assigned a value but never used.","no-redeclare","'skiInd' is already defined.","redeclared","'ListItem' is defined but never used.","'Autocomplete' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","'ApplForm' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'filt' is assigned a value but never used.","no-undef","'ApplDash' is not defined.","undef","'InputTag' is defined but never used.","'arr' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"317","text":"318"},"'Button' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SearchIcon' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'Chip' is defined but never used.","'Paper' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1640,1641],""]