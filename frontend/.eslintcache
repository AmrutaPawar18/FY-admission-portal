[{"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js":"1","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js":"2","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js":"3","/home/ahana/DASS/job-apllication-portal/frontend/src/App.js":"4","/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js":"5","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js":"6","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js":"7","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js":"8","/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js":"9","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js":"10","/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js":"11","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Recr.js":"12","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrProfile.js":"13","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrDash.js":"14","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplicationsView.js":"15","/home/ahana/DASS/job-apllication-portal/frontend/src/components/employees.js":"16","/home/ahana/DASS/job-apllication-portal/frontend/src/components/NotFound.js":"17","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplNavbar.js":"18","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrNavbar.js":"19"},{"size":500,"mtime":1610497652423,"results":"20","hashOfConfig":"21"},{"size":11429,"mtime":1611624341272,"results":"22","hashOfConfig":"21"},{"size":8873,"mtime":1611625949374,"results":"23","hashOfConfig":"21"},{"size":1682,"mtime":1611611549140,"results":"24","hashOfConfig":"21"},{"size":13393,"mtime":1611627337901,"results":"25","hashOfConfig":"21"},{"size":1251,"mtime":1610628421771,"results":"26","hashOfConfig":"21"},{"size":23482,"mtime":1611669238607,"results":"27","hashOfConfig":"21"},{"size":17004,"mtime":1611453578691,"results":"28","hashOfConfig":"21"},{"size":362,"mtime":1610497652423,"results":"29","hashOfConfig":"21"},{"size":19436,"mtime":1611630615469,"results":"30","hashOfConfig":"21"},{"size":4349,"mtime":1611666513521,"results":"31","hashOfConfig":"21"},{"size":4454,"mtime":1611629666390,"results":"32","hashOfConfig":"21"},{"size":8281,"mtime":1611627387249,"results":"33","hashOfConfig":"21"},{"size":8512,"mtime":1611667355164,"results":"34","hashOfConfig":"21"},{"size":12985,"mtime":1611665122553,"results":"35","hashOfConfig":"21"},{"size":11098,"mtime":1611666537373,"results":"36","hashOfConfig":"21"},{"size":513,"mtime":1611611510408,"results":"37","hashOfConfig":"21"},{"size":2289,"mtime":1611630326389,"results":"38","hashOfConfig":"21"},{"size":2211,"mtime":1611630339489,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"11512e0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js",[],["91","92"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js",["93","94","95","96","97"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js",["98","99","100","101","102"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { GoogleLogin } from 'react-google-login';\n\nimport axios from 'axios';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"\">\n        Headless Hunt\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '70vh',\n      alignItems: 'center',\n      alignContent: 'center'\n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            email:'',\n            pwd:''\n        }\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.googleSuccess = this.googleSuccess.bind(this);\n        this.googleError = this.googleError.bind(this);\n    }\n\n    async componentDidMount() {\n      /*var tok = localStorage.getItem('token');\n      var ck = false;\n      var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (tok) {\n          config.headers['auth-tok'] = tok;\n        }\n        await axios.get('http://localhost:5000/user', config)\n             .then(res => {\n              if(res.data.check){\n                ck = true;\n                localStorage.setItem('role', res.data.role)\n              }\n            })\n             .catch(err=>{\n              if(err.response){\n                if(err.response.data.error)\n                  console.log(err.response.data.error)\n                else\n                  console.log(err.message);\n              }\n              else\n                console.log(err.message);\n             });\n\n      if(ck){\n        if(tok){\n          var role = localStorage.getItem('role');\n          console.log(role)\n          if(role==='Applicant'){\n            console.log(\"Applicant\")\n            this.props.history.push('/aDashboard');\n          }\n          else if(role === 'Recruiter')\n            this.props.history.push('/rDashboard');\n\n        }\n      }*/\n\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        axios.post('http://localhost:5000/user/login', {email:this.state.email, password:this.state.pwd})\n             .then(res => {alert(\"Welcome\\t\" + res.data.name);\n                localStorage.setItem('token', res.data.token);\n                var role = res.data.role;\n                localStorage.setItem('role', role);\n                if(role==='Applicant')\n                  this.props.history.push('/aDashboard');\n                else if(role === 'Recruiter')\n                  this.props.history.push('/rDashboard');\n              })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n    }\n\n    async googleSuccess(resp){\n      console.log(resp);\n      axios.post('http://localhost:5000/user/login', {email:resp.profileObj.email, password:resp.googleId})\n         .then(res => {alert(\"Welcome\\t\" + res.data.name);\n            localStorage.setItem('token', res.data.token);\n            var role = res.data.role;\n            localStorage.setItem('role', role);\n            if(role==='Applicant')\n              this.props.history.push('/aDashboard');\n            else if(role === 'Recruiter')\n              this.props.history.push('/rDashboard');\n          })\n         .catch(err => {\n            if(err.response){\n                if(err.response.data.error)\n                  alert(err.response.data.error)\n                else\n                  alert(err.message);\n              }\n              \n              else\n                alert(err.message);  \n         })\n         ;\n    }\n    googleError(e){\n      console.log(e);\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div style={classes.paper}>\n      \n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" >\n          Sign in\n        </Typography>\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={this.state.email}\n            onChange={this.onChangeEmail}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={this.state.pwd}\n            onChange={this.onChangePwd}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n\n          <Grid container style={{paddingTop:10}}>\n            <Grid item xs>\n              <GoogleLogin\n            clientId=\"531568689114-5rg3ebcc6ciphbv6ged7m54lbj0gine5.apps.googleusercontent.com\"\n            \n            onSuccess={this.googleSuccess}\n            onFailure={this.googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n\n\n    // render(){\n    //     return(\n            \n    //             <Container>\n    //                 <img\n    //                     src={im}\n    //                     alt=\"Job application portal\"\n    //                 />\n    //                 <div>\n    //                     <Button href=\"/register\">Register</Button>\n    //                 </div>\n    //             </Container>\n            \n    //     )\n    // }\n\n    /*render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangeUsername}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.pwd}\n                               onChange={this.onChangePwd}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\n                        <Button  href=\"/register\">Register</Button>\n                    </div>\n                </form>\n           </div>\n        )\n    }*/\n",["103","104"],"/home/ahana/DASS/job-apllication-portal/frontend/src/App.js",["105","106"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Home from './components/Home.js'\nimport acreateProfile from './components/RegPart2Appl.js'\nimport rcreateProfile from './components/RegPart2Recr.js'\nimport Register from './components/Register.js'\nimport path from './components/ApplDash.js'\nimport rDash from './components/RecrDash.js'\nimport createJob from './components/createJob.js'\nimport aProfile from './components/ApplProfile.js'\nimport rProfile from './components/RecrProfile.js'\nimport myAppl from './components/MyAppl.js'\nimport ApplView from './components/ApplicationsView.js'\nimport emp from './components/employees.js'\nimport NotFound from './components/NotFound.js'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/register\" component={Register}/>\n        <Route path=\"/acreateProfile\" component={acreateProfile}/>\n        <Route path=\"/rcreateProfile\" component={rcreateProfile}/>\n        <Route path=\"/aDashboard\" component={path}/>\n        <Route path=\"/rDashboard\" component={rDash}/>\n        <Route path=\"/applications/:jobId\" component={ApplView}/>\n        <Route path=\"/employees\" component={emp}/>\n        <Route path=\"/createJob\" component={createJob}/>\n        <Route path=\"/aProfile\" component={aProfile}/>\n        <Route path=\"/rProfile\" component={rProfile}/>\n        <Route path=\"/myApplications\" component={myAppl}/>\n        <Route component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n",["107","108"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js",["109","110","111","112","113","114","115","116","117","118"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js",[],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js",["135","136","137","138","139","140","141","142","143","144","145","146"],"import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\n\nimport axios from 'axios';\n\n/**/\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10,\n      marginTop: 10,\n    },\n  };\n  \nconst conf = {\n  ignoreCase:true,\n  trim: true\n}\nconst filter = createFilterOptions(conf);\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            education:[],\n            skills:[],\n            predSkills:[{key:\"html\",name:\"HTML\"},{key:\"css\",name:\"CSS\"},{key:\"js\",name:\"JS\"}],\n            rating:0,\n            open:false,\n            insti_name:'',\n            start_year:(new Date()).getFullYear(),\n            end_year:'',\n\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onEduChange = this.onEduChange.bind(this);\n        this.handleClose= this.handleClose.bind(this);\n        this.handleDiaSubmit = this.handleDiaSubmit.bind(this);\n        this.onIntInputChange = this.onIntInputChange.bind(this);\n    }\n\n    componentDidMount() {\n     \n    }\n\n    onIntInputChange(e) {\n      var yr = parseInt(e.target.value)\n      this.setState({ [e.target.name] : yr})\n    }\n\n    handleClose(e){\n      e.preventDefault();\n      this.setState({\n        start_year:(new Date()).getFullYear(),\n        end_year:'',\n        insti_name:'',\n        open:false\n      });\n    }\n\n    handleDiaSubmit(e){\n      e.preventDefault();\n      var x = {\n        insti_name:this.state.insti_name,\n        start_year:this.state.start_year,\n        end_year:this.state.end_year\n      }\n      console.log(x);\n      if(x.insti_name!=='' && x.start_year!==''){\n        if(parseInt(x.start_year)>parseInt(x.end_year)){\n          alert(\"End year cannot be less than Start year\");\n          return;\n        }\n        if(x.start_year>2100 || x.start_year<1900){\n          alert(\"Invalid start year\")\n          return;\n        }\n        if(x.end_year){\n          console.log(x.end_year+\" hi\")\n          if(x.end_year>2100|| x.end_year<1900){\n            alert(\"Invalid end year\")\n            return;\n          }\n        }\n        var y = this.state.education;\n        y.push(x);\n        this.setState({\n          education: y,\n          start_year:(new Date()).getFullYear(),\n          end_year:'',\n          insti_name:'',\n          open:false\n        });\n      }\n      else{\n        alert(\"Institute name and start year are compulsory\");\n        \n      }\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onEduChange(event) {\n        var x = {...this.state.education};\n        var y = x.education;\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n          var b=1;\n\n          var prof = {\n            education: this.state.education,\n            skills: this.state.skills,\n            rating:0\n          }\n\n          this.state.education.forEach(function(x,i){\n            if(x.insti_name!=='' && x.start_year!==''){\n              if(parseInt(x.start_year)>parseInt(x.end_year)){\n                alert(\"End year cannot be less than Start year for education entry\" + (i+1));\n                b=0;\n                return;\n              }\n              if(x.start_year>2100 || x.start_year<1900){\n                alert(`Invalid start year for education no. ${i+1}`)\n                b=0;\n                return;\n              }\n              if(!x.end_year){ \n                prof.education[i].end_year=null;\n              }\n              else{\n                if(x.end_year>2100|| x.end_year<1900){\n                  alert(`Invalid end year for education entry ${i+1}`)\n                  b=0;\n                  return;\n                }\n              }\n              // console.log(\"hi\");\n              \n            }\n            else{\n              alert(\"Institute name and start year are compulsory. Check entry\"+(i+1));\n              b=0;\n              return;\n            }\n            // console.log(\"ji\")\n          });\n          if(!b) return\n          // console.log(\"ki\")\n          var token = localStorage.getItem('token');\n\n          // Headers\n          var config = {\n            headers: {\n              'Content-type': 'application/json'\n            }\n          }\n          // If token, add to headers\n          if (token) {\n            config.headers['auth-tok'] = token;\n          }\n\n          console.log(prof);\n\n          axios.post('http://localhost:5000/appl/newProfile', prof, config)\n               .then(res => {\n                  alert(\"Added!\");\n                  this.setState({edit:false});\n                  this.props.history.push(\"/aDashboard\")\n                })\n               .catch(err => {\n                  if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);            \n               });\n          \n    }\n\nrender() {\n  console.log(this.state.predSkills);\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\n          Profile\n        </Typography>\n\n\n              <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Education</DialogTitle>\n                <DialogContent>\n                  <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                  <TextField\n                    autoFocus\n                    id=\"insti_name\"\n                    label=\"Institute Name\"\n                    fullWidth\n                    name= \"insti_name\"\n                    required\n                    value={this.state.insti_name}\n                    onChange={ this.onInputChange}\n                  />\n                  </Grid>\n                  <Grid item xs={6}>\n                  <TextField\n                    id=\"start_year\"\n                    label=\"Start Year\"\n                    name=\"start_year\"\n                    required\n                    fullWidth\n                    type=\"number\"\n                    value={this.state.start_year}\n                    error={(parseInt(this.state.start_year)>=1900)?false:true}\n                    onChange={this.onIntInputChange}\n                  />\n                  </Grid>\n                  <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"end_year\"\n                    label=\"End Year\"\n                    name=\"end_year\"\n                    type=\"number\"\n                    value={this.state.end_year}\n                    onChange={this.onIntInputChange}\n                  />\n                  </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button onClick={this.handleDiaSubmit} color=\"primary\">\n                    Add\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n        You must fill this form to continue\n          <Grid container spacing={2}>\n            \n            <Grid item xs={12}>\n            <Typography>Education:</Typography>\n            \n              <FormControl variant=\"outlined\" required fullWidth>\n              <ol>\n                {this.state.education.map((edu,ind)=>(\n                  <li>\n                  <Grid container spacing={1}>\n                  <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    variant=\"filled\"\n                    label=\"Institute Name\"\n                    id=\"insti_name\"\n                    value={edu.insti_name}\n                    onChange={(e)=>{\n                      var temp = this.state.education; \n                      temp[ind].insti_name = e.target.value; \n                      this.setState({education:temp})\n                    }}\n                  />\n                  </Grid>\n                  <Grid item xs={6} md={3}>\n                <TextField\n                  variant=\"filled\"\n                  required\n                    fullWidth\n                  name=\"start_year\"\n                  label=\"Start Year\"\n                  id=\"start_year\"\n                  value={edu.start_year}\n                  type=\"number\"\n                  \n                  onChange={(e)=>{\n                      var temp = this.state.education; \n                      temp[ind].start_year = parseInt(e.target.value)||(new Date()).getFullYear(); \n                      this.setState({education:temp})\n                    }}\n                />\n                </Grid>\n                  <Grid item xs={6} md={3}>\n                <TextField\n                  variant=\"filled\"\n                  name=\"end_year\"\n                    fullWidth\n                  label=\"End Year\"\n                  id=\"end_year\"\n                  value={edu.end_year}\n                  type=\"number\"\n                  onChange={(e)=>{\n                      var temp = this.state.education; \n                      temp[ind].end_year = parseInt(e.target.value)||\"\"; \n                      this.setState({education:temp})\n                    }}\n                />\n                </Grid>\n                </Grid>\n                </li>\n              ))}\n              </ol>\n              <Grid item xs={12}>\n                <Button onClick={(e)=> {e.preventDefault(); this.setState({open:true})}}>+ Add education</Button>\n              </Grid>\n\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={this.state.predSkills}\n                renderOption={(option) => option.name}\n                getOptionLabel={(option) => {\n                  // Value selected with enter, right from the input\n                  if (typeof option === 'string') {\n                    return option;\n                  }\n                  // Add \"xxx\" option created dynamically\n                  if (option.inputValue) {\n                    return option.inputValue;\n                  }\n                  // Regular option\n                  return option.name;\n                }}\n                onChange={(event, newValue) => {\n                  console.log(\"onchange\")\n                  console.log(newValue)\n                  var pred = this.state.predSkills;\n                  var x = this.state.skills;\n                  var p=[];var s=[];\n\n                  newValue.forEach((val,i)=>{\n                    console.log(val)\n                    if(typeof val==='string'){  //option wasnt selected, directly pressed enter\n                      \n                      var predInd = pred.findIndex((it)=>it.key===val.toLowerCase());\n                      if(predInd!==-1){  //present in predSkills\n                        var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.toLowerCase(),name:val});\n\n                        }\n                      }\n                      else{\n                        s.push({key:val.toLowerCase(),name:val});\n                        pred.push({key:val.toLowerCase(),name:val});\n                      }\n                      \n                    }\n                    else if(val && val.name){\n                      if(val.key!==val.name.toLowerCase()){ //add \"\" got selected\n                        pred.push({key:val.key.toLowerCase(), name:val.key});\n                        s.push({key:val.key.toLowerCase(), name:val.key});\n                        \n                      }\n                      else{\n                      //  p.push({key:val.name.toLowerCase(), name:val.name});\n                        var skiInd = s.findIndex((it)=>it.key===val.key.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.name.toLowerCase(), name:val.name});\n                        }\n                      }\n                    }\n                    else {\n                    //  p.push({key:val.name.toLowerCase(), name:val.name});\n                      var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.name.toLowerCase(), name:val.name});\n                        }\n                    }\n\n                  });\n                  console.log(pred);\n                  this.setState({\n                    skills:s,\n                    predSkills:pred\n                  })\n\n\n                  \n                  console.log(\"onchange\")\n\n              }}\n                freeSolo\n                filterOptions={(options, params) => {\n                  const filtered = filter(options, params);\n                  console.log(\"filtered\" + filtered)\n                  // Suggest the creation of a new value\n                  if (params.inputValue !== '') {\n                    var skiInd = filtered.findIndex((it)=>it.key===params.inputValue.toLowerCase());\n                        if(skiInd!==-1){  //present in options\n\n                        }\n                        else{\n                    filtered.push({\n                      key: params.inputValue.toLowerCase(),\n                      name: `Add \"${params.inputValue}\"`,\n                    });}\n                  }\n\n                  return filtered;\n                }}\n                selectOnFocus\n                clearOnBlur\n                handleHomeEndKeys\n                //filterSelectedOptions//removes already selected options\n                renderTags={(value, getTagProps) =>\n                  \n                  this.state.skills.map((option, index) => \n                  \n                    <Chip variant=\"outlined\" key={option.name.toLowerCase()} label={option.name} {...getTagProps({ index })} />\n                  )\n                  \n                }\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" label=\"Skills\" placeholder=\"Add a skill\"/>\n                )}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n          Update Profile\n          </Button>\n\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n}\n\n",["147","148"],"/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js",[],["149","150"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Fuse from 'fuse.js';\nimport ApplNavbar from './ApplNavbar.js';\nimport moment from 'moment'\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nclass ApplDash extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            jobs: [],\n            sortedJobs: [], \n            filtjobs:[],\n            sortSalary:true,\n            sortBy:\"salary\",\n            value:[20,1000],\n            showSop:false,\n            sop:'',\n            job:{},\n            maxSal:0,\n            filtSal:false,\n            filtType:false,\n            type:'',\n            filtDur:false,\n            duration:'',\n            desc:1,\n            recr_id:'',\n            mess:'',\n            search:'',\n        };\n        this.renderIcon = this.renderIcon.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.filtJobs = this.filtJobs.bind(this); // to filter jobs\n        this.filtAlt = this.filtAlt.bind(this);   // on change of job type and duration dropdowns\n        this.onSliderChange = this.onSliderChange.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onCheckChange = this.onCheckChange.bind(this);\n        this.apply = this.apply.bind(this); //open dialog\n        this.handleClose= this.handleClose.bind(this);  //close dialog\n        this.handleDiaSubmit = this.handleDiaSubmit.bind(this);\n        this.sortJobs = this.sortJobs.bind(this);\n        this.sortAlt = this.sortAlt.bind(this);   //on changing sort section dropdowns\n        this.loadJobs = this.loadJobs.bind(this);\n        this.fuzzySearch = this.fuzzySearch.bind(this);\n    }\n\n    loadJobs(){\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n        axios.get('http://localhost:5000/appl/',config)\n          .then(response => {\n            var array = response.data.f;\n            array.sort(function(a, b) {\n              if(a.salary != undefined && b.salary != undefined){\n                  return (-1) * (a.salary - b.salary);\n              }\n              else{\n                  return 1;\n              }\n            });\n            this.setState({\n              jobs: array, \n              sortedJobs:array,\n              filtjobs:array,\n              maxSal:array[0].salary,\n              mess: response.data.mess\n            });\n          })\n          .catch(function(error) {\n            console.log(error);\n          })\n    }\n\n    componentDidMount() {\n      this.loadJobs();\n    }\n\n    handleChange(e,n){\n      //  console.log(n);\n       \n        this.setState({\n            value:n,\n        })\n    }\n\n    handleClose(e){\n      e.preventDefault();\n      this.setState({\n        sop:'',\n        showSop:false,\n        jobId:'',\n        jobTitle:'',\n        jobSal:'',\n        job:{}\n\n      });\n    }\n\n    handleDiaSubmit(e){\n      e.preventDefault();\n\n      var arr = this.state.sop.split(' ');\n      if(arr.length>250){\n        alert(\"Sop exceeded 250 words!\");\n        return;\n      }\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        var data = {\n          sop:this.state.sop, \n          job_id:this.state.job._id, \n          recr_id:this.state.job.recr_id,\n          job_title:this.state.job.title,\n          job_salary:this.state.job.salary,\n          job_type:this.state.job.type\n        }\n\n      axios.post('http://localhost:5000/appl/apply',data, config)\n          .then(response => {\n            \n            this.setState({\n              showSop:false,\n              sop:'',\n              job:{}\n            });\n            this.loadJobs();\n            alert(\"Submitted application!\");\n\n          })\n          .catch(function(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again\");\n          })\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    async onCheckChange(event) {\n        await this.setState({ [event.target.name]: event.target.checked });\n        this.filtJobs();\n    }\n\n    apply(job, e){\n      if(this.state.mess!==''){\n        alert(this.state.mess);\n        return;\n      }\n      this.setState({showSop:true, job:job})\n    }\n\n    async filtAlt(e){\n      await this.setState({ [e.target.name]: e.target.value });\n      this.filtJobs();\n    }\n\n    async onSliderChange(e,n){\n      await this.setState({value:n})\n      this.filtJobs()\n    }\n\n    filtJobs(){\n      var arr = this.state.jobs;\n      \n      var filt = [];\n      if(this.state.filtSal){\n        var n = this.state.value\n        arr = arr.filter((job, i)=>(job.salary>=n[0] && job.salary<=n[1]))\n      }\n      if(this.state.filtType){\n        arr = arr.filter((job, i)=>(job.type===this.state.type))\n      }\n      if(this.state.filtDur){\n        arr = arr.filter((job, i)=>(job.duration<this.state.duration))\n      }\n      \n        if (this.state.search) {\n          const fuse = new Fuse(arr, {\n            keys: [\n                'title'\n            ]\n          });\n            var filteredListings = fuse.search(this.state.search)\n            arr = filteredListings.map((listing) => listing.item)\n        }\n      this.setState({\n        filtjobs:arr\n      })\n    }\n\n    fuzzySearch(e){\n      var arr = this.state.jobs;\n      var text = e.target.value;\n      \n      var filt = [];\n      if(this.state.filtSal){\n        var n = this.state.value\n        arr = arr.filter((job, i)=>(job.salary>=n[0] && job.salary<=n[1]))\n      }\n      if(this.state.filtType){\n        arr = arr.filter((job, i)=>(job.type===this.state.type))\n      }\n      if(this.state.filtDur){\n        arr = arr.filter((job, i)=>(job.duration<this.state.duration))\n      }\n      \n        if (text) {\n          const fuse = new Fuse(arr, {\n            keys: [\n                'title'\n            ]\n          });\n            var filteredListings = fuse.search(text)\n            arr = filteredListings.map((listing) => listing.item)\n        }\n      this.setState({\n        filtjobs:arr,\n        search: text\n      })\n    }\n\n    async sortAlt(e){\n      await this.setState({ [e.target.name]: e.target.value });\n      this.sortJobs();\n    }\n\n    sortJobs(){\n/**\n *      Note that this is sorting only at front-end.\n */\n        var array = this.state.filtjobs;\n        var flag = this.state.desc ;  //when desc 1 we have to \n                                // sort in desc. sort will be in desc if flag=1\n        var sb = this.state.sortBy;\n        if(sb===\"salary\"){\n          array.sort(function(a, b) {\n            if(a.salary != undefined && b.salary != undefined){\n                return (1 - flag*2) * (a.salary - b.salary);\n            }\n            else{\n                return 1;\n            }\n          });\n        }\n        else if(sb ===\"duration\"){\n          array.sort(function(a, b) {\n            if(a.duration != undefined && b.duration != undefined){\n                return (1 - flag*2) * (a.duration - b.duration);\n            }\n            else{\n                return 1;\n            }\n          });\n        }\n        else if(sb ===\"rating\"){\n          array.sort(function(a, b) {\n            if(a.rating != undefined && b.rating != undefined){\n                return (1 - flag*2) * (a.rating - b.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        }\n        //console.log(flag)\n        this.setState({\n            filtjobs:array,\n            sortSalary:!this.state.sortSalary,\n        })\n    }\n\n    renderIcon(){\n        if(this.state.sortSalary){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    render() {\n      return (\n        <div style={{flexGrow:1,display:'flex', flexDirection: 'column'}}>\n          <ApplNavbar/>\n          <Typography component=\"h1\" variant=\"h4\" style={{marginBottom:10}}>\n          Dashboard\n        </Typography>\n\n        <Dialog open={this.state.showSop} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Submit application</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <TextField\n              autoFocus\n              id=\"sop\"\n              label=\"Statement of Purpose\"\n              fullWidth\n              name= \"sop\"\n              required\n              multiline\n              rows={4}\n              value={this.state.sop}\n              onChange={ this.onInputChange}\n            />\n            </Grid>\n           \n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleDiaSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n\n        <Grid container spacing={1}>\n        <Grid item xs={12} md={9}>\n          <Paper style={{textAlign:'center', marginBottom:10, padding:10}}>\n          <Grid container spacing={1}>\n          <Grid item xs={12}>\n          <Typography> FILTER:</Typography>\n          </Grid>\n          <Grid item xs={6} md={4}>\n          <Paper elevation={0} style={{textAlign:'center'}}>\n          <FormControlLabel\n                control={<Checkbox color=\"primary\" \n                name=\"filtSal\"\n                checked={this.state.filtSal}\n                onChange={this.onCheckChange}/>}\n                label=\"Salary\"\n                labelPlacement=\"bottom\"\n              />\n          <Slider\n                max={this.state.maxSal?this.state.maxSal+500:10000}\n                value={this.state.value}\n                onChange={this.handleChange}\n                onChangeCommitted={this.filtJobs}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n              />\n              </Paper>\n              </Grid>\n              <Grid item xs={4}>\n              <Paper elevation={0} style={{textAlign:'center'}}>\n                <FormControlLabel\n                control={<Checkbox color=\"primary\" \n                name=\"filtType\"\n                checked={this.state.filtType}\n                onChange={this.onCheckChange}/>}\n                label=\"Job Type\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControl variant=\"outlined\" fullWidth>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"type\"\n                  value={this.state.type}\n                  onChange={this.filtAlt}\n\n                >\n                  <MenuItem value={\"\"}>\n                    <em>Select</em>\n                  </MenuItem>\n                  <MenuItem value={\"Full-time\"}>\n                    Full-time\n                  </MenuItem>\n                  <MenuItem value={\"Part-time\"}>Part-time</MenuItem>\n                  <MenuItem value={\"Work from Home\"}>Work from Home</MenuItem>\n                </Select>\n              </FormControl>\n              </Paper>\n              </Grid>\n\n              <Grid item xs={4}>\n                <Paper elevation={0} style={{textAlign:'center'}}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" \n                name=\"filtDur\"\n                checked={this.state.filtDur}\n                onChange={this.onCheckChange}/>}\n                label=\"Duration less than:\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControl variant=\"outlined\" fullWidth>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"duration\"\n                  value={this.state.duration}\n                  onChange={this.filtAlt}\n                >\n                  <MenuItem value={1}>1</MenuItem>\n                  <MenuItem value={2}>2</MenuItem>\n                  <MenuItem value={3}>3</MenuItem>\n                  <MenuItem value={4}>4</MenuItem>\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={6}>6</MenuItem>\n                  <MenuItem value={7}>7</MenuItem>\n                </Select>\n              </FormControl>\n              </Paper>\n\n              </Grid>\n              </Grid>\n              </Paper>\n              </Grid>\n\n          <Grid item xs={12} md={3}>\n          <Paper style={{textAlign:'center', paddingTop:10, marginBottom:5}}>\n          <Grid container spacing={0}>\n          <Grid item xs={6}>\n          <Typography> SORT: </Typography>\n          </Grid>\n          <Grid item xs={6}>\n          <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"desc\"\n                  value={this.state.desc}\n                  onChange={this.sortAlt}\n                >\n                  <MenuItem value={0}>\n                    Ascending\n                  </MenuItem>\n                  <MenuItem value={1}>Descending</MenuItem>\n          </Select>\n          </Grid>\n          <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n  <RadioGroup aria-label=\"sort\" name=\"sortBy\" value={this.state.sortBy} onChange={this.sortAlt}>\n    <FormControlLabel value=\"salary\" control={<Radio />} label=\"Salary\" />\n    <FormControlLabel value=\"duration\" control={<Radio />} label=\"Duration\" />\n    <FormControlLabel value=\"rating\" control={<Radio />} label=\"Rating\" />\n  </RadioGroup>\n</FormControl>\n        </Grid>\n        </Grid>\n        </Paper>\n          </Grid>\n          <Grid item xs={12} md={9} lg={9}>\n            <List component=\"nav\" aria-label=\"mailbox folders\">\n                <TextField \n                id=\"standard-basic\" \n                name=\"search\"\n                label=\"Search title\" \n                fullWidth={true}   \n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment>\n                            <IconButton>\n                                <SearchIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    )}}\n                value={this.state.search}\n                onChange={this.fuzzySearch}\n                />\n            </List>\n            </Grid>\n          \n          </Grid>\n          <Grid container>\n            <Grid item xs={12} md={12} lg={12}>\n              <Paper>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Title</TableCell>\n                      <TableCell>Recruiter Name @ Email</TableCell>\n                      <TableCell>Date of posting</TableCell>\n                      <TableCell>Deadline for application</TableCell>\n                      <TableCell>Required Skills</TableCell>\n                      <TableCell>Type of Job</TableCell>\n                      <TableCell>Duration</TableCell>\n                      <TableCell> Salary</TableCell>\n                      <TableCell>Rating</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {this.state.filtjobs.map((job,ind) => (\n                      <TableRow key={job._id}>\n                        <TableCell>{job.title}</TableCell>\n                        <TableCell>{job.recr_id.fname+\" \"+job.recr_id.lname+\" @ \"+job.recr_id.email}</TableCell>\n                        <TableCell>{moment(job.date_of_post).format('DD-MM-YYYY HH:mm')}</TableCell>\n                        <TableCell>\n                          {job.deadline}\n                          {(job.applied)?(<Chip label=\"Applied\"/>):((job.maxAppl-job.appl_got)<=0)||((job.maxPos-job.posn_filled)<=0)?\n                            (\n                            <Button\n                              size=\"small\"\n                              color=\"secondary\">\n                              Filled\n                            </Button>\n                            ):(\n                            <Button\n                              size=\"small\"\n                              onClick={(e)=>this.apply(job,e)}\n                              style={{backgroundColor:'green', color:'white'}}>\n                              Apply\n                            </Button>\n                            )}\n                        </TableCell>\n                        <TableCell>{job.skills.map((data)=>(\n                          <Chip\n                            key={data.key}\n                            label={data.name}\n                          />\n                        ))}</TableCell>\n                        <TableCell>{job.type}</TableCell>\n                        <TableCell>{job.duration?job.duration:\"0(indefinite)\"}</TableCell>\n                        <TableCell>{job.salary}</TableCell>\n                        <TableCell>{job.rating}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Paper>               \n            </Grid>    \n          </Grid>            \n        </div>\n      )\n    }\n}\n\nexport default ApplDash;","/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js",["167","168","169","170","171","172","173","174","175","176","177"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Recr.js",["178","179","180","181","182","183","184","185","186"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"\">\n        Headless Hunt\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n     paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            contact:'',\n            bio:''\n        }\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n      \n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onSubmit(e) {\n\n        e.preventDefault();\n        var arr = this.state.bio.split(' ');\n      if(arr.length>250){\n        alert(\"Bio exceeded 250 words!\");\n        return;\n      }\n\n        var token = localStorage.getItem('token');\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n        var data = this.state;\n        axios.post('http://localhost:5000/recr/newProfile', data, config)\n             .then(res => {\n                alert(\"Profile created!\");\n                \n                this.props.history.push('/rDashboard');\n              })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\n          Profile\n        </Typography>\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          You must fill this form to continue\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"contact\"\n            label=\"Contact number\"\n            name=\"contact\"\n            autoFocus\n            value={this.state.contact}\n            onChange={this.onInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            multiline\n            rows={4}\n            name=\"bio\"\n            label=\"Bio (max 250 words)\"\n            id=\"bio\"\n            value={this.state.bio}\n            onChange={this.onInputChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Create profile\n          </Button>\n        </form>\n      </Paper>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n\n",["187","188"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrProfile.js",["189","190","191","192","193","194","195","196"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport RecrNavbar from './RecrNavbar.js';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            email:'',\n            fname:'',\n            lname:'',\n            bio:'',\n            contact:'',\n            edit:false\n        }\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        await axios.get('http://localhost:5000/recr/profile', config)\n             .then(res => {\n              console.log(res.data);\n              this.setState({\n                fname: res.data.user_id.fname,\n                lname: res.data.user_id.lname,\n                email: res.data.user_id.email,\n                contact: res.data.contact,\n                bio: res.data.bio\n              })\n            })\n             .catch(err=>{\n              if(err.response){\n                if(err.response.data.error)\n                  alert(err.response.data.error)\n                else\n                  alert(err.message);\n\n              }\n              else\n                alert(err.message);\n              this.props.history.push('/')\n             });\n\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    async onSubmit(e) {\n      e.preventDefault();\n      if(!this.state.edit)\n        this.setState({edit:true});\n      else{\n        var arr = this.state.bio.split(' ');\n        if(arr.length>250){\n          alert(\"Bio exceeded 250 words!\");\n          return;\n        }\n        var token = localStorage.getItem('token');\n\n          // Headers\n          var config = {\n            headers: {\n              'Content-type': 'application/json'\n            }\n          }\n          // If token, add to headers\n          if (token) {\n            config.headers['auth-tok'] = token;\n          }\n\n          var prof = this.state;\n          delete prof.edit;\n          console.log(prof);\n          var c=0;\n          await axios.patch('http://localhost:5000/user/updateDetails', {lname:this.state.lname,fname:this.state.fname}, config)\n               .then(res => {\n                })\n               .catch(err => {\n                  if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n                  c=1;\n               });\n          if(c) return;\n          axios.patch('http://localhost:5000/recr/updateProfile', prof, config)\n               .then(res => {\n                  alert(\"Updated\");\n                  this.setState({edit:false})\n                })\n               .catch(err => {\n                  if(err.response){\n                    if(err.response.data.error)\n                      console.log(err.response.data.error)\n                    else\n                      console.log(err.message);\n                  }\n                  \n                  else\n                    console.log(err.message);             \n               });\n          \n        }\n    }\n\nrender() {\n\n  return (\n    <div>\n    <RecrNavbar/>\n    <Container component=\"main\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" >\n          Profile\n        </Typography>\n        \n        <form style={classes.form} noValidate onSubmit={this.onSubmit}>\n          <Grid container spacing={2} style={{padding:10}}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"fname\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fname\"\n                label=\"First Name\"\n                autoFocus\n                value={this.state.fname}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lname\"\n                label=\"Last Name\"\n                name=\"lname\"\n                value={this.state.lname}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: true\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"contact\"\n                label=\"Contact number\"\n                name=\"contact\"\n                value={this.state.contact}\n                onChange={this.onInputChange}InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n              </Grid>\n              <Grid item xs={12}>\n              <TextField \n                variant=\"outlined\"\n                required\n                fullWidth\n                multiline\n                rows={4}\n                name=\"bio\"\n                label=\"Bio (max 250 words)\"\n                id=\"bio\"\n                value={this.state.bio}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            \n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n          {this.state.edit?\"Update\":\"Edit\"}\n          </Button>\n\n        </form>\n      </Paper>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n    </div>\n  );\n}\n}\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrDash.js",["197","198","199","200"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplicationsView.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/employees.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/NotFound.js",["246","247"],"import React, {Component} from 'react';\nimport {Paper, Container, Typography} from '@material-ui/core'\n\nexport default class nf extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <Container style={{display:'flex', alignItems:'center', justifyContent:'center'}}>\n            <Typography variant=\"h4\">\n                404 Not Found!\n            </Typography>\n           </Container>\n        )\n    }\n}","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplNavbar.js",["248","249","250"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrNavbar.js",["251","252","253"],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":24},{"ruleId":"258","severity":1,"message":"262","line":9,"column":8,"nodeType":"260","messageId":"261","endLine":9,"endColumn":16},{"ruleId":"258","severity":1,"message":"263","line":15,"column":8,"nodeType":"260","messageId":"261","endLine":15,"endColumn":11},{"ruleId":"258","severity":1,"message":"264","line":18,"column":10,"nodeType":"260","messageId":"261","endLine":18,"endColumn":20},{"ruleId":"258","severity":1,"message":"265","line":24,"column":8,"nodeType":"260","messageId":"261","endLine":24,"endColumn":25},{"ruleId":"258","severity":1,"message":"266","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":10},{"ruleId":"258","severity":1,"message":"259","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":24},{"ruleId":"258","severity":1,"message":"262","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":16},{"ruleId":"258","severity":1,"message":"267","line":14,"column":10,"nodeType":"260","messageId":"261","endLine":14,"endColumn":20},{"ruleId":"258","severity":1,"message":"264","line":14,"column":22,"nodeType":"260","messageId":"261","endLine":14,"endColumn":32},{"ruleId":"254","replacedBy":"268"},{"ruleId":"256","replacedBy":"269"},{"ruleId":"258","severity":1,"message":"270","line":1,"column":8,"nodeType":"260","messageId":"261","endLine":1,"endColumn":12},{"ruleId":"258","severity":1,"message":"271","line":4,"column":42,"nodeType":"260","messageId":"261","endLine":4,"endColumn":46},{"ruleId":"254","replacedBy":"272"},{"ruleId":"256","replacedBy":"273"},{"ruleId":"258","severity":1,"message":"274","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":24},{"ruleId":"258","severity":1,"message":"262","line":9,"column":8,"nodeType":"260","messageId":"261","endLine":9,"endColumn":16},{"ruleId":"258","severity":1,"message":"271","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":12},{"ruleId":"258","severity":1,"message":"263","line":16,"column":8,"nodeType":"260","messageId":"261","endLine":16,"endColumn":11},{"ruleId":"258","severity":1,"message":"275","line":17,"column":8,"nodeType":"260","messageId":"261","endLine":17,"endColumn":24},{"ruleId":"258","severity":1,"message":"264","line":19,"column":10,"nodeType":"260","messageId":"261","endLine":19,"endColumn":20},{"ruleId":"258","severity":1,"message":"276","line":23,"column":9,"nodeType":"260","messageId":"261","endLine":23,"endColumn":17},{"ruleId":"258","severity":1,"message":"277","line":120,"column":13,"nodeType":"260","messageId":"261","endLine":120,"endColumn":16},{"ruleId":"258","severity":1,"message":"278","line":204,"column":13,"nodeType":"260","messageId":"261","endLine":204,"endColumn":25},{"ruleId":"258","severity":1,"message":"266","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":10},{"ruleId":"258","severity":1,"message":"274","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":24},{"ruleId":"258","severity":1,"message":"263","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":11},{"ruleId":"258","severity":1,"message":"275","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":24},{"ruleId":"258","severity":1,"message":"267","line":15,"column":10,"nodeType":"260","messageId":"261","endLine":15,"endColumn":20},{"ruleId":"258","severity":1,"message":"264","line":15,"column":22,"nodeType":"260","messageId":"261","endLine":15,"endColumn":32},{"ruleId":"258","severity":1,"message":"265","line":20,"column":8,"nodeType":"260","messageId":"261","endLine":20,"endColumn":25},{"ruleId":"258","severity":1,"message":"279","line":22,"column":8,"nodeType":"260","messageId":"261","endLine":22,"endColumn":15},{"ruleId":"258","severity":1,"message":"280","line":30,"column":5,"nodeType":"260","messageId":"261","endLine":30,"endColumn":7},{"ruleId":"258","severity":1,"message":"281","line":32,"column":10,"nodeType":"260","messageId":"261","endLine":32,"endColumn":19},{"ruleId":"258","severity":1,"message":"282","line":209,"column":13,"nodeType":"260","messageId":"261","endLine":209,"endColumn":14},{"ruleId":"258","severity":1,"message":"283","line":600,"column":23,"nodeType":"260","messageId":"261","endLine":600,"endColumn":24},{"ruleId":"258","severity":1,"message":"284","line":601,"column":23,"nodeType":"260","messageId":"261","endLine":601,"endColumn":24},{"ruleId":"285","severity":1,"message":"286","line":632,"column":29,"nodeType":"260","messageId":"287","endLine":632,"endColumn":35},{"ruleId":"285","severity":1,"message":"286","line":643,"column":27,"nodeType":"260","messageId":"287","endLine":643,"endColumn":33},{"ruleId":"258","severity":1,"message":"274","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":24},{"ruleId":"258","severity":1,"message":"263","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":11},{"ruleId":"258","severity":1,"message":"275","line":14,"column":8,"nodeType":"260","messageId":"261","endLine":14,"endColumn":24},{"ruleId":"258","severity":1,"message":"265","line":20,"column":8,"nodeType":"260","messageId":"261","endLine":20,"endColumn":25},{"ruleId":"258","severity":1,"message":"279","line":22,"column":8,"nodeType":"260","messageId":"261","endLine":22,"endColumn":15},{"ruleId":"258","severity":1,"message":"281","line":28,"column":10,"nodeType":"260","messageId":"261","endLine":28,"endColumn":19},{"ruleId":"258","severity":1,"message":"282","line":159,"column":13,"nodeType":"260","messageId":"261","endLine":159,"endColumn":14},{"ruleId":"258","severity":1,"message":"283","line":410,"column":23,"nodeType":"260","messageId":"261","endLine":410,"endColumn":24},{"ruleId":"258","severity":1,"message":"284","line":411,"column":23,"nodeType":"260","messageId":"261","endLine":411,"endColumn":24},{"ruleId":"285","severity":1,"message":"286","line":442,"column":29,"nodeType":"260","messageId":"287","endLine":442,"endColumn":35},{"ruleId":"285","severity":1,"message":"286","line":453,"column":27,"nodeType":"260","messageId":"287","endLine":453,"endColumn":33},{"ruleId":"254","replacedBy":"288"},{"ruleId":"256","replacedBy":"289"},{"ruleId":"254","replacedBy":"290"},{"ruleId":"256","replacedBy":"291"},{"ruleId":"258","severity":1,"message":"292","line":14,"column":8,"nodeType":"260","messageId":"261","endLine":14,"endColumn":16},{"ruleId":"258","severity":1,"message":"279","line":15,"column":8,"nodeType":"260","messageId":"261","endLine":15,"endColumn":15},{"ruleId":"258","severity":1,"message":"293","line":16,"column":8,"nodeType":"260","messageId":"261","endLine":16,"endColumn":20},{"ruleId":"258","severity":1,"message":"265","line":24,"column":8,"nodeType":"260","messageId":"261","endLine":24,"endColumn":25},{"ruleId":"258","severity":1,"message":"294","line":26,"column":8,"nodeType":"260","messageId":"261","endLine":26,"endColumn":17},{"ruleId":"258","severity":1,"message":"295","line":28,"column":8,"nodeType":"260","messageId":"261","endLine":28,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":103,"column":27,"nodeType":"298","messageId":"299","endLine":103,"endColumn":29},{"ruleId":"296","severity":1,"message":"297","line":103,"column":52,"nodeType":"298","messageId":"299","endLine":103,"endColumn":54},{"ruleId":"258","severity":1,"message":"300","line":226,"column":11,"nodeType":"260","messageId":"261","endLine":226,"endColumn":15},{"ruleId":"258","severity":1,"message":"300","line":256,"column":11,"nodeType":"260","messageId":"261","endLine":256,"endColumn":15},{"ruleId":"296","severity":1,"message":"297","line":298,"column":25,"nodeType":"298","messageId":"299","endLine":298,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":298,"column":50,"nodeType":"298","messageId":"299","endLine":298,"endColumn":52},{"ruleId":"296","severity":1,"message":"297","line":308,"column":27,"nodeType":"298","messageId":"299","endLine":308,"endColumn":29},{"ruleId":"296","severity":1,"message":"297","line":308,"column":54,"nodeType":"298","messageId":"299","endLine":308,"endColumn":56},{"ruleId":"296","severity":1,"message":"297","line":318,"column":25,"nodeType":"298","messageId":"299","endLine":318,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":318,"column":50,"nodeType":"298","messageId":"299","endLine":318,"endColumn":52},{"ruleId":"258","severity":1,"message":"301","line":10,"column":8,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"302","line":11,"column":8,"nodeType":"260","messageId":"261","endLine":11,"endColumn":17},{"ruleId":"258","severity":1,"message":"303","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":12},{"ruleId":"258","severity":1,"message":"292","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":16},{"ruleId":"258","severity":1,"message":"279","line":14,"column":8,"nodeType":"260","messageId":"261","endLine":14,"endColumn":15},{"ruleId":"258","severity":1,"message":"293","line":15,"column":8,"nodeType":"260","messageId":"261","endLine":15,"endColumn":20},{"ruleId":"258","severity":1,"message":"304","line":16,"column":8,"nodeType":"260","messageId":"261","endLine":16,"endColumn":18},{"ruleId":"258","severity":1,"message":"305","line":17,"column":8,"nodeType":"260","messageId":"261","endLine":17,"endColumn":22},{"ruleId":"258","severity":1,"message":"306","line":22,"column":8,"nodeType":"260","messageId":"261","endLine":22,"endColumn":18},{"ruleId":"258","severity":1,"message":"307","line":23,"column":8,"nodeType":"260","messageId":"261","endLine":23,"endColumn":23},{"ruleId":"258","severity":1,"message":"308","line":24,"column":8,"nodeType":"260","messageId":"261","endLine":24,"endColumn":25},{"ruleId":"258","severity":1,"message":"266","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":10},{"ruleId":"258","severity":1,"message":"274","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":24},{"ruleId":"258","severity":1,"message":"262","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":16},{"ruleId":"258","severity":1,"message":"309","line":10,"column":8,"nodeType":"260","messageId":"261","endLine":10,"endColumn":12},{"ruleId":"258","severity":1,"message":"275","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":24},{"ruleId":"258","severity":1,"message":"267","line":15,"column":10,"nodeType":"260","messageId":"261","endLine":15,"endColumn":20},{"ruleId":"258","severity":1,"message":"264","line":15,"column":22,"nodeType":"260","messageId":"261","endLine":15,"endColumn":32},{"ruleId":"258","severity":1,"message":"280","line":22,"column":5,"nodeType":"260","messageId":"261","endLine":22,"endColumn":7},{"ruleId":"254","replacedBy":"310"},{"ruleId":"256","replacedBy":"311"},{"ruleId":"258","severity":1,"message":"266","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":10},{"ruleId":"258","severity":1,"message":"274","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":24},{"ruleId":"258","severity":1,"message":"262","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":16},{"ruleId":"258","severity":1,"message":"275","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":24},{"ruleId":"258","severity":1,"message":"267","line":15,"column":10,"nodeType":"260","messageId":"261","endLine":15,"endColumn":20},{"ruleId":"258","severity":1,"message":"264","line":15,"column":22,"nodeType":"260","messageId":"261","endLine":15,"endColumn":32},{"ruleId":"258","severity":1,"message":"280","line":23,"column":5,"nodeType":"260","messageId":"261","endLine":23,"endColumn":7},{"ruleId":"258","severity":1,"message":"312","line":11,"column":27,"nodeType":"260","messageId":"261","endLine":11,"endColumn":33},{"ruleId":"258","severity":1,"message":"313","line":11,"column":35,"nodeType":"260","messageId":"261","endLine":11,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":55,"column":60,"nodeType":"316","messageId":"317","endLine":55,"endColumn":61,"fix":"318"},{"ruleId":"296","severity":1,"message":"297","line":90,"column":55,"nodeType":"298","messageId":"299","endLine":90,"endColumn":57},{"ruleId":"258","severity":1,"message":"302","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":17},{"ruleId":"258","severity":1,"message":"279","line":15,"column":8,"nodeType":"260","messageId":"261","endLine":15,"endColumn":15},{"ruleId":"258","severity":1,"message":"293","line":16,"column":8,"nodeType":"260","messageId":"261","endLine":16,"endColumn":20},{"ruleId":"258","severity":1,"message":"304","line":17,"column":8,"nodeType":"260","messageId":"261","endLine":17,"endColumn":18},{"ruleId":"258","severity":1,"message":"305","line":18,"column":8,"nodeType":"260","messageId":"261","endLine":18,"endColumn":22},{"ruleId":"258","severity":1,"message":"295","line":20,"column":8,"nodeType":"260","messageId":"261","endLine":20,"endColumn":17},{"ruleId":"258","severity":1,"message":"312","line":27,"column":27,"nodeType":"260","messageId":"261","endLine":27,"endColumn":33},{"ruleId":"258","severity":1,"message":"313","line":27,"column":35,"nodeType":"260","messageId":"261","endLine":27,"endColumn":40},{"ruleId":"258","severity":1,"message":"271","line":27,"column":42,"nodeType":"260","messageId":"261","endLine":27,"endColumn":46},{"ruleId":"258","severity":1,"message":"306","line":29,"column":8,"nodeType":"260","messageId":"261","endLine":29,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":73,"column":35,"nodeType":"298","messageId":"299","endLine":73,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":73,"column":66,"nodeType":"298","messageId":"299","endLine":73,"endColumn":68},{"ruleId":"296","severity":1,"message":"297","line":170,"column":23,"nodeType":"298","messageId":"299","endLine":170,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":170,"column":46,"nodeType":"298","messageId":"299","endLine":170,"endColumn":48},{"ruleId":"296","severity":1,"message":"297","line":180,"column":31,"nodeType":"298","messageId":"299","endLine":180,"endColumn":33},{"ruleId":"296","severity":1,"message":"297","line":180,"column":62,"nodeType":"298","messageId":"299","endLine":180,"endColumn":64},{"ruleId":"296","severity":1,"message":"297","line":190,"column":33,"nodeType":"298","messageId":"299","endLine":190,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":190,"column":66,"nodeType":"298","messageId":"299","endLine":190,"endColumn":68},{"ruleId":"296","severity":1,"message":"297","line":212,"column":23,"nodeType":"298","messageId":"299","endLine":212,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":212,"column":46,"nodeType":"298","messageId":"299","endLine":212,"endColumn":48},{"ruleId":"258","severity":1,"message":"301","line":10,"column":8,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"319","line":11,"column":8,"nodeType":"260","messageId":"261","endLine":11,"endColumn":12},{"ruleId":"258","severity":1,"message":"302","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":17},{"ruleId":"258","severity":1,"message":"303","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":12},{"ruleId":"258","severity":1,"message":"292","line":14,"column":8,"nodeType":"260","messageId":"261","endLine":14,"endColumn":16},{"ruleId":"258","severity":1,"message":"293","line":16,"column":8,"nodeType":"260","messageId":"261","endLine":16,"endColumn":20},{"ruleId":"258","severity":1,"message":"304","line":17,"column":8,"nodeType":"260","messageId":"261","endLine":17,"endColumn":18},{"ruleId":"258","severity":1,"message":"305","line":18,"column":8,"nodeType":"260","messageId":"261","endLine":18,"endColumn":22},{"ruleId":"258","severity":1,"message":"295","line":20,"column":8,"nodeType":"260","messageId":"261","endLine":20,"endColumn":17},{"ruleId":"258","severity":1,"message":"312","line":28,"column":27,"nodeType":"260","messageId":"261","endLine":28,"endColumn":33},{"ruleId":"258","severity":1,"message":"313","line":28,"column":35,"nodeType":"260","messageId":"261","endLine":28,"endColumn":40},{"ruleId":"258","severity":1,"message":"271","line":28,"column":42,"nodeType":"260","messageId":"261","endLine":28,"endColumn":46},{"ruleId":"258","severity":1,"message":"306","line":32,"column":8,"nodeType":"260","messageId":"261","endLine":32,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":72,"column":26,"nodeType":"298","messageId":"299","endLine":72,"endColumn":28},{"ruleId":"296","severity":1,"message":"297","line":72,"column":48,"nodeType":"298","messageId":"299","endLine":72,"endColumn":50},{"ruleId":"296","severity":1,"message":"297","line":105,"column":23,"nodeType":"298","messageId":"299","endLine":105,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":105,"column":46,"nodeType":"298","messageId":"299","endLine":105,"endColumn":48},{"ruleId":"296","severity":1,"message":"297","line":115,"column":28,"nodeType":"298","messageId":"299","endLine":115,"endColumn":30},{"ruleId":"296","severity":1,"message":"297","line":115,"column":56,"nodeType":"298","messageId":"299","endLine":115,"endColumn":58},{"ruleId":"296","severity":1,"message":"297","line":125,"column":22,"nodeType":"298","messageId":"299","endLine":125,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":125,"column":44,"nodeType":"298","messageId":"299","endLine":125,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":135,"column":33,"nodeType":"298","messageId":"299","endLine":135,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":135,"column":66,"nodeType":"298","messageId":"299","endLine":135,"endColumn":68},{"ruleId":"296","severity":1,"message":"297","line":157,"column":23,"nodeType":"298","messageId":"299","endLine":157,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":157,"column":46,"nodeType":"298","messageId":"299","endLine":157,"endColumn":48},{"ruleId":"258","severity":1,"message":"320","line":2,"column":9,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"321","severity":1,"message":"322","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":9,"endColumn":6},{"ruleId":"258","severity":1,"message":"312","line":2,"column":27,"nodeType":"260","messageId":"261","endLine":2,"endColumn":33},{"ruleId":"258","severity":1,"message":"313","line":2,"column":35,"nodeType":"260","messageId":"261","endLine":2,"endColumn":40},{"ruleId":"321","severity":1,"message":"322","line":9,"column":5,"nodeType":"323","messageId":"324","endLine":11,"endColumn":6},{"ruleId":"258","severity":1,"message":"312","line":2,"column":27,"nodeType":"260","messageId":"261","endLine":2,"endColumn":33},{"ruleId":"258","severity":1,"message":"313","line":2,"column":35,"nodeType":"260","messageId":"261","endLine":2,"endColumn":40},{"ruleId":"321","severity":1,"message":"322","line":9,"column":5,"nodeType":"323","messageId":"324","endLine":11,"endColumn":6},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'DialogContentText' is defined but never used.","'im' is defined but never used.","'withStyles' is defined but never used.",["325"],["326"],"'logo' is defined but never used.","'Link' is defined but never used.",["325"],["326"],"'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'InputTag' is defined but never used.","'arr' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'Divider' is defined but never used.","'hi' is assigned a value but never used.","'Copyright' is defined but never used.","'y' is assigned a value but never used.","'x' is assigned a value but never used.","'p' is assigned a value but never used.","no-redeclare","'skiInd' is already defined.","redeclared",["325"],["326"],["325"],["326"],"'ListItem' is defined but never used.","'Autocomplete' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'filt' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SearchIcon' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'Grid' is defined but never used.",["325"],["326"],"'Router' is defined but never used.","'Route' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"327","text":"328"},"'Chip' is defined but never used.","'Paper' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",[1586,1587],""]