[{"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js":"1","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js":"2","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js":"3","/home/ahana/DASS/job-apllication-portal/frontend/src/App.js":"4","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Path.js":"5","/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js":"6"},{"size":500,"mtime":1610497652423,"results":"7","hashOfConfig":"8"},{"size":6616,"mtime":1610497652423,"results":"9","hashOfConfig":"8"},{"size":5831,"mtime":1610560763889,"results":"10","hashOfConfig":"8"},{"size":618,"mtime":1610561329008,"results":"11","hashOfConfig":"8"},{"size":7512,"mtime":1610583732072,"results":"12","hashOfConfig":"8"},{"size":10198,"mtime":1610590114930,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11512e0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js",[],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js",["28","29","30","31"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n///styles\nconst classes = {\n  paper: {\n    marginTop: 10,\n      justifyContent: 'center',\n      height: '70vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: 10,\n    backgroundColor: 'red',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: 3,\n  },\n  submit: {\n    margin: 3,\n    marginTop: 15,\n    marginBottom: 15,\n  },\n};\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            pwd:'',\n            email: '',\n            role:\"\",\n            fname:\"\",\n            lname:\"\"\n        }\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeFname = this.onChangeFname.bind(this);\n        this.onChangeLname = this.onChangeLname.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    onChangeUsername(event) {\n        this.setState({ name: event.target.value });\n    }\n    onChangeFname(event) {\n        this.setState({ fname: event.target.value });\n    }\n    onChangeLname(event) {\n        this.setState({ lname: event.target.value });\n    }\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            fname: this.state.fname,\n            lname: this.state.lname,\n            email: this.state.email,\n            password: this.state.pwd,\n            date_of_reg: Date.now(),\n            role: this.state.role\n        }\n        console.log(newUser);\n\n        axios.post('http://localhost:5000/user/register', newUser)\n             .then(res => {\n                alert(\"Created account\\t\" + res.data.name+\"\\nPlease login to continue\");\n                console.log(res);\n                this.setState({fname:\"\",lname:\"\", email:\"\", pwd:\"\", role:\"\"})\n\n            })\n             .catch(err => {\n                alert(err.error);\n                console.log(err.error);\n             })\n             ;\n   }\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={classes.paper}>\n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={this.state.fname}\n                onChange={this.onChangeFname}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={this.state.lname}\n                onChange={this.onChangeLname}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={this.state.pwd}\n                onChange={this.onChangePwd}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  value={this.state.role}\n                  onChange={(e)=>this.setState({role: e.target.value})}\n                  label=\"Role\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={\"Applicant\"}>Applicant</MenuItem>\n                  <MenuItem value={\"Recruiter\"}>Recruiter</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n           \n           </Container>\n        )\n    }\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js",["32","33","34","35","36"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\n\n/**/\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '70vh',\n      alignItems: 'center',\n      alignContent: 'center'\n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            email:'',\n            pwd:''\n        }\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        axios.post('http://localhost:5000/user/login', {email:this.state.email, password:this.state.pwd})\n             .then(res => {alert(\"Welcome\\t\" + res.data.name);\n                console.log(res);\n                this.props.history.push('/path');\n              })\n             .catch(err => {\n                console.log(err)\n             })\n             ;\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div style={classes.paper}>\n      \n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" >\n          Sign in\n        </Typography>\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={this.state.email}\n            onChange={this.onChangeEmail}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={this.state.pwd}\n            onChange={this.onChangePwd}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n\n          <Grid container style={{paddingTop:10}}>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n\n\n    // render(){\n    //     return(\n            \n    //             <Container>\n    //                 <img\n    //                     src={im}\n    //                     alt=\"Job application portal\"\n    //                 />\n    //                 <div>\n    //                     <Button href=\"/register\">Register</Button>\n    //                 </div>\n    //             </Container>\n            \n    //     )\n    // }\n\n    /*render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangeUsername}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.pwd}\n                               onChange={this.onChangePwd}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\n                        <Button  href=\"/register\">Register</Button>\n                    </div>\n                </form>\n           </div>\n        )\n    }*/\n","/home/ahana/DASS/job-apllication-portal/frontend/src/App.js",["37","38","39","40"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Path.js",["41","42","43"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js",["44","45","46","47","48","49"],{"ruleId":"50","severity":1,"message":"51","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":24},{"ruleId":"50","severity":1,"message":"54","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":15,"column":8,"nodeType":"52","messageId":"53","endLine":15,"endColumn":11},{"ruleId":"50","severity":1,"message":"56","line":18,"column":10,"nodeType":"52","messageId":"53","endLine":18,"endColumn":20},{"ruleId":"50","severity":1,"message":"57","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":10},{"ruleId":"50","severity":1,"message":"51","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":24},{"ruleId":"50","severity":1,"message":"54","line":8,"column":8,"nodeType":"52","messageId":"53","endLine":8,"endColumn":16},{"ruleId":"50","severity":1,"message":"58","line":14,"column":10,"nodeType":"52","messageId":"53","endLine":14,"endColumn":20},{"ruleId":"50","severity":1,"message":"56","line":14,"column":22,"nodeType":"52","messageId":"53","endLine":14,"endColumn":32},{"ruleId":"50","severity":1,"message":"59","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"60","line":4,"column":42,"nodeType":"52","messageId":"53","endLine":4,"endColumn":46},{"ruleId":"50","severity":1,"message":"61","line":10,"column":7,"nodeType":"52","messageId":"53","endLine":10,"endColumn":14},{"ruleId":"62","severity":2,"message":"63","line":17,"column":40,"nodeType":"52","messageId":"64","endLine":17,"endColumn":44},{"ruleId":"50","severity":1,"message":"65","line":14,"column":8,"nodeType":"52","messageId":"53","endLine":14,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":71,"column":25,"nodeType":"68","messageId":"69","endLine":71,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":71,"column":50,"nodeType":"68","messageId":"69","endLine":71,"endColumn":52},{"ruleId":"50","severity":1,"message":"70","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":24},{"ruleId":"50","severity":1,"message":"54","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":15,"column":8,"nodeType":"52","messageId":"53","endLine":15,"endColumn":11},{"ruleId":"50","severity":1,"message":"71","line":16,"column":8,"nodeType":"52","messageId":"53","endLine":16,"endColumn":24},{"ruleId":"50","severity":1,"message":"56","line":18,"column":10,"nodeType":"52","messageId":"53","endLine":18,"endColumn":20},"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'im' is defined but never used.","'withStyles' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","no-undef","'path' is not defined.","undef","'Divider' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used."]