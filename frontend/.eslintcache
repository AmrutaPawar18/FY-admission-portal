[{"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js":"1","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js":"2","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js":"3","/home/ahana/DASS/job-apllication-portal/frontend/src/App.js":"4","/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js":"5","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js":"6","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js":"7","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js":"8","/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js":"9","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js":"10","/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js":"11"},{"size":500,"mtime":1610497652423,"results":"12","hashOfConfig":"13"},{"size":6910,"mtime":1610832401169,"results":"14","hashOfConfig":"13"},{"size":7230,"mtime":1610796839156,"results":"15","hashOfConfig":"13"},{"size":959,"mtime":1610832748716,"results":"16","hashOfConfig":"13"},{"size":13294,"mtime":1611072749047,"results":"17","hashOfConfig":"13"},{"size":1251,"mtime":1610628421771,"results":"18","hashOfConfig":"13"},{"size":20834,"mtime":1610908944235,"results":"19","hashOfConfig":"13"},{"size":17079,"mtime":1610903775377,"results":"20","hashOfConfig":"13"},{"size":362,"mtime":1610497652423,"results":"21","hashOfConfig":"13"},{"size":17044,"mtime":1611154181629,"results":"22","hashOfConfig":"13"},{"size":4568,"mtime":1611152545646,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11512e0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js",[],["53","54"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js",["55","56","57","58"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n///styles\nconst classes = {\n  paper: {\n    marginTop: 10,\n      justifyContent: 'center',\n      height: '70vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: 10,\n    backgroundColor: 'red',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: 3,\n  },\n  submit: {\n    margin: 3,\n    marginTop: 15,\n    marginBottom: 15,\n  },\n};\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            pwd:'',\n            email: '',\n            role:\"\",\n            fname:\"\",\n            lname:\"\"\n        }\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeFname = this.onChangeFname.bind(this);\n        this.onChangeLname = this.onChangeLname.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n    }\n\n    componentDidMount() {\n      var tok = localStorage.getItem('token');\n\n      if(tok){\n        var role = localStorage.getItem('role');\n        if(role==='Applicant')\n          this.props.history.push('/acompleteProfile');\n        else if(role === 'Recruiter')\n          this.props.history.push('/createJob');\n\n      }\n    }\n\n    onChangeUsername(event) {\n        this.setState({ name: event.target.value });\n    }\n    onChangeFname(event) {\n        this.setState({ fname: event.target.value });\n    }\n    onChangeLname(event) {\n        this.setState({ lname: event.target.value });\n    }\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            fname: this.state.fname,\n            lname: this.state.lname,\n            email: this.state.email,\n            password: this.state.pwd,\n            date_of_reg: Date.now(),\n            role: this.state.role\n        }\n        console.log(newUser);\n\n        axios.post('http://localhost:5000/user/register', newUser)\n             .then(res => {\n                alert(\"Created account\\t\" + res.data.name+\"\\nPlease login to continue\");\n                console.log(res);\n                this.setState({fname:\"\",lname:\"\", email:\"\", pwd:\"\", role:\"\"})\n\n            })\n             .catch(err => {\n                alert(err.error);\n                console.log(err.error);\n             })\n             ;\n   }\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={classes.paper}>\n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={this.state.fname}\n                onChange={this.onChangeFname}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={this.state.lname}\n                onChange={this.onChangeLname}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={this.state.pwd}\n                onChange={this.onChangePwd}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  value={this.state.role}\n                  onChange={(e)=>this.setState({role: e.target.value})}\n                  label=\"Role\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={\"Applicant\"}>Applicant</MenuItem>\n                  <MenuItem value={\"Recruiter\"}>Recruiter</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n           \n           </Container>\n        )\n    }\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js",["59","60","61","62","63","64"],"/home/ahana/DASS/job-apllication-portal/frontend/src/App.js",["65","66"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Home from './components/Home.js'\nimport acompleteProfile from './components/RegPart2Appl.js'\nimport Register from './components/Register.js'\nimport path from './components/Path.js'\nimport createJob from './components/createJob.js'\nimport aProfile from './components/ApplProfile.js'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        \n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/register\" component={Register}/>\n        <Route path=\"/acompleteProfile\" component={acompleteProfile}/>\n        <Route path=\"/path\" component={path}/>\n        <Route path=\"/createJob\" component={createJob}/>\n        <Route path=\"/aProfile\" component={aProfile}/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["67","68"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js",["69","70","71","72","73","74","75","76","77","78"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport {InputTag} from './Tag.js';\n\n\n///styles\nconst classes = {\n  paper: {\n    marginTop: 10,\n      justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: 10,\n    backgroundColor: 'red',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: 3,\n  },\n  submit: {\n    margin: 3,\n    marginTop: 15,\n    marginBottom: 15,\n  },\n};\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            title:'',\n            maxAppl:50,\n            maxPos:5,\n            date:\"\",\n            time:\"00:00\",\n            duration:0,\n            type:'',\n            salary:0,\n            skills: '',\n            email: '',\n            chips: [],\n            authorized:true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onIntInputChange = this.onIntInputChange.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n    }\n\n    componentDidMount() {\n      var x = localStorage.getItem('role');\n      console.log(x);\n      if(x){\n        if(x==='Recruiter'){}\n        else{\n          this.setState({authorized:false})\n        }\n      }\n\n    }\n\n    handleDelete(chip, e){\n      console.log(chip.target);\n      var chips = this.state.chips.filter((data)=> data.key!==chip.key);\n      console.log(chips);\n      this.setState(chips)\n    }\n\n    addSkill(e){\n      if (!(e.key === 'Enter')) return;\n      var arr = this.state.chips;\n      var val = e.target.value;\n      var i = arr.findIndex((ele) => ele.key === val.toLowerCase());\n      if(i !== -1){ \n        this.setState({skills:''});\n        return;\n      }\n      arr.push({key: val.toLowerCase(), label:e.target.value});\n    //  console.log(arr);\n      this.setState({chips: arr, skills:''});\n\n    }\n\n    \n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onIntInputChange(e) {\n        this.setState({ [e.target.name] : parseInt(e.target.value)||0})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        var arr = this.state.chips.map((it)=> (it.label))\n      //  console.log(this.state.chips);\n        const newJob = {\n            \n            title: this.state.title,\n            maxPos: this.state.maxPos,\n            maxAppl: this.state.maxAppl,\n            deadline: this.state.date+\" \"+this.state.time,\n            duration: this.state.duration,\n            type: this.state.type,\n            salary: this.state.salary,\n            skills: this.state.chips,\n\n        }\n        // console.log(newJob);\n        // console.log(!this.state.title );\n        // console.log(!(this.state.date===''));\n        // console.log(!(this.state.time===\"\"))\n        // console.log(!(this.state.type));\n        // console.log(!(this.state.chips===[]));\n        if(!this.state.title || (this.state.date==='') || (this.state.time===\"\") \n          || !this.state.type || (this.state.chips===[])){\n          alert(\"Please fill all neccessary fields\");\n          return;\n        }\n        if(this.state.maxPos<=0){\n          alert(\"Maximum Positions should be greater than zero\");\n          return;\n        }\n        if(this.state.maxAppl<=0){\n          alert(\"Maximum Applications should be greater than zero\");\n          return;\n        }\n        \n\n        var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        axios.post('http://localhost:5000/recr/newJob', newJob, config)\n             .then(res => {\n               alert(\"Created job\\t\" + res.data.title);\n                this.setState({\n                  title:'',\n                  maxAppl:0,\n                  maxPos:0,\n                  date:'',\n                  time:'',\n                  duration:0,\n                  type:'',\n                  salary:0,\n                  skills: '',\n                  chips:[],\n                  email: '',\n                });\n                this.props.history.push('/dashboard');\n\n            })\n             .catch(err => {\n              if(err.response){\n                if(err.response.data.error)\n                  alert(err.response.data.error)\n                else\n                  alert(err.message);\n              }\n              else\n                alert(err.message);\n              //  console.log(err.response.data.error);\n             })\n             ;\n   }\n\n    render() {\n    //  console.log(this.state.chips);\n      const handleDelete = (chipToDelete) => () => {\n          var x = this.state.chips.filter((chip) => chip.key !== chipToDelete.key)\n          this.setState({chips:x});\n      };\n\n      if(!this.state.authorized)\n        return(\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div style={classes.paper}>\n              \n              <Typography component=\"h1\" variant=\"h5\">\n                {\"You don't have permissions to view this page!\"}\n              </Typography>\n            </div>\n          </Container>\n          )\n\n        return (\n            <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <div style={classes.paper}>\n        \n        <Typography component=\"h1\" variant=\"h5\">\n          Create a Job\n        </Typography>\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}\n          onKeyPress={event => {\n          if (event.which === 13 /* Enter */) {\n            event.preventDefault();\n          }\n        }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"title\"\n                name=\"title\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"title\"\n                label=\"Title\"\n                autoFocus\n                value={this.state.title}\n                onChange={(e)=>this.setState({title:e.target.value})}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"maxAppl\"\n                label=\"Maximum Applications\"\n                name=\"maxAppl\"\n                type=\"number\"\n                autoComplete=\"maxAppl\"\n                value={this.state.maxAppl}\n                helperText=\"Enter positive numbers only\"\n                error={(parseInt(this.state.maxAppl)>0)?false:true}\n                onChange={this.onIntInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"maxPos\"\n                label=\"Maximum Positions\"\n                name=\"maxPos\"\n                type=\"number\"\n                autoComplete=\"maxPos\"\n                value={this.state.maxPos}\n                helperText=\"Enter positive numbers only\"\n                error={(parseInt(this.state.maxPos)>0)?false:true}\n                onChange={this.onIntInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                name=\"date\"\n                label=\"Application deadline date\"\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={this.onInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"time\"\n                name=\"time\"\n                label=\"Application deadline time\"\n                type=\"time\"\n                defaultValue = \"00:00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 300, // 5 min\n                }}\n                onChange={this.onInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <Typography>Skills*</Typography>\n                <FormControl variant=\"outlined\" required fullWidth>\n                  <Grid container spacing={1}>\n                  \n                  \n                    {this.state.chips.map((data)=>(\n                      <Grid item key={data.key}>\n                        <Chip\n                          key={data.key}\n                          label={data.label}\n                          onDelete={()=>this.handleDelete(data)}\n                        />\n                      </Grid>))\n                    }\n\n\n\n                    <Grid item>\n                      <TextField\n                        autoComplete=\"skills\"\n                        name=\"skills\"\n                        fullWidth\n                        id=\"skills\"\n                        label=\"Add a skill\"\n                        value={this.state.skills}\n                        onChange={this.onInputChange}\n                        onKeyDown = {this.addSkill}\n                      />\n                    \n                    </Grid>\n                  </Grid>\n                </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Job Type</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"type\"\n                  value={this.state.type}\n                  onChange={this.onInputChange}\n                  label=\"type\"\n\n                >\n                  <MenuItem value={\"\"}>\n                    <em>Select</em>\n                  </MenuItem>\n                  <MenuItem value={\"Full-time\"}>\n                    Full-time\n                  </MenuItem>\n                  <MenuItem value={\"Part-time\"}>Part-time</MenuItem>\n                  <MenuItem value={\"Work from Home\"}>Work from Home</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Duration</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  name=\"duration\"\n                  value={this.state.duration}\n                  onChange={this.onInputChange}\n                  label=\"duration\"\n                >\n                  <MenuItem value={0}>\n                    0(indefinite)\n                  </MenuItem>\n                  <MenuItem value={1}>1</MenuItem>\n                  <MenuItem value={2}>2</MenuItem>\n                  <MenuItem value={3}>3</MenuItem>\n                  <MenuItem value={4}>4</MenuItem>\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={6}>6</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"salary\"\n                name=\"salary\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"salary\"\n                label=\"Salary per month\"\n                type=\"number\"\n                value={this.state.salary}\n                helperText=\"Enter positive numbers only\"\n                error={(parseInt(this.state.salary)>=0)?false:true}\n                onChange={this.onIntInputChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n            Create Job\n          </Button>\n        </form>\n      </div>\n           \n           </Container>\n        )\n    }\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js",[],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js",["95","96","97","98","99","100","101","102","103","104","105","106"],"import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\n\nimport axios from 'axios';\n\n/**/\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10,\n      marginTop: 10,\n    },\n  };\n  \nconst conf = {\n  ignoreCase:true,\n  trim: true\n}\nconst filter = createFilterOptions(conf);\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            education:[],\n            skills:[],\n            predSkills:[{key:\"html\",name:\"HTML\"},{key:\"css\",name:\"CSS\"},{key:\"js\",name:\"JS\"}],\n            rating:0,\n            open:false,\n            insti_name:'',\n            start_year:(new Date()).getFullYear(),\n            end_year:'',\n\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onEduChange = this.onEduChange.bind(this);\n        this.handleClose= this.handleClose.bind(this);\n        this.handleDiaSubmit = this.handleDiaSubmit.bind(this);\n        this.onIntInputChange = this.onIntInputChange.bind(this);\n    }\n\n    componentDidMount() {\n     \n    }\n\n    onIntInputChange(e) {\n      var yr = parseInt(e.target.value)\n      this.setState({ [e.target.name] : yr})\n    }\n\n    handleClose(e){\n      e.preventDefault();\n      this.setState({\n        start_year:(new Date()).getFullYear(),\n        end_year:'',\n        insti_name:'',\n        open:false\n      });\n    }\n\n    handleDiaSubmit(e){\n      e.preventDefault();\n      var x = {\n        insti_name:this.state.insti_name,\n        start_year:this.state.start_year,\n        end_year:this.state.end_year\n      }\n      console.log(x);\n      if(x.insti_name!=='' && x.start_year!==''){\n        if(parseInt(x.start_year)>parseInt(x.end_year)){\n          alert(\"End year cannot be less than Start year\");\n          return;\n        }\n        if(x.start_year>2100 || x.start_year<1900){\n          alert(\"Invalid start year\")\n          return;\n        }\n        if(x.end_year){\n          console.log(x.end_year+\" hi\")\n          if(x.end_year>2100|| x.end_year<1900){\n            alert(\"Invalid end year\")\n            return;\n          }\n        }\n        var y = this.state.education;\n        y.push(x);\n        this.setState({\n          education: y,\n          start_year:(new Date()).getFullYear(),\n          end_year:'',\n          insti_name:'',\n          open:false\n        });\n      }\n      else{\n        alert(\"Institute name and start year are compulsory\");\n        \n      }\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onEduChange(event) {\n        var x = {...this.state.education};\n        var y = x.education;\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n          var b=1;\n\n          var prof = {\n            education: this.state.education,\n            skills: this.state.skills,\n            rating:0\n          }\n\n          this.state.education.forEach(function(x,i){\n            if(x.insti_name!=='' && x.start_year!==''){\n              if(parseInt(x.start_year)>parseInt(x.end_year)){\n                alert(\"End year cannot be less than Start year for education entry\" + (i+1));\n                b=0;\n                return;\n              }\n              if(x.start_year>2100 || x.start_year<1900){\n                alert(`Invalid start year for education no. ${i+1}`)\n                b=0;\n                return;\n              }\n              if(!x.end_year){ \n                prof.education[i].end_year=null;\n              }\n              else{\n                if(x.end_year>2100|| x.end_year<1900){\n                  alert(`Invalid end year for education entry ${i+1}`)\n                  b=0;\n                  return;\n                }\n              }\n              // console.log(\"hi\");\n              \n            }\n            else{\n              alert(\"Institute name and start year are compulsory. Check entry\"+(i+1));\n              b=0;\n              return;\n            }\n            // console.log(\"ji\")\n          });\n          if(!b) return\n          // console.log(\"ki\")\n          var token = localStorage.getItem('token');\n\n          // Headers\n          var config = {\n            headers: {\n              'Content-type': 'application/json'\n            }\n          }\n          // If token, add to headers\n          if (token) {\n            config.headers['auth-tok'] = token;\n          }\n\n          console.log(prof);\n\n          axios.post('http://localhost:5000/appl/newProfile', prof, config)\n               .then(res => {\n                  alert(\"Added!\");\n                  this.setState({edit:false});\n                  this.props.history.push(\"/path\")\n                })\n               .catch(err => {\n                  if(err.response){\n                    if(err.response.data.error)\n                      console.log(err.response.data.error)\n                    else\n                      console.log(err.message);\n                  }\n                  \n                  else\n                    console.log(err.message);             \n               });\n          \n    }\n\nrender() {\n  console.log(this.state.predSkills);\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\n          Profile\n        </Typography>\n\n\n              <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Education</DialogTitle>\n                <DialogContent>\n                  <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                  <TextField\n                    autoFocus\n                    id=\"insti_name\"\n                    label=\"Institute Name\"\n                    fullWidth\n                    name= \"insti_name\"\n                    required\n                    value={this.state.insti_name}\n                    onChange={ this.onInputChange}\n                  />\n                  </Grid>\n                  <Grid item xs={6}>\n                  <TextField\n                    id=\"start_year\"\n                    label=\"Start Year\"\n                    name=\"start_year\"\n                    required\n                    fullWidth\n                    type=\"number\"\n                    value={this.state.start_year}\n                    defaultValue={(new Date()).getFullYear()}\n                    error={(parseInt(this.state.start_year)>=1900)?false:true}\n                    onChange={this.onIntInputChange}\n                  />\n                  </Grid>\n                  <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"end_year\"\n                    label=\"End Year\"\n                    name=\"end_year\"\n                    type=\"number\"\n                    value={this.state.end_year}\n                    onChange={this.onIntInputChange}\n                  />\n                  </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button onClick={this.handleDiaSubmit} color=\"primary\">\n                    Add\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n        You must fill this form to continue\n          <Grid container spacing={2}>\n            \n            <Grid item xs={12}>\n            <Typography>Education:</Typography>\n            \n              <FormControl variant=\"outlined\" required fullWidth>\n              <ol>\n                {this.state.education.map((edu,ind)=>(\n                  <li>\n                  <Grid container spacing={1}>\n                  <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    variant=\"filled\"\n                    label=\"Institute Name\"\n                    id=\"insti_name\"\n                    value={edu.insti_name}\n                    onChange={(e)=>{\n                      var temp = this.state.education; \n                      temp[ind].insti_name = e.target.value; \n                      this.setState({education:temp})\n                    }}\n                  />\n                  </Grid>\n                  <Grid item xs={6} md={3}>\n                <TextField\n                  variant=\"filled\"\n                  required\n                    fullWidth\n                  name=\"start_year\"\n                  label=\"Start Year\"\n                  id=\"start_year\"\n                  value={edu.start_year}\n                  type=\"number\"\n                  \n                  onChange={(e)=>{\n                      var temp = this.state.education; \n                      temp[ind].start_year = parseInt(e.target.value)||(new Date()).getFullYear(); \n                      this.setState({education:temp})\n                    }}\n                />\n                </Grid>\n                  <Grid item xs={6} md={3}>\n                <TextField\n                  variant=\"filled\"\n                  name=\"end_year\"\n                    fullWidth\n                  label=\"End Year\"\n                  id=\"end_year\"\n                  value={edu.end_year}\n                  type=\"number\"\n                  onChange={(e)=>{\n                      var temp = this.state.education; \n                      temp[ind].end_year = parseInt(e.target.value)||\"\"; \n                      this.setState({education:temp})\n                    }}\n                />\n                </Grid>\n                </Grid>\n                </li>\n              ))}\n              </ol>\n              <Grid item xs={12}>\n                <Button onClick={(e)=> {e.preventDefault(); this.setState({open:true})}}>+ Add education</Button>\n              </Grid>\n\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={this.state.predSkills}\n                renderOption={(option) => option.name}\n                getOptionLabel={(option) => {\n                  // Value selected with enter, right from the input\n                  if (typeof option === 'string') {\n                    return option;\n                  }\n                  // Add \"xxx\" option created dynamically\n                  if (option.inputValue) {\n                    return option.inputValue;\n                  }\n                  // Regular option\n                  return option.name;\n                }}\n                onChange={(event, newValue) => {\n                  console.log(\"onchange\")\n                  console.log(newValue)\n                  var pred = this.state.predSkills;\n                  var x = this.state.skills;\n                  var p=[];var s=[];\n\n                  newValue.forEach((val,i)=>{\n                    console.log(val)\n                    if(typeof val==='string'){  //option wasnt selected, directly pressed enter\n                      \n                      var predInd = pred.findIndex((it)=>it.key===val.toLowerCase());\n                      if(predInd!==-1){  //present in predSkills\n                        var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.toLowerCase(),name:val});\n\n                        }\n                      }\n                      else{\n                        s.push({key:val.toLowerCase(),name:val});\n                        pred.push({key:val.toLowerCase(),name:val});\n                      }\n                      \n                    }\n                    else if(val && val.name){\n                      if(val.key!==val.name.toLowerCase()){ //add \"\" got selected\n                        pred.push({key:val.key.toLowerCase(), name:val.key});\n                        s.push({key:val.key.toLowerCase(), name:val.key});\n                        \n                      }\n                      else{\n                      //  p.push({key:val.name.toLowerCase(), name:val.name});\n                        var skiInd = s.findIndex((it)=>it.key===val.key.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.name.toLowerCase(), name:val.name});\n                        }\n                      }\n                    }\n                    else {\n                    //  p.push({key:val.name.toLowerCase(), name:val.name});\n                      var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.name.toLowerCase(), name:val.name});\n                        }\n                    }\n\n                  });\n                  console.log(pred);\n                  this.setState({\n                    skills:s,\n                    predSkills:pred\n                  })\n\n\n                  \n                  console.log(\"onchange\")\n\n              }}\n                freeSolo\n                filterOptions={(options, params) => {\n                  const filtered = filter(options, params);\n                  console.log(\"filtered\" + filtered)\n                  // Suggest the creation of a new value\n                  if (params.inputValue !== '') {\n                    var skiInd = filtered.findIndex((it)=>it.key===params.inputValue.toLowerCase());\n                        if(skiInd!==-1){  //present in options\n\n                        }\n                        else{\n                    filtered.push({\n                      key: params.inputValue.toLowerCase(),\n                      name: `Add \"${params.inputValue}\"`,\n                    });}\n                  }\n\n                  return filtered;\n                }}\n                selectOnFocus\n                clearOnBlur\n                handleHomeEndKeys\n                //filterSelectedOptions//removes already selected options\n                renderTags={(value, getTagProps) =>\n                  \n                  this.state.skills.map((option, index) => \n                  \n                    <Chip variant=\"outlined\" key={option.name.toLowerCase()} label={option.name} {...getTagProps({ index })} />\n                  )\n                  \n                }\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" label=\"Skills\" placeholder=\"Add a skill\"/>\n                )}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n          Update Profile\n          </Button>\n\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js",[],["107","108"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js",["128","129","130","131","132","133","134","135","136","137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":24},{"ruleId":"143","severity":1,"message":"147","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":16},{"ruleId":"143","severity":1,"message":"148","line":15,"column":8,"nodeType":"145","messageId":"146","endLine":15,"endColumn":11},{"ruleId":"143","severity":1,"message":"149","line":18,"column":10,"nodeType":"145","messageId":"146","endLine":18,"endColumn":20},{"ruleId":"143","severity":1,"message":"150","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":10},{"ruleId":"143","severity":1,"message":"144","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":24},{"ruleId":"143","severity":1,"message":"147","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":16},{"ruleId":"143","severity":1,"message":"151","line":14,"column":10,"nodeType":"145","messageId":"146","endLine":14,"endColumn":20},{"ruleId":"143","severity":1,"message":"149","line":14,"column":22,"nodeType":"145","messageId":"146","endLine":14,"endColumn":32},{"ruleId":"143","severity":1,"message":"152","line":21,"column":5,"nodeType":"145","messageId":"146","endLine":21,"endColumn":7},{"ruleId":"143","severity":1,"message":"153","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":12},{"ruleId":"143","severity":1,"message":"154","line":4,"column":42,"nodeType":"145","messageId":"146","endLine":4,"endColumn":46},{"ruleId":"139","replacedBy":"155"},{"ruleId":"141","replacedBy":"156"},{"ruleId":"143","severity":1,"message":"157","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":24},{"ruleId":"143","severity":1,"message":"147","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":16},{"ruleId":"143","severity":1,"message":"154","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":12},{"ruleId":"143","severity":1,"message":"148","line":16,"column":8,"nodeType":"145","messageId":"146","endLine":16,"endColumn":11},{"ruleId":"143","severity":1,"message":"158","line":17,"column":8,"nodeType":"145","messageId":"146","endLine":17,"endColumn":24},{"ruleId":"143","severity":1,"message":"149","line":19,"column":10,"nodeType":"145","messageId":"146","endLine":19,"endColumn":20},{"ruleId":"143","severity":1,"message":"159","line":22,"column":9,"nodeType":"145","messageId":"146","endLine":22,"endColumn":17},{"ruleId":"143","severity":1,"message":"160","line":119,"column":13,"nodeType":"145","messageId":"146","endLine":119,"endColumn":16},{"ruleId":"143","severity":1,"message":"161","line":203,"column":13,"nodeType":"145","messageId":"146","endLine":203,"endColumn":25},{"ruleId":"143","severity":1,"message":"150","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":10},{"ruleId":"143","severity":1,"message":"157","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":24},{"ruleId":"143","severity":1,"message":"148","line":12,"column":8,"nodeType":"145","messageId":"146","endLine":12,"endColumn":11},{"ruleId":"143","severity":1,"message":"158","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":24},{"ruleId":"143","severity":1,"message":"151","line":15,"column":10,"nodeType":"145","messageId":"146","endLine":15,"endColumn":20},{"ruleId":"143","severity":1,"message":"149","line":15,"column":22,"nodeType":"145","messageId":"146","endLine":15,"endColumn":32},{"ruleId":"143","severity":1,"message":"162","line":20,"column":8,"nodeType":"145","messageId":"146","endLine":20,"endColumn":25},{"ruleId":"143","severity":1,"message":"163","line":22,"column":8,"nodeType":"145","messageId":"146","endLine":22,"endColumn":15},{"ruleId":"143","severity":1,"message":"152","line":30,"column":5,"nodeType":"145","messageId":"146","endLine":30,"endColumn":7},{"ruleId":"143","severity":1,"message":"164","line":32,"column":10,"nodeType":"145","messageId":"146","endLine":32,"endColumn":19},{"ruleId":"143","severity":1,"message":"165","line":204,"column":13,"nodeType":"145","messageId":"146","endLine":204,"endColumn":14},{"ruleId":"143","severity":1,"message":"166","line":519,"column":23,"nodeType":"145","messageId":"146","endLine":519,"endColumn":24},{"ruleId":"143","severity":1,"message":"167","line":520,"column":23,"nodeType":"145","messageId":"146","endLine":520,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":551,"column":29,"nodeType":"145","messageId":"170","endLine":551,"endColumn":35},{"ruleId":"168","severity":1,"message":"169","line":562,"column":27,"nodeType":"145","messageId":"170","endLine":562,"endColumn":33},{"ruleId":"143","severity":1,"message":"157","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":24},{"ruleId":"143","severity":1,"message":"148","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":11},{"ruleId":"143","severity":1,"message":"158","line":14,"column":8,"nodeType":"145","messageId":"146","endLine":14,"endColumn":24},{"ruleId":"143","severity":1,"message":"162","line":20,"column":8,"nodeType":"145","messageId":"146","endLine":20,"endColumn":25},{"ruleId":"143","severity":1,"message":"163","line":22,"column":8,"nodeType":"145","messageId":"146","endLine":22,"endColumn":15},{"ruleId":"143","severity":1,"message":"164","line":28,"column":10,"nodeType":"145","messageId":"146","endLine":28,"endColumn":19},{"ruleId":"143","severity":1,"message":"165","line":159,"column":13,"nodeType":"145","messageId":"146","endLine":159,"endColumn":14},{"ruleId":"143","severity":1,"message":"166","line":411,"column":23,"nodeType":"145","messageId":"146","endLine":411,"endColumn":24},{"ruleId":"143","severity":1,"message":"167","line":412,"column":23,"nodeType":"145","messageId":"146","endLine":412,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":443,"column":29,"nodeType":"145","messageId":"170","endLine":443,"endColumn":35},{"ruleId":"168","severity":1,"message":"169","line":454,"column":27,"nodeType":"145","messageId":"170","endLine":454,"endColumn":33},{"ruleId":"139","replacedBy":"171"},{"ruleId":"141","replacedBy":"172"},{"ruleId":"143","severity":1,"message":"173","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":12},{"ruleId":"143","severity":1,"message":"174","line":14,"column":8,"nodeType":"145","messageId":"146","endLine":14,"endColumn":16},{"ruleId":"143","severity":1,"message":"163","line":15,"column":8,"nodeType":"145","messageId":"146","endLine":15,"endColumn":15},{"ruleId":"143","severity":1,"message":"175","line":16,"column":8,"nodeType":"145","messageId":"146","endLine":16,"endColumn":20},{"ruleId":"143","severity":1,"message":"176","line":17,"column":8,"nodeType":"145","messageId":"146","endLine":17,"endColumn":18},{"ruleId":"143","severity":1,"message":"177","line":18,"column":8,"nodeType":"145","messageId":"146","endLine":18,"endColumn":22},{"ruleId":"143","severity":1,"message":"162","line":24,"column":8,"nodeType":"145","messageId":"146","endLine":24,"endColumn":25},{"ruleId":"143","severity":1,"message":"178","line":26,"column":8,"nodeType":"145","messageId":"146","endLine":26,"endColumn":17},{"ruleId":"143","severity":1,"message":"179","line":28,"column":8,"nodeType":"145","messageId":"146","endLine":28,"endColumn":17},{"ruleId":"143","severity":1,"message":"180","line":36,"column":8,"nodeType":"145","messageId":"146","endLine":36,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":98,"column":27,"nodeType":"183","messageId":"184","endLine":98,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":98,"column":52,"nodeType":"183","messageId":"184","endLine":98,"endColumn":54},{"ruleId":"143","severity":1,"message":"185","line":204,"column":11,"nodeType":"145","messageId":"146","endLine":204,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":235,"column":25,"nodeType":"183","messageId":"184","endLine":235,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":235,"column":50,"nodeType":"183","messageId":"184","endLine":235,"endColumn":52},{"ruleId":"181","severity":1,"message":"182","line":245,"column":27,"nodeType":"183","messageId":"184","endLine":245,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":245,"column":54,"nodeType":"183","messageId":"184","endLine":245,"endColumn":56},{"ruleId":"181","severity":1,"message":"182","line":255,"column":25,"nodeType":"183","messageId":"184","endLine":255,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":255,"column":50,"nodeType":"183","messageId":"184","endLine":255,"endColumn":52},{"ruleId":"143","severity":1,"message":"186","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":14},{"ruleId":"143","severity":1,"message":"187","line":11,"column":8,"nodeType":"145","messageId":"146","endLine":11,"endColumn":17},{"ruleId":"143","severity":1,"message":"173","line":12,"column":8,"nodeType":"145","messageId":"146","endLine":12,"endColumn":12},{"ruleId":"143","severity":1,"message":"174","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":16},{"ruleId":"143","severity":1,"message":"163","line":14,"column":8,"nodeType":"145","messageId":"146","endLine":14,"endColumn":15},{"ruleId":"143","severity":1,"message":"175","line":15,"column":8,"nodeType":"145","messageId":"146","endLine":15,"endColumn":20},{"ruleId":"143","severity":1,"message":"176","line":16,"column":8,"nodeType":"145","messageId":"146","endLine":16,"endColumn":18},{"ruleId":"143","severity":1,"message":"177","line":17,"column":8,"nodeType":"145","messageId":"146","endLine":17,"endColumn":22},{"ruleId":"143","severity":1,"message":"180","line":19,"column":8,"nodeType":"145","messageId":"146","endLine":19,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":65,"column":23,"nodeType":"183","messageId":"184","endLine":65,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":65,"column":46,"nodeType":"183","messageId":"184","endLine":65,"endColumn":48},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'im' is defined but never used.","'withStyles' is defined but never used.","'hi' is assigned a value but never used.","'logo' is defined but never used.","'Link' is defined but never used.",["188"],["189"],"'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'InputTag' is defined but never used.","'arr' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'DialogContentText' is defined but never used.","'Divider' is defined but never used.","'Copyright' is defined but never used.","'y' is assigned a value but never used.","'x' is assigned a value but never used.","'p' is assigned a value but never used.","no-redeclare","'skiInd' is already defined.","redeclared",["188"],["189"],"'List' is defined but never used.","'ListItem' is defined but never used.","'Autocomplete' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","'SearchIcon' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'filt' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]