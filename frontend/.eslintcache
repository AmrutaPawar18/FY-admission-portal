[{"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js":"1","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js":"2","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js":"3","/home/ahana/DASS/job-apllication-portal/frontend/src/App.js":"4","/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js":"5","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js":"6","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js":"7","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js":"8","/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js":"9","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js":"10","/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js":"11","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Recr.js":"12","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrProfile.js":"13","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrDash.js":"14","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplicationsView.js":"15"},{"size":500,"mtime":1610497652423,"results":"16","hashOfConfig":"17"},{"size":7533,"mtime":1611453459156,"results":"18","hashOfConfig":"17"},{"size":7521,"mtime":1611453406732,"results":"19","hashOfConfig":"17"},{"size":1396,"mtime":1611186381025,"results":"20","hashOfConfig":"17"},{"size":13292,"mtime":1611454502941,"results":"21","hashOfConfig":"17"},{"size":1251,"mtime":1610628421771,"results":"22","hashOfConfig":"17"},{"size":20834,"mtime":1610908944235,"results":"23","hashOfConfig":"17"},{"size":17004,"mtime":1611453578691,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":1610497652423,"results":"25","hashOfConfig":"17"},{"size":19307,"mtime":1611524686681,"results":"26","hashOfConfig":"17"},{"size":3778,"mtime":1611488573196,"results":"27","hashOfConfig":"17"},{"size":4453,"mtime":1611453432908,"results":"28","hashOfConfig":"17"},{"size":7587,"mtime":1611175458950,"results":"29","hashOfConfig":"17"},{"size":8377,"mtime":1611506592215,"results":"30","hashOfConfig":"17"},{"size":12321,"mtime":1611523662603,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"11512e0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ahana/DASS/job-apllication-portal/frontend/src/index.js",[],["72","73"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Register.js",["74","75","76","77"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n///styles\nconst classes = {\n  paper: {\n    marginTop: 10,\n      justifyContent: 'center',\n      height: '70vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: 10,\n    backgroundColor: 'red',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: 3,\n  },\n  submit: {\n    margin: 3,\n    marginTop: 15,\n    marginBottom: 15,\n  },\n};\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            pwd:'',\n            email: '',\n            role:\"\",\n            fname:\"\",\n            lname:\"\"\n        }\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeFname = this.onChangeFname.bind(this);\n        this.onChangeLname = this.onChangeLname.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n    }\n\n    componentDidMount() {\n     /* var tok = localStorage.getItem('token');\n\n      if(tok){\n        var role = localStorage.getItem('role');\n        if(role==='Applicant')\n          this.props.history.push('/aDashboard');\n        else if(role === 'Recruiter')\n          this.props.history.push('/rDashboard');\n\n      }*/\n    }\n\n    onChangeUsername(event) {\n        this.setState({ name: event.target.value });\n    }\n    onChangeFname(event) {\n        this.setState({ fname: event.target.value });\n    }\n    onChangeLname(event) {\n        this.setState({ lname: event.target.value });\n    }\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            fname: this.state.fname,\n            lname: this.state.lname,\n            email: this.state.email,\n            password: this.state.pwd,\n            date_of_reg: Date.now(),\n            role: this.state.role\n        }\n        console.log(newUser);\n\n        axios.post('http://localhost:5000/user/register', newUser)\n             .then(res => {\n                alert(\"Created basic account for \" + res.data.name+\". Please continue to complete your profile\"); \n                localStorage.setItem('token', res.data.token);\n                var role = res.data.role;\n                localStorage.setItem('role', role);\n                if(role==='Applicant')\n                  this.props.history.push('/acreateProfile');\n                else if(role === 'Recruiter')\n                  this.props.history.push('/rcreateProfile');\n                console.log(res);\n                this.setState({fname:\"\",lname:\"\", email:\"\", pwd:\"\", role:\"\"})\n\n            })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n   }\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={classes.paper}>\n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form style={classes.form} noValidate onSubmit={this.onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={this.state.fname}\n                onChange={this.onChangeFname}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={this.state.lname}\n                onChange={this.onChangeLname}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={this.state.pwd}\n                onChange={this.onChangePwd}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel id=\"select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  id=\"select\"\n                  value={this.state.role}\n                  onChange={(e)=>this.setState({role: e.target.value})}\n                  label=\"Role\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={\"Applicant\"}>Applicant</MenuItem>\n                  <MenuItem value={\"Recruiter\"}>Recruiter</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n           \n           </Container>\n        )\n    }\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/Home.js",["78","79","80","81","82","83"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '70vh',\n      alignItems: 'center',\n      alignContent: 'center'\n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            email:'',\n            pwd:''\n        }\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n      /*var tok = localStorage.getItem('token');\n      var ck = false;\n      var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (tok) {\n          config.headers['auth-tok'] = tok;\n        }\n        await axios.get('http://localhost:5000/user', config)\n             .then(res => {\n              if(res.data.check){\n                ck = true;\n                localStorage.setItem('role', res.data.role)\n              }\n            })\n             .catch(err=>{\n              if(err.response){\n                if(err.response.data.error)\n                  console.log(err.response.data.error)\n                else\n                  console.log(err.message);\n              }\n              else\n                console.log(err.message);\n             });\n\n      if(ck){\n        if(tok){\n          var role = localStorage.getItem('role');\n          console.log(role)\n          if(role==='Applicant'){\n            console.log(\"Applicant\")\n            this.props.history.push('/aDashboard');\n          }\n          else if(role === 'Recruiter')\n            this.props.history.push('/rDashboard');\n\n        }\n      }*/\n\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        axios.post('http://localhost:5000/user/login', {email:this.state.email, password:this.state.pwd})\n             .then(res => {alert(\"Welcome\\t\" + res.data.name);\n                localStorage.setItem('token', res.data.token);\n                var role = res.data.role;\n                localStorage.setItem('role', role);\n                if(role==='Applicant')\n                  this.props.history.push('/aDashboard');\n                else if(role === 'Recruiter')\n                  this.props.history.push('/rDashboard');\n              })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div style={classes.paper}>\n      \n        <Avatar style={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" >\n          Sign in\n        </Typography>\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={this.state.email}\n            onChange={this.onChangeEmail}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={this.state.pwd}\n            onChange={this.onChangePwd}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n\n          <Grid container style={{paddingTop:10}}>\n            <Grid item xs>\n              \n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n\n\n    // render(){\n    //     return(\n            \n    //             <Container>\n    //                 <img\n    //                     src={im}\n    //                     alt=\"Job application portal\"\n    //                 />\n    //                 <div>\n    //                     <Button href=\"/register\">Register</Button>\n    //                 </div>\n    //             </Container>\n            \n    //     )\n    // }\n\n    /*render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangeUsername}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.pwd}\n                               onChange={this.onChangePwd}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\n                        <Button  href=\"/register\">Register</Button>\n                    </div>\n                </form>\n           </div>\n        )\n    }*/\n",["84","85"],"/home/ahana/DASS/job-apllication-portal/frontend/src/App.js",["86","87"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/createJob.js",["88","89","90","91","92","93","94","95","96","97"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/Tag.js",[],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplProfile.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10,\n      marginTop: 10,\n    },\n  };\n\nconst conf = {\n  ignoreCase:true,\n  trim: true\n}\nconst filter = createFilterOptions(conf);\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            email:'',\n            edit: false,\n            fname:'',\n            lname:'',\n            education:[],\n            skills:[],\n            rating:0,\n            open:false,\n            insti_name:'',\n            start_year:(new Date()).getFullYear(),\n            end_year:'',\n            predSkills:[{key:\"html\",name:\"HTML\"},{key:\"css\",name:\"CSS\"},{key:\"js\",name:\"JS\"}],\n\n        }\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePwd = this.onChangePwd.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onEduChange = this.onEduChange.bind(this);\n        this.handleClose= this.handleClose.bind(this);\n        this.handleDiaSubmit = this.handleDiaSubmit.bind(this);\n        this.onIntInputChange = this.onIntInputChange.bind(this);\n    }\n\n    async componentDidMount() {\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        await axios.get('http://localhost:5000/appl/profile', config)\n             .then(res => {\n              console.log(res.data);\n              this.setState({\n                fname: res.data.user_id.fname,\n                lname: res.data.user_id.lname,\n                email: res.data.user_id.email,\n                education: res.data.education,\n                skills: res.data.skills,\n                rating: res.data.rating\n              })\n            })\n             .catch(err=>{\n              if(err.response){\n                if(err.response.data.error)\n                  console.log(err.response.data.error)\n                else\n                  console.log(err.message);\n              }\n              else\n                console.log(err.message);\n             });\n\n    }\n\n    onIntInputChange(e) {\n      var yr = parseInt(e.target.value)\n      this.setState({ [e.target.name] : yr})\n    }\n\n    handleClose(e){\n      e.preventDefault();\n      this.setState({\n        start_year:(new Date()).getFullYear(),\n        end_year:'',\n        insti_name:'',\n        open:false\n      });\n    }\n\n    handleDiaSubmit(e){\n      e.preventDefault();\n      var x = {\n        insti_name:this.state.insti_name,\n        start_year:this.state.start_year,\n        end_year:this.state.end_year\n      }\n      console.log(x);\n      if(x.insti_name!=='' && x.start_year!==''){\n        if(parseInt(x.start_year)>parseInt(x.end_year)){\n          alert(\"End year cannot be less than Start year\");\n          return;\n        }\n        if(x.start_year>2100 || x.start_year<1900){\n          alert(\"Invalid start year\")\n          return;\n        }\n        if(x.end_year){\n          console.log(x.end_year+\" hi\")\n          if(x.end_year>2100|| x.end_year<1900){\n            alert(\"Invalid end year\")\n            return;\n          }\n        }\n        var y = this.state.education;\n        y.push(x);\n        this.setState({\n          education: y,\n          start_year:(new Date()).getFullYear(),\n          end_year:'',\n          insti_name:'',\n          open:false\n        });\n      }\n      else{\n        alert(\"Institute name and start year are compulsory\");\n        \n      }\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onEduChange(event) {\n        var x = {...this.state.education};\n        var y = x.education;\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePwd(event) {\n        this.setState({ pwd: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        if(!this.state.edit)\n          this.setState({edit:true});\n        else{\n          var b=1;\n\n          var prof = {\n            education: this.state.education,\n            skills: this.state.skills,\n            rating:0,\n\n          }\n\n          this.state.education.forEach(function(x,i){\n            if(x.insti_name!=='' && x.start_year!==''){\n              if(parseInt(x.start_year)>parseInt(x.end_year)){\n                alert(\"End year cannot be less than Start year for education entry \" + (i+1));\n                b=0;\n                return;\n              }\n              if(x.start_year>2100 || x.start_year<1900){\n                alert(`Invalid start year for education no. ${i+1}`)\n                b=0;\n                return;\n              }\n              if(!x.end_year){ \n                prof.education[i].end_year=null;\n              }\n              else{\n                if(x.end_year>2100|| x.end_year<1900){\n                  alert(`Invalid end year for education entry ${i+1}`)\n                  b=0;\n                  return;\n                }\n              }\n              // console.log(\"hi\");\n              \n            }\n            else{\n              alert(\"Institute name and start year are compulsory. Check entry \"+(i+1));\n              b=0;\n              return;\n            }\n            // console.log(\"ji\")\n          });\n          if(!b) return\n          // console.log(\"ki\")\n          var token = localStorage.getItem('token');\n\n          // Headers\n          var config = {\n            headers: {\n              'Content-type': 'application/json'\n            }\n          }\n          // If token, add to headers\n          if (token) {\n            config.headers['auth-tok'] = token;\n          }\n\n          \n          console.log(prof);\n\n          axios.post('http://localhost:5000/appl/updateProfile', prof, config)\n               .then(res => {\n                  alert(\"Updated\");\n                  this.setState({edit:false})\n                })\n               .catch(err => {\n                  if(err.response){\n                    if(err.response.data.error)\n                      console.log(err.response.data.error)\n                    else\n                      console.log(err.message);\n                  }\n                  \n                  else\n                    console.log(err.message);             \n               });\n          }\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\n          Profile\n        </Typography>\n\n\n              <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Education</DialogTitle>\n                <DialogContent>\n                  <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                  <TextField\n                    autoFocus\n                    id=\"insti_name\"\n                    label=\"Institute Name\"\n                    fullWidth\n                    name= \"insti_name\"\n                    required\n                    value={this.state.insti_name}\n                    onChange={ this.onInputChange}\n                  />\n                  </Grid>\n                  <Grid item xs={6}>\n                  <TextField\n                    id=\"start_year\"\n                    label=\"Start Year\"\n                    name=\"start_year\"\n                    required\n                    fullWidth\n                    type=\"number\"\n                    value={this.state.start_year}\n                    error={(parseInt(this.state.start_year)>=1900)?false:true}\n                    onChange={this.onIntInputChange}\n                  />\n                  </Grid>\n                  <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"end_year\"\n                    label=\"End Year\"\n                    name=\"end_year\"\n                    type=\"number\"\n                    value={this.state.end_year}\n                    onChange={this.onIntInputChange}\n                  />\n                  </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button onClick={this.handleDiaSubmit} color=\"primary\">\n                    Add\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"fname\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fname\"\n                label=\"First Name\"\n                autoFocus={this.state.edit}\n                value={this.state.fname}\n                onChange={this.onChangeFname}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lname\"\n                label=\"Last Name\"\n                name=\"lname\"\n                autoComplete=\"lname\"\n                value={this.state.lname}\n                onChange={this.onChangeLname}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: false\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <Typography>Education:</Typography>\n            \n              <FormControl variant=\"outlined\" required fullWidth>\n              <ol>\n                {this.state.education.map((edu,ind)=>(\n                  <li key={ind}>\n                  <Grid container spacing={1}>\n                  <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    fullWidth\n                  variant=\"filled\"\n                    label=\"Institute Name\"\n                    id=\"insti_name\"\n                    value={edu.insti_name}\n                    onChange={(e)=>{\n                      var temp = this.state.education; \n                      temp[ind].insti_name = e.target.value; \n                      this.setState({education:temp})\n                    }}\n                    InputProps = {{\n                      readOnly: !this.state.edit\n                    }}\n                  />\n                  </Grid>\n                  <Grid item xs={6} md={3}>\n                <TextField\n                  variant=\"filled\"\n                  required\n                    fullWidth\n                  name=\"start_year\"\n                  label=\"Start Year\"\n                  id=\"start_year\"\n                  value={edu.start_year}\n                  type=\"number\"\n                  \n                  onChange={(e)=>{\n                      var temp = this.state.education; \n                      if(parseInt(e.target.value))\n                      temp[ind].start_year = parseInt(e.target.value); \n                      console.log(temp)\n                      this.setState({education:temp})\n                    }}\n                  InputProps = {{\n                    readOnly: !this.state.edit\n                  }}\n                />\n                </Grid>\n                  <Grid item xs={6} md={3}>\n                <TextField\n                  variant=\"filled\"\n                  name=\"end_year\"\n                    fullWidth\n                  label=\"End Year\"\n                  id=\"end_year\"\n                  value={!edu.end_year?\"undefined\":edu.end_year}\n                  type=\"number\"\n                  onChange={(e)=>{\n                      var temp = this.state.education; \n                      if(parseInt(e.target.value))\n                        temp[ind].end_year = parseInt(e.target.value); \n                      console.log(temp)\n                      this.setState({education:temp})\n                    }}\n                  InputProps = {{\n                    readOnly: !this.state.edit\n                  }}\n                />\n                </Grid>\n                </Grid>\n                </li>\n              ))}\n              </ol>\n              {this.state.edit && <Grid item xs={12}>\n                <Button onClick={(e)=> {e.preventDefault(); this.setState({open:true})}}>+ Add education</Button>\n              </Grid>}\n\n              </FormControl>\n            </Grid>\n            {this.state.edit?(\n            <Grid item xs={12}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={this.state.predSkills}\n                value={this.state.skills}\n                renderOption={(option) => option.name}\n                getOptionLabel={(option) => {\n                  // Value selected with enter, right from the input\n                  if (typeof option === 'string') {\n                    return option;\n                  }\n                  // Add \"xxx\" option created dynamically\n                  if (option.inputValue) {\n                    return option.inputValue;\n                  }\n                  // Regular option\n                  return option.name;\n                }}\n                onChange={(event, newValue) => {\n                  console.log(\"onchange\")\n                  console.log(newValue)\n                  var pred = this.state.predSkills;\n                  var x = this.state.skills;\n                  var p=[];var s=[];\n\n                  newValue.forEach((val,i)=>{\n                    console.log(val)\n                    if(typeof val==='string'){  //option wasnt selected, directly pressed enter\n                      \n                      var predInd = pred.findIndex((it)=>it.key===val.toLowerCase());\n                      if(predInd!==-1){  //present in predSkills\n                        var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.toLowerCase(),name:val});\n\n                        }\n                      }\n                      else{\n                        s.push({key:val.toLowerCase(),name:val});\n                        pred.push({key:val.toLowerCase(),name:val});\n                      }\n                      \n                    }\n                    else if(val && val.name){\n                      if(val.key!==val.name.toLowerCase()){ //add \"\" got selected\n                        pred.push({key:val.key.toLowerCase(), name:val.key});\n                        s.push({key:val.key.toLowerCase(), name:val.key});\n                        \n                      }\n                      else{\n                      //  p.push({key:val.name.toLowerCase(), name:val.name});\n                        var skiInd = s.findIndex((it)=>it.key===val.key.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.name.toLowerCase(), name:val.name});\n                        }\n                      }\n                    }\n                    else {\n                    //  p.push({key:val.name.toLowerCase(), name:val.name});\n                      var skiInd = s.findIndex((it)=>it.key===val.toLowerCase());\n                        if(skiInd!==-1){  //present in s\n\n                        }\n                        else{\n                          s.push({key:val.name.toLowerCase(), name:val.name});\n                        }\n                    }\n\n                  });\n                  console.log(pred);\n                  this.setState({\n                    skills:s,\n                    predSkills:pred\n                  })\n\n\n                  \n                  console.log(\"onchange\")\n\n              }}\n                freeSolo\n                filterOptions={(options, params) => {\n                  const filtered = filter(options, params);\n                  console.log(\"filtered\" + filtered)\n                  // Suggest the creation of a new value\n                  if (params.inputValue !== '') {\n                    var skiInd = filtered.findIndex((it)=>it.key===params.inputValue.toLowerCase());\n                        if(skiInd!==-1){  //present in options\n\n                        }\n                        else{\n                    filtered.push({\n                      key: params.inputValue.toLowerCase(),\n                      name: `Add \"${params.inputValue}\"`,\n                    });}\n                  }\n\n                  return filtered;\n                }}\n                selectOnFocus\n                clearOnBlur\n                handleHomeEndKeys\n                //filterSelectedOptions//removes already selected options\n                renderTags={(value, getTagProps) =>\n                  \n                  this.state.skills.map((option, index) => \n                  \n                    <Chip variant=\"outlined\" key={option.name.toLowerCase()} label={option.name} {...getTagProps({ index })} />\n                  )\n                  \n                }\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" label=\"Skills\" placeholder=\"Add a skill\" />\n                )}\n              />\n              </Grid>):\n              (\n                <Grid item xs={12}>\n                <Typography>Skills:</Typography>\n                {this.state.skills.map((option, index) => \n                  \n                    <Chip variant=\"outlined\" key={option.key} label={option.name} />\n                 )}\n                 </Grid>\n                  )}\n            \n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n          {this.state.edit?\"Update\":\"Edit\"}\n          </Button>\n\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n}\n\n",["114","115"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Appl.js",["116","117","118","119","120","121","122","123","124","125","126","127"],"/home/ahana/DASS/job-apllication-portal/frontend/src/reportWebVitals.js",[],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplDash.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/MyAppl.js",["144","145","146","147","148","149","150","151","152","153","154"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RegPart2Recr.js",["155","156","157","158","159","160","161","162","163"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n     paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            contact:'',\n            bio:''\n        }\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n      \n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onSubmit(e) {\n\n        e.preventDefault();\n        var arr = this.state.bio.split(' ');\n      if(arr.length>250){\n        alert(\"Bio exceeded 250 words!\");\n        return;\n      }\n\n        var token = localStorage.getItem('token');\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n        var data = this.state;\n        axios.post('http://localhost:5000/recr/newProfile', data, config)\n             .then(res => {\n                alert(\"Profile created!\");\n                \n                this.props.history.push('/rDashboard');\n              })\n             .catch(err => {\n                if(err.response){\n                    if(err.response.data.error)\n                      alert(err.response.data.error)\n                    else\n                      alert(err.message);\n                  }\n                  \n                  else\n                    alert(err.message);  \n             })\n             ;\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:10}}>\n          Profile\n        </Typography>\n        \n        <form style={classes.form} onSubmit={this.onSubmit} noValidate>\n          You must fill this form to continue\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"contact\"\n            label=\"Contact number\"\n            name=\"contact\"\n            autoFocus\n            value={this.state.contact}\n            onChange={this.onInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            multiline\n            rows={4}\n            name=\"bio\"\n            label=\"Bio (max 250 words)\"\n            id=\"bio\"\n            value={this.state.bio}\n            onChange={this.onInputChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Create profile\n          </Button>\n        </form>\n      </Paper>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n\n","/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrProfile.js",["164","165","166","167","168","169","170","171"],"import React, {Component} from 'react';\nimport im from '../static/bk9.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\n\n/**/\n\nvar hi = []\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\nconst classes = {\n    paper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    avatar: {\n      margin: 10,\n      alignSelf: 'center',\n      backgroundColor: 'red',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: 1,\n    },\n    submit: {\n      marginBottom: 10\n    },\n  };\n  \nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            email:'',\n            fname:'',\n            lname:'',\n            bio:'',\n            contact:'',\n            edit:false\n        }\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        await axios.get('http://localhost:5000/recr/profile', config)\n             .then(res => {\n              console.log(res.data);\n              this.setState({\n                fname: res.data.user_id.fname,\n                lname: res.data.user_id.lname,\n                email: res.data.user_id.email,\n                contact: res.data.contact,\n                bio: res.data.bio\n              })\n            })\n             .catch(err=>{\n              if(err.response){\n                if(err.response.data.error)\n                  alert(err.response.data.error)\n                else\n                  alert(err.message);\n\n              }\n              else\n                alert(err.message);\n              this.props.history.push('/')\n             });\n\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onSubmit(e) {\n      e.preventDefault();\n      if(!this.state.edit)\n        this.setState({edit:true});\n      else{\n        var arr = this.state.bio.split(' ');\n        if(arr.length>250){\n          alert(\"Bio exceeded 250 words!\");\n          return;\n        }\n        var token = localStorage.getItem('token');\n\n          // Headers\n          var config = {\n            headers: {\n              'Content-type': 'application/json'\n            }\n          }\n          // If token, add to headers\n          if (token) {\n            config.headers['auth-tok'] = token;\n          }\n\n          var prof = this.state;\n          delete prof.edit;\n          console.log(prof);\n\n          axios.post('http://localhost:5000/recr/updateProfile', prof, config)\n               .then(res => {\n                  alert(\"Updated\");\n                  this.setState({edit:false})\n                })\n               .catch(err => {\n                  if(err.response){\n                    if(err.response.data.error)\n                      console.log(err.response.data.error)\n                    else\n                      console.log(err.message);\n                  }\n                  \n                  else\n                    console.log(err.message);             \n               });\n          \n        }\n    }\n\nrender() {\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline/>\n      <Paper style={classes.paper}>\n      \n        <Typography component=\"h1\" variant=\"h5\" >\n          Profile\n        </Typography>\n        \n        <form style={classes.form} noValidate onSubmit={this.onSubmit}>\n          <Grid container spacing={2} style={{padding:10}}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"fname\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fname\"\n                label=\"First Name\"\n                autoFocus\n                value={this.state.fname}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lname\"\n                label=\"Last Name\"\n                name=\"lname\"\n                value={this.state.lname}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.onInputChange}InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"contact\"\n                label=\"Contact number\"\n                name=\"contact\"\n                value={this.state.contact}\n                onChange={this.onInputChange}InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n              </Grid>\n              <Grid item xs={12}>\n              <TextField \n                variant=\"outlined\"\n                required\n                fullWidth\n                multiline\n                rows={4}\n                name=\"bio\"\n                label=\"Bio (max 250 words)\"\n                id=\"bio\"\n                value={this.state.bio}\n                onChange={this.onInputChange}\n                InputProps = {{\n                  readOnly: !this.state.edit\n                }}\n              />\n            </Grid>\n            \n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={classes.submit}\n          >\n          {this.state.edit?\"Update\":\"Edit\"}\n          </Button>\n\n        </form>\n      </Paper>\n      <Box mt={7}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n}\n",["172","173"],"/home/ahana/DASS/job-apllication-portal/frontend/src/components/RecrDash.js",["174","175","176","177"],"import React from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nconst classes={\n\tpaper: {\n      padding:'5%', \n      justifyContent:'center', \n      alignItems:'center', \n      display:'flex', \n      flexDirection:'column', \n      marginTop:'10%'    \n    },\n    title:{fontSize:14}\n}\n\nexport default class RecrDash extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tjobs:[],\n\t\t}\n    this.onIntInputChange = this.onIntInputChange.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.editButton = this.editButton.bind(this);\n\t}\n\n\tcomponentDidMount() {\n      var token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n        axios.get('http://localhost:5000/recr/',config)\n          .then(response => {\n            var array = response.data.map(ele=>{return({... ele, edit:false})})\n            console.log(array)\n            \n            this.setState({\n              jobs: array\n            });\n          })\n          .catch(function(error) {\n            console.log(error);\n          })\n    }\n\n    onInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onIntInputChange(e) {\n        this.setState({ [e.target.name] : parseInt(e.target.value)||0})\n    }\n\n    deleteJob(id, e){\n    \tvar token = localStorage.getItem('token');\n\n      // Headers\n      var config = {\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n\n      var filt = this.state.jobs.filter((job)=>job._id!=id)\n\n      axios.delete(`http://localhost:5000/recr/deleteJob/${id}`, config)\n        .then(response => {\n          \n          this.setState({\n            jobs: filt\n          });\n        })\n        .catch(function(error) {\n          console.log(error);\n        })\n    }\n\n    editButton(ind, e){\n    \tif(this.state.jobs[ind].edit){\n    \t\t//update in backend\n    \t\tvar token = localStorage.getItem('token');\n\n        // Headers\n        var config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }\n\n        // If token, add to headers\n        if (token) {\n          config.headers['auth-tok'] = token;\n        }\n\n        var job = this.state.jobs;\n\n        var data = { \n        \tid:job[ind]._id, \n        \tmaxPos:job[ind].maxPos, \n        \tmaxAppl:job[ind].maxAppl, \n        \tdeadline:job[ind].deadline\n        }\n\n        if(data.maxAppl<=0){\n        \talert(\"Max applications should be greater than zero\");\n        \treturn\n        }\n\n        if(data.maxPos<=0){\n        \talert(\"Max positions should be greater than zero\")\n        \treturn\n        }\n\n        job[ind].edit = false;\n        axios.post('http://localhost:5000/recr/updateJob', data ,config)\n          .then(response => {\n            \n            this.setState({\n              jobs: job\n            });\n          })\n          .catch(function(error) {\n            console.log(error);\n          })\n    \t}\n    \telse{\n    \t\tvar array=this.state.jobs\n    \t\tarray[ind].edit = true;\n    \t\tthis.setState({jobs:array});\n    \t}\n    }\n\n\n\trender(){\n\t\treturn(\n\t\t\t<Container component=\"main\" style={classes.paper}>\n\t\t\t<h4>My Job Listings</h4>\n\t\t\t{this.state.jobs.length?\"\":\"You don't have any active jobs\"}\n\t\t\t<Grid container spacing={2}>\n\t\t\t{this.state.jobs.map((j,ind)=>(\n\t\t\t\t<Grid item xs={12} sm={6} lg={4}>\n\t\t\t<Card className={classes.root}>\n      <CardContent>\n        <Typography title={classes.title} color=\"textSecondary\" gutterBottom>\n          {j.date_of_post}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {j.title}\n        </Typography>\n        {j.edit?(\n        \t<Grid container spacing={1}>\n        \t<Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"maxAppl\"\n                label=\"Maximum Applications\"\n                name=\"maxAppl\"\n                type=\"number\"\n                autoComplete=\"maxAppl\"\n                value={j.maxAppl}\n                helperText=\"Enter positive numbers only\"\n                onChange={(e)=>{\n                  var temp = this.state.jobs; \n                  temp[ind].maxAppl = parseInt(e.target.value)||1; \n                  this.setState({jobs:temp})\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"maxPos\"\n                label=\"Maximum Positions\"\n                name=\"maxPos\"\n                type=\"number\"\n                autoComplete=\"maxPos\"\n                value={j.maxPos}\n                helperText=\"Enter positive numbers only\"\n                onChange={(e)=>{\n                  var temp = this.state.jobs; \n                  temp[ind].maxPos = parseInt(e.target.value)||1; \n                  this.setState({jobs:temp})\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                name=\"date\"\n                label=\"Application deadline date\"\n                type=\"date\"\n                value = {j.deadline.split(' ')[0]}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(e)=>{\n                  var temp = this.state.jobs; \n                  temp[ind].deadline = e.target.value+\" \"+j.deadline.split(' ')[1]; \n                  this.setState({jobs:temp})\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"time\"\n                name=\"time\"\n                label=\"Application deadline time\"\n                type=\"time\"\n                value = {j.deadline.split(' ')[1]}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 300, // 5 min\n                }}\n                onChange={(e)=>{\n                  var temp = this.state.jobs; \n                  temp[ind].deadline = j.deadline.split(' ')[0]+\" \"+e.target.value; \n                  this.setState({jobs:temp})\n                }}\n              />\n            </Grid>\n            </Grid>):(\n            <Grid container spacing={1}>\n            <Grid item>\n        \t<Typography style={classes.pos} color=\"textSecondary\">\n          Deadline: {j.deadline}\n        </Typography>\n        </Grid>\n        <Grid item xs={12}>\n        <Typography style={classes.pos} color=\"textSecondary\">\n          Maximum Applications: {j.maxAppl}\n        </Typography>\n        </Grid>\n        <Grid item>\n        <Typography color=\"textSecondary\">\n          Maximum Positions: {j.maxPos}\n        </Typography>\n        </Grid>\n        </Grid>)}\n        <Typography variant=\"body2\" component=\"p\">\n          Remaining Positions: {j.maxPos-j.posn_filled}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button color=\"primary\" size=\"small\" onClick={(e)=>this.editButton(ind,e)}>{j.edit?\"Update\":\"Edit\"}</Button>\n\n        <Link to={{pathname:\"/applications\",data:j._id}}>\n        \t<Button color=\"primary\" size=\"small\">Show Applications</Button>\n        </Link>\n\n        <Button color=\"primary\" size=\"small\" onClick={(e)=>this.deleteJob(j._id,e)}>Delete</Button>\n      </CardActions>\n    </Card>\n    </Grid>))}\n    </Grid>\n    </Container>\n    \n\t\t)\n\t}\n}","/home/ahana/DASS/job-apllication-portal/frontend/src/components/ApplicationsView.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":16},{"ruleId":"202","severity":1,"message":"207","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":11},{"ruleId":"202","severity":1,"message":"208","line":18,"column":10,"nodeType":"204","messageId":"205","endLine":18,"endColumn":20},{"ruleId":"202","severity":1,"message":"209","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":10},{"ruleId":"202","severity":1,"message":"203","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":16},{"ruleId":"202","severity":1,"message":"210","line":14,"column":10,"nodeType":"204","messageId":"205","endLine":14,"endColumn":20},{"ruleId":"202","severity":1,"message":"208","line":14,"column":22,"nodeType":"204","messageId":"205","endLine":14,"endColumn":32},{"ruleId":"202","severity":1,"message":"211","line":21,"column":5,"nodeType":"204","messageId":"205","endLine":21,"endColumn":7},{"ruleId":"198","replacedBy":"212"},{"ruleId":"200","replacedBy":"213"},{"ruleId":"202","severity":1,"message":"214","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":12},{"ruleId":"202","severity":1,"message":"215","line":4,"column":42,"nodeType":"204","messageId":"205","endLine":4,"endColumn":46},{"ruleId":"202","severity":1,"message":"216","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":16},{"ruleId":"202","severity":1,"message":"215","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":12},{"ruleId":"202","severity":1,"message":"207","line":16,"column":8,"nodeType":"204","messageId":"205","endLine":16,"endColumn":11},{"ruleId":"202","severity":1,"message":"217","line":17,"column":8,"nodeType":"204","messageId":"205","endLine":17,"endColumn":24},{"ruleId":"202","severity":1,"message":"208","line":19,"column":10,"nodeType":"204","messageId":"205","endLine":19,"endColumn":20},{"ruleId":"202","severity":1,"message":"218","line":22,"column":9,"nodeType":"204","messageId":"205","endLine":22,"endColumn":17},{"ruleId":"202","severity":1,"message":"219","line":119,"column":13,"nodeType":"204","messageId":"205","endLine":119,"endColumn":16},{"ruleId":"202","severity":1,"message":"220","line":203,"column":13,"nodeType":"204","messageId":"205","endLine":203,"endColumn":25},{"ruleId":"202","severity":1,"message":"209","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":10},{"ruleId":"202","severity":1,"message":"216","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":24},{"ruleId":"202","severity":1,"message":"207","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":11},{"ruleId":"202","severity":1,"message":"217","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":24},{"ruleId":"202","severity":1,"message":"210","line":15,"column":10,"nodeType":"204","messageId":"205","endLine":15,"endColumn":20},{"ruleId":"202","severity":1,"message":"208","line":15,"column":22,"nodeType":"204","messageId":"205","endLine":15,"endColumn":32},{"ruleId":"202","severity":1,"message":"221","line":20,"column":8,"nodeType":"204","messageId":"205","endLine":20,"endColumn":25},{"ruleId":"202","severity":1,"message":"222","line":22,"column":8,"nodeType":"204","messageId":"205","endLine":22,"endColumn":15},{"ruleId":"202","severity":1,"message":"211","line":30,"column":5,"nodeType":"204","messageId":"205","endLine":30,"endColumn":7},{"ruleId":"202","severity":1,"message":"223","line":32,"column":10,"nodeType":"204","messageId":"205","endLine":32,"endColumn":19},{"ruleId":"202","severity":1,"message":"224","line":204,"column":13,"nodeType":"204","messageId":"205","endLine":204,"endColumn":14},{"ruleId":"202","severity":1,"message":"225","line":519,"column":23,"nodeType":"204","messageId":"205","endLine":519,"endColumn":24},{"ruleId":"202","severity":1,"message":"226","line":520,"column":23,"nodeType":"204","messageId":"205","endLine":520,"endColumn":24},{"ruleId":"227","severity":1,"message":"228","line":551,"column":29,"nodeType":"204","messageId":"229","endLine":551,"endColumn":35},{"ruleId":"227","severity":1,"message":"228","line":562,"column":27,"nodeType":"204","messageId":"229","endLine":562,"endColumn":33},{"ruleId":"198","replacedBy":"230"},{"ruleId":"200","replacedBy":"231"},{"ruleId":"202","severity":1,"message":"216","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":24},{"ruleId":"202","severity":1,"message":"207","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":11},{"ruleId":"202","severity":1,"message":"217","line":14,"column":8,"nodeType":"204","messageId":"205","endLine":14,"endColumn":24},{"ruleId":"202","severity":1,"message":"221","line":20,"column":8,"nodeType":"204","messageId":"205","endLine":20,"endColumn":25},{"ruleId":"202","severity":1,"message":"222","line":22,"column":8,"nodeType":"204","messageId":"205","endLine":22,"endColumn":15},{"ruleId":"202","severity":1,"message":"223","line":28,"column":10,"nodeType":"204","messageId":"205","endLine":28,"endColumn":19},{"ruleId":"202","severity":1,"message":"224","line":159,"column":13,"nodeType":"204","messageId":"205","endLine":159,"endColumn":14},{"ruleId":"202","severity":1,"message":"225","line":410,"column":23,"nodeType":"204","messageId":"205","endLine":410,"endColumn":24},{"ruleId":"202","severity":1,"message":"226","line":411,"column":23,"nodeType":"204","messageId":"205","endLine":411,"endColumn":24},{"ruleId":"227","severity":1,"message":"228","line":442,"column":29,"nodeType":"204","messageId":"229","endLine":442,"endColumn":35},{"ruleId":"227","severity":1,"message":"228","line":453,"column":27,"nodeType":"204","messageId":"229","endLine":453,"endColumn":33},{"ruleId":"202","severity":1,"message":"232","line":14,"column":8,"nodeType":"204","messageId":"205","endLine":14,"endColumn":16},{"ruleId":"202","severity":1,"message":"222","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":15},{"ruleId":"202","severity":1,"message":"233","line":16,"column":8,"nodeType":"204","messageId":"205","endLine":16,"endColumn":20},{"ruleId":"202","severity":1,"message":"221","line":24,"column":8,"nodeType":"204","messageId":"205","endLine":24,"endColumn":25},{"ruleId":"202","severity":1,"message":"234","line":26,"column":8,"nodeType":"204","messageId":"205","endLine":26,"endColumn":17},{"ruleId":"202","severity":1,"message":"235","line":28,"column":8,"nodeType":"204","messageId":"205","endLine":28,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":101,"column":27,"nodeType":"238","messageId":"239","endLine":101,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":101,"column":52,"nodeType":"238","messageId":"239","endLine":101,"endColumn":54},{"ruleId":"202","severity":1,"message":"240","line":224,"column":11,"nodeType":"204","messageId":"205","endLine":224,"endColumn":15},{"ruleId":"202","severity":1,"message":"240","line":254,"column":11,"nodeType":"204","messageId":"205","endLine":254,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":296,"column":25,"nodeType":"238","messageId":"239","endLine":296,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":296,"column":50,"nodeType":"238","messageId":"239","endLine":296,"endColumn":52},{"ruleId":"236","severity":1,"message":"237","line":306,"column":27,"nodeType":"238","messageId":"239","endLine":306,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":306,"column":54,"nodeType":"238","messageId":"239","endLine":306,"endColumn":56},{"ruleId":"236","severity":1,"message":"237","line":316,"column":25,"nodeType":"238","messageId":"239","endLine":316,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":316,"column":50,"nodeType":"238","messageId":"239","endLine":316,"endColumn":52},{"ruleId":"202","severity":1,"message":"241","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":14},{"ruleId":"202","severity":1,"message":"242","line":11,"column":8,"nodeType":"204","messageId":"205","endLine":11,"endColumn":17},{"ruleId":"202","severity":1,"message":"243","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":12},{"ruleId":"202","severity":1,"message":"232","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":16},{"ruleId":"202","severity":1,"message":"222","line":14,"column":8,"nodeType":"204","messageId":"205","endLine":14,"endColumn":15},{"ruleId":"202","severity":1,"message":"233","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":20},{"ruleId":"202","severity":1,"message":"244","line":16,"column":8,"nodeType":"204","messageId":"205","endLine":16,"endColumn":18},{"ruleId":"202","severity":1,"message":"245","line":17,"column":8,"nodeType":"204","messageId":"205","endLine":17,"endColumn":22},{"ruleId":"202","severity":1,"message":"246","line":19,"column":8,"nodeType":"204","messageId":"205","endLine":19,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":65,"column":17,"nodeType":"238","messageId":"239","endLine":65,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":65,"column":40,"nodeType":"238","messageId":"239","endLine":65,"endColumn":42},{"ruleId":"202","severity":1,"message":"209","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":10},{"ruleId":"202","severity":1,"message":"216","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":16},{"ruleId":"202","severity":1,"message":"247","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":12},{"ruleId":"202","severity":1,"message":"217","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":24},{"ruleId":"202","severity":1,"message":"210","line":15,"column":10,"nodeType":"204","messageId":"205","endLine":15,"endColumn":20},{"ruleId":"202","severity":1,"message":"208","line":15,"column":22,"nodeType":"204","messageId":"205","endLine":15,"endColumn":32},{"ruleId":"202","severity":1,"message":"211","line":22,"column":5,"nodeType":"204","messageId":"205","endLine":22,"endColumn":7},{"ruleId":"202","severity":1,"message":"209","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":10},{"ruleId":"202","severity":1,"message":"216","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":16},{"ruleId":"202","severity":1,"message":"217","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":24},{"ruleId":"202","severity":1,"message":"210","line":15,"column":10,"nodeType":"204","messageId":"205","endLine":15,"endColumn":20},{"ruleId":"202","severity":1,"message":"208","line":15,"column":22,"nodeType":"204","messageId":"205","endLine":15,"endColumn":32},{"ruleId":"202","severity":1,"message":"211","line":22,"column":5,"nodeType":"204","messageId":"205","endLine":22,"endColumn":7},{"ruleId":"198","replacedBy":"248"},{"ruleId":"200","replacedBy":"249"},{"ruleId":"202","severity":1,"message":"250","line":11,"column":27,"nodeType":"204","messageId":"205","endLine":11,"endColumn":33},{"ruleId":"202","severity":1,"message":"251","line":11,"column":35,"nodeType":"204","messageId":"205","endLine":11,"endColumn":40},{"ruleId":"252","severity":1,"message":"253","line":52,"column":60,"nodeType":"254","messageId":"255","endLine":52,"endColumn":61,"fix":"256"},{"ruleId":"236","severity":1,"message":"237","line":87,"column":55,"nodeType":"238","messageId":"239","endLine":87,"endColumn":57},{"ruleId":"202","severity":1,"message":"242","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":17},{"ruleId":"202","severity":1,"message":"222","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":15},{"ruleId":"202","severity":1,"message":"233","line":16,"column":8,"nodeType":"204","messageId":"205","endLine":16,"endColumn":20},{"ruleId":"202","severity":1,"message":"244","line":17,"column":8,"nodeType":"204","messageId":"205","endLine":17,"endColumn":18},{"ruleId":"202","severity":1,"message":"245","line":18,"column":8,"nodeType":"204","messageId":"205","endLine":18,"endColumn":22},{"ruleId":"202","severity":1,"message":"235","line":20,"column":8,"nodeType":"204","messageId":"205","endLine":20,"endColumn":17},{"ruleId":"202","severity":1,"message":"250","line":27,"column":27,"nodeType":"204","messageId":"205","endLine":27,"endColumn":33},{"ruleId":"202","severity":1,"message":"251","line":27,"column":35,"nodeType":"204","messageId":"205","endLine":27,"endColumn":40},{"ruleId":"202","severity":1,"message":"215","line":27,"column":42,"nodeType":"204","messageId":"205","endLine":27,"endColumn":46},{"ruleId":"202","severity":1,"message":"246","line":29,"column":8,"nodeType":"204","messageId":"205","endLine":29,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":71,"column":35,"nodeType":"238","messageId":"239","endLine":71,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":71,"column":66,"nodeType":"238","messageId":"239","endLine":71,"endColumn":68},{"ruleId":"236","severity":1,"message":"237","line":156,"column":23,"nodeType":"238","messageId":"239","endLine":156,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":156,"column":46,"nodeType":"238","messageId":"239","endLine":156,"endColumn":48},{"ruleId":"236","severity":1,"message":"237","line":166,"column":31,"nodeType":"238","messageId":"239","endLine":166,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":166,"column":62,"nodeType":"238","messageId":"239","endLine":166,"endColumn":64},{"ruleId":"236","severity":1,"message":"237","line":176,"column":30,"nodeType":"238","messageId":"239","endLine":176,"endColumn":32},{"ruleId":"236","severity":1,"message":"237","line":176,"column":60,"nodeType":"238","messageId":"239","endLine":176,"endColumn":62},{"ruleId":"236","severity":1,"message":"237","line":198,"column":23,"nodeType":"238","messageId":"239","endLine":198,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":198,"column":46,"nodeType":"238","messageId":"239","endLine":198,"endColumn":48},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'im' is defined but never used.","'withStyles' is defined but never used.","'hi' is assigned a value but never used.",["257"],["258"],"'logo' is defined but never used.","'Link' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'InputTag' is defined but never used.","'arr' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'DialogContentText' is defined but never used.","'Divider' is defined but never used.","'Copyright' is defined but never used.","'y' is assigned a value but never used.","'x' is assigned a value but never used.","'p' is assigned a value but never used.","no-redeclare","'skiInd' is already defined.","redeclared",["257"],["258"],"'ListItem' is defined but never used.","'Autocomplete' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'filt' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SearchIcon' is defined but never used.","'Grid' is defined but never used.",["257"],["258"],"'Router' is defined but never used.","'Route' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"259","text":"260"},"no-global-assign","no-unsafe-negation",[1515,1516],""]